export const data = [
  {
    module_name: ['acl'],
    get_group_list: {
      data: {
        id: 17630,
        title: 'get_group_list',
        desp: 'get a list of permission groups',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","get_group_list"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": { "groups": ["root", "test"] }}',
      module_name: ['acl'],
      params: [],
      results: [
        {
          id: 745998,
          keyName: 'groups',
          keyValue: null,
          desp: 'list of permission groups',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17630,
        },
      ],
    },
    add_group: {
      data: {
        id: 17631,
        title: 'add_group',
        desp: 'add permission group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","add_group", {"group": "test"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['acl'],
      params: [
        {
          id: 348255,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17631,
        },
      ],
      results: [
        {
          id: 745999,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: group already exists]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17631,
        },
        {
          id: 746000,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message ["exists"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17631,
        },
      ],
    },
    remove_group: {
      data: {
        id: 17632,
        title: 'remove_group',
        desp: 'remove permission group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","remove_group", {"group": "test"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['acl'],
      params: [
        {
          id: 348256,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17632,
        },
      ],
      results: [
        {
          id: 746001,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: group does not exist]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17632,
        },
      ],
    },
    get_acl_list: {
      data: {
        id: 17633,
        title: 'get_acl_list',
        desp: 'get all permissions for a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","get_acl_list", {"group": "test"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"acls":[]}}',
      module_name: ['acl'],
      params: [
        {
          id: 348257,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17633,
        },
      ],
      results: [
        {
          id: 746002,
          keyName: 'acls',
          keyValue: null,
          desp: 'permission list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17633,
        },
        {
          id: 746003,
          keyName: '?acls.scope',
          keyValue: null,
          desp: 'scope of permission',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17633,
        },
        {
          id: 746004,
          keyName: '?acls.entry',
          keyValue: null,
          desp: 'permission entry',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17633,
        },
        {
          id: 746005,
          keyName: '?acls.perm',
          keyValue: null,
          desp: 'permission',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17633,
        },
      ],
    },
    add_acl: {
      data: {
        id: 17634,
        title: 'add_acl',
        desp: 'add permission',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","add_acl", {"group": "test", "scope": "rpc", "entry": "system.info", "perm": "x"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"err_msg":"exists","err_code":-1}}',
      module_name: ['acl'],
      params: [
        {
          id: 348258,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17634,
        },
        {
          id: 348259,
          keyName: 'scope',
          keyValue: null,
          desp: 'scope of permission',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17634,
        },
        {
          id: 348260,
          keyName: 'entry',
          keyValue: null,
          desp: 'permission entry',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17634,
        },
        {
          id: 348261,
          keyName: 'perm',
          keyValue: null,
          desp: 'permission',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17634,
        },
      ],
      results: [
        {
          id: 746006,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: permission already exists]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17634,
        },
        {
          id: 746007,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17634,
        },
      ],
    },
    remove_acl: {
      data: {
        id: 17635,
        title: 'remove_acl',
        desp: 'remove permission',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","remove_acl", {"group": "test", "scope": "rpc", "entry": "system.info"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"err_msg":"not exists","err_code":-1}}',
      module_name: ['acl'],
      params: [
        {
          id: 348262,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17635,
        },
        {
          id: 348263,
          keyName: 'scope',
          keyValue: null,
          desp: 'scope of permission',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17635,
        },
        {
          id: 348264,
          keyName: 'entry',
          keyValue: null,
          desp: 'permission entry',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17635,
        },
      ],
      results: [
        {
          id: 746008,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: permission already exists]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17635,
        },
        {
          id: 746009,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17635,
        },
      ],
    },
    add_user: {
      data: {
        id: 17636,
        title: 'add_user',
        desp: 'add a user to a permission group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","add_user", {"group": "test", "username": "test"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['acl'],
      params: [
        {
          id: 348265,
          keyName: 'group',
          keyValue: null,
          desp: 'permission group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17636,
        },
        {
          id: 348266,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17636,
        },
      ],
      results: [],
    },
    remove_user: {
      data: {
        id: 17637,
        title: 'remove_user',
        desp: 'remove user',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","acl","remove_user", {"group": "test", "username": "test"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"err_msg":"not exists","err_code":-1}}',
      module_name: ['acl'],
      params: [
        {
          id: 348267,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17637,
        },
      ],
      results: [
        {
          id: 746010,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code [-1: the user does not exist]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17637,
        },
        {
          id: 746011,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17637,
        },
      ],
    },
  },
  {
    module_name: ['adguardhome'],
    get_config: {
      data: {
        id: 17479,
        title: 'get_config',
        desp: 'get the current configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:04',
        create_time: '2024-11-19T17:55:04',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","adguardhome","get_config",{}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"enabled":false,"dns_enabled":false}}',
      module_name: ['adguardhome'],
      params: [],
      results: [
        {
          id: 745104,
          keyName: 'enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17479,
        },
        {
          id: 745105,
          keyName: 'dns_enabled',
          keyValue: null,
          desp: 'whether adguardhome handles client requests',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17479,
        },
      ],
    },
    set_config: {
      data: {
        id: 17480,
        title: 'set_config',
        desp: 'modify the configuration file',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:04',
        create_time: '2024-11-19T17:55:04',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","adguardhome","set_config",{"enabled":true,"dns_enabled":false}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['adguardhome'],
      params: [
        {
          id: 347796,
          keyName: 'enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17480,
        },
        {
          id: 347797,
          keyName: 'dns_enabled',
          keyValue: null,
          desp: 'port 53 is redirected to 3053, whether adguardhome handles client requests',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17480,
        },
      ],
      results: [
        {
          id: 745106,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [1: Other DNS not turned off]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17480,
        },
        {
          id: 745107,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17480,
        },
      ],
    },
  },
  {
    module_name: ['bark'],
    get_status: {
      data: {
        id: 17481,
        title: 'get_status',
        desp: 'Get bark status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","bark","get_status"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"status":3, "pairing_code": "945712135847788"}}',
      module_name: ['bark'],
      params: [],
      results: [
        {
          id: 745108,
          keyName: 'status',
          keyValue: null,
          desp: 'The current status of the running router client, [1：connecting; 2: ready; 3: online]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17481,
        },
        {
          id: 745109,
          keyName: 'pairing_code',
          keyValue: null,
          desp: 'Pairing code between device and bark account',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17481,
        },
        {
          id: 745110,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get status.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17481,
        },
        {
          id: 745111,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17481,
        },
      ],
    },
    get_config: {
      data: {
        id: 17482,
        title: 'get_config',
        desp: 'Get bark settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","bark","get_config"]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"ipv6_enable":false,"enable":true}}',
      module_name: ['bark'],
      params: [],
      results: [
        {
          id: 745112,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether bark router client is enabled，[false：disable; true：enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17482,
        },
        {
          id: 745113,
          keyName: 'ipv6_enable',
          keyValue: null,
          desp: 'Whether IPv6 support is enabled, [false：disable; true：enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17482,
        },
        {
          id: 745114,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17482,
        },
        {
          id: 745115,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17482,
        },
      ],
    },
    set_config: {
      data: {
        id: 17483,
        title: 'set_config',
        desp: 'Set bark settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","bark","set_config",{"enable":true,"ipv6_enable":true}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['bark'],
      params: [
        {
          id: 347798,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable bark router client，[false：disable; true：enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17483,
        },
        {
          id: 347799,
          keyName: 'ipv6_enable',
          keyValue: null,
          desp: 'Whether to enable IPv6 support, [false：disable; true：enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17483,
        },
      ],
      results: [
        {
          id: 745116,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code, -1:Setup failed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17483,
        },
        {
          id: 745117,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17483,
        },
      ],
    },
    logout: {
      data: {
        id: 17484,
        title: 'logout',
        desp: 'Logout from current bark account',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","bark","logout"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['bark'],
      params: [],
      results: [
        {
          id: 745118,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Logout failed.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17484,
        },
        {
          id: 745119,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17484,
        },
      ],
    },
  },
  {
    module_name: ['black_white_list'],
    get_config: {
      data: {
        id: 17485,
        title: 'get_config',
        desp: 'get blacklist and whitelist configuration information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","black_white_list","get_config", {}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"mode": "black", "black_mac": ["08:10:7B:B3:E8:92","94:83:C4:0C:6D:D6"],"white_mac":["00:4E:36:27:15:20"]}}',
      module_name: ['black_white_list'],
      params: [],
      results: [
        {
          id: 745120,
          keyName: 'mode',
          keyValue: null,
          desp: '[black:blacklist; white:whitelist]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17485,
        },
        {
          id: 745121,
          keyName: 'mac',
          keyValue: null,
          desp: 'the mac address configured under the black and white list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17485,
        },
      ],
    },
    set_single_mac: {
      data: {
        id: 17486,
        title: 'set_single_mac',
        desp: 'set the configuration information of a single mac',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","black_white_list","set_single_mac",{"mode":"black", "operate":"add", "mac":"94:83:C4:0C:6D:D6"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['black_white_list'],
      params: [
        {
          id: 347800,
          keyName: 'mode',
          keyValue: null,
          desp: '[black:blacklist; white:whitelist]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17486,
        },
        {
          id: 347801,
          keyName: 'operate',
          keyValue: null,
          desp: '[add:add configuration information; del:delete configuration information]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17486,
        },
        {
          id: 347802,
          keyName: 'mac',
          keyValue: null,
          desp: 'manipulated MAC address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17486,
        },
      ],
      results: [
        {
          id: 745122,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17486,
        },
        {
          id: 745123,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17486,
        },
      ],
    },
    set_config: {
      data: {
        id: 17487,
        title: 'set_config',
        desp: 'set blacklist or whitelist',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:05',
        create_time: '2024-11-19T17:55:05',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","black_white_list","set_config",{"mode":"black", "mac":["08:10:7B:B3:E8:92","94:83:C4:0C:6D:D6"]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['black_white_list'],
      params: [
        {
          id: 347803,
          keyName: 'mode',
          keyValue: null,
          desp: '[black:blacklist; white:whitelist]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17487,
        },
        {
          id: 347804,
          keyName: 'mac',
          keyValue: null,
          desp: 'the mac address list set in the corresponding mode.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17487,
        },
      ],
      results: [
        {
          id: 745124,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-2 : whitelist information is empty; -1: mac type err.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17487,
        },
        {
          id: 745125,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17487,
        },
      ],
    },
  },
  {
    module_name: ['cable'],
    get_status: {
      data: {
        id: 17488,
        title: 'get_status',
        desp: 'get the wan port status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cable","get_status",{}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"protocol":"static","secondwan":{"mode":1},"status":1,"mode":0,"ipv4":{"gateway":"192.168.113.1","dns":["8.8.8.8"],"ip":"192.168.113.137/24"}}}',
      module_name: ['cable'],
      params: [],
      results: [
        {
          id: 745126,
          keyName: 'mode',
          keyValue: null,
          desp: 'the WAN status [0: work as WAN; 1: work as LAN; 2: bridge mode; 3: drop-in gateway mode; 4: passthrough mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17488,
        },
        {
          id: 745127,
          keyName: '?protocol',
          keyValue: null,
          desp: 'identifies how protocol the WAN port obtains IP [dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745128,
          keyName: 'status',
          keyValue: null,
          desp: 'the connection status [0: connect failed; 1: connect success; 2: connecting; 3: not connect phycially]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17488,
        },
        {
          id: 745129,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'IPv6 info, return when the status is 1 and IPv6 is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17488,
        },
        {
          id: 745130,
          keyName: '?ipv6.ip',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745131,
          keyName: '?ipv6.gateway',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745132,
          keyName: '?ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17488,
        },
        {
          id: 745133,
          keyName: '?ipv4',
          keyValue: null,
          desp: 'IPv4 info, return when the status is 1',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17488,
        },
        {
          id: 745134,
          keyName: '?ipv4.ip',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745135,
          keyName: '?ipv4.gateway',
          keyValue: null,
          desp: 'IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745136,
          keyName: '?ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17488,
        },
        {
          id: 745137,
          keyName: '?log',
          keyValue: null,
          desp: 'PPPoE info, return when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745138,
          keyName: '?passthrough',
          keyValue: null,
          desp: 'passthrough info, return when set as passthrough',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745139,
          keyName: '?passthrough.enable',
          keyValue: null,
          desp: 'passthrough status [0: disabled; 1: enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745140,
          keyName: '?passthrough.ip',
          keyValue: null,
          desp: 'passthrough mode, IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745141,
          keyName: '?passthrough.gateway',
          keyValue: null,
          desp: 'passthrough mode IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745142,
          keyName: '?passthrough.netmask',
          keyValue: null,
          desp: 'passthrough mode IPv4 netmask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745143,
          keyName: '?passthrough.dns',
          keyValue: null,
          desp: 'passthrough mode IPv4 dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745144,
          keyName: 'secondwan',
          keyValue: null,
          desp: 'secondwan status information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17488,
        },
        {
          id: 745145,
          keyName: 'secondwan.mode',
          keyValue: null,
          desp: 'the WAN status [0: work as WAN; 1: work as LAN; 2: bridge mode; 3: drop-in gateway mode; 4: passthrough mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17488,
        },
        {
          id: 745146,
          keyName: '?secondwan.secondwan.protocol',
          keyValue: null,
          desp: 'identifies how protocol the WAN port obtains IP [dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745147,
          keyName: 'ssecondwan.tatus',
          keyValue: null,
          desp: 'the connection status [0: connect failed; 1: connect success; 2: connecting; 3: not connect phycially]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17488,
        },
        {
          id: 745148,
          keyName: '?secondwan.ipv6',
          keyValue: null,
          desp: 'IPv6 info, return when the status is 1 and IPv6 is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17488,
        },
        {
          id: 745149,
          keyName: '?secondwan.ipv6.ip',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745150,
          keyName: '?secondwan.ipv6.gateway',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745151,
          keyName: '?secondwan.ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17488,
        },
        {
          id: 745152,
          keyName: '?secondwan.ipv4',
          keyValue: null,
          desp: 'IPv4 info, return when the status is 1',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17488,
        },
        {
          id: 745153,
          keyName: '?secondwan.ipv4.ip',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745154,
          keyName: '?secondwan.ipv4.gateway',
          keyValue: null,
          desp: 'IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745155,
          keyName: '?secondwan.ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17488,
        },
        {
          id: 745156,
          keyName: '?secondwan.log',
          keyValue: null,
          desp: 'PPPoE info, return when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745157,
          keyName: '?secondwan.passthrough',
          keyValue: null,
          desp: 'passthrough info, return when set as passthrough',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745158,
          keyName: '?secondwan.passthrough.enable',
          keyValue: null,
          desp: 'passthrough status [0: disabled; 1: enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745159,
          keyName: '?secondwan.passthrough.ip',
          keyValue: null,
          desp: 'passthrough mode, IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745160,
          keyName: '?secondwan.passthrough.gateway',
          keyValue: null,
          desp: 'passthrough mode IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745161,
          keyName: '?secondwan.passthrough.netmask',
          keyValue: null,
          desp: 'passthrough mode IPv4 netmask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745162,
          keyName: '?secondwan.passthrough.dns',
          keyValue: null,
          desp: 'passthrough mode IPv4 dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
        {
          id: 745163,
          keyName: '?err_code',
          keyValue: null,
          desp: "error code [-4: this device doesn't have the phycial WAN port; -5: this device doesn't have the virtual WAN port]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17488,
        },
        {
          id: 745164,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17488,
        },
      ],
    },
    get_config: {
      data: {
        id: 17489,
        title: 'get_config',
        desp: 'get the wan port config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cable","get_config",{"secondwan":false}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"ipv6":{"dns":[]},"protocol":"static","mtu":0,"ttl_ipv6":64,"ttl":64,"vlanid":10,"ipv4":{"gateway":"192.168.113.137","netmask":"255.255.255.0","dns":["8.8.8.8"],"ip":"192.168.113.1"}}}',
      module_name: ['cable'],
      params: [
        {
          id: 347805,
          keyName: '?secondwan',
          keyValue: null,
          desp: 'get secondwan config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17489,
        },
      ],
      results: [
        {
          id: 745165,
          keyName: '?protocol',
          keyValue: null,
          desp: 'identifies how protocol the WAN port obtains IP [dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745166,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'IPv6 info, return when IPv6 is enabled and set as static IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17489,
        },
        {
          id: 745167,
          keyName: '?ipv6.ip',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745168,
          keyName: '?ipv6.gateway',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745169,
          keyName: '?ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17489,
        },
        {
          id: 745170,
          keyName: '?ipv4',
          keyValue: null,
          desp: 'IPv4 info, return when set as static IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17489,
        },
        {
          id: 745171,
          keyName: '?ipv4.ip',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745172,
          keyName: '?ipv4.netmask',
          keyValue: null,
          desp: 'IPv4 netmask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745173,
          keyName: '?ipv4.gateway',
          keyValue: null,
          desp: 'IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745174,
          keyName: '?ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17489,
        },
        {
          id: 745175,
          keyName: '?username',
          keyValue: null,
          desp: 'PPPoE username, return when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745176,
          keyName: '?password',
          keyValue: null,
          desp: 'PPPoE password, return when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
        {
          id: 745177,
          keyName: '?vlanid',
          keyValue: null,
          desp: 'PPPoE or DHCP or static VLAN ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17489,
        },
        {
          id: 745178,
          keyName: '?mtu',
          keyValue: null,
          desp: 'PPPoE or DHCP or static MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17489,
        },
        {
          id: 745179,
          keyName: '?ttl',
          keyValue: null,
          desp: 'PPPoE or DHCP or static TTL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17489,
        },
        {
          id: 745180,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'PPPoE or DHCP or static TTL_IPV6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17489,
        },
        {
          id: 745181,
          keyName: '?err_code',
          keyValue: null,
          desp: "error code [-4: this device doesn't have the phycial WAN port; -5: this device doesn't have the virtual WAN port]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17489,
        },
        {
          id: 745182,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17489,
        },
      ],
    },
    set_config: {
      data: {
        id: 17490,
        title: 'set_config',
        desp: 'set the WAN port access mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cable","set_config",{"protocol":"pppoe","vlanid":1,"ttl":64,"ttl_ipv6":64,"mtu":1500,"username":"test","password":"123456","secondwan":false}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":[]}',
      module_name: ['cable'],
      params: [
        {
          id: 347806,
          keyName: 'protocol',
          keyValue: null,
          desp: 'identifies how protocol the WAN port obtains IP[dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347807,
          keyName: '?username',
          keyValue: null,
          desp: 'set the PPPoE username, required when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347808,
          keyName: '?password',
          keyValue: null,
          desp: 'set the PPPoE password, required when set as PPPoE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347809,
          keyName: '?vlanid',
          keyValue: null,
          desp: 'set the DHCP or PPPOE or static vlanid, range 1-4094, 0 by default',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17490,
        },
        {
          id: 347810,
          keyName: '?mtu',
          keyValue: null,
          desp: 'set the DHCP or PPPOE or static mtu, range 572-9200, 1500 by default',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17490,
        },
        {
          id: 347811,
          keyName: '?ttl',
          keyValue: null,
          desp: 'set the DHCP or PPPOE or static ttl, range 1-255, 64 by default',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17490,
        },
        {
          id: 347812,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'set the DHCP or PPPOE or static ttl_ipv6 1-255, 64 by default',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17490,
        },
        {
          id: 347813,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'set the IPv6 info, required when IPv6 is enabled and set as static IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17490,
        },
        {
          id: 347814,
          keyName: '?ipv6.ip',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347815,
          keyName: '?ipv6.gateway',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347816,
          keyName: '?ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17490,
        },
        {
          id: 347817,
          keyName: '?ipv4',
          keyValue: null,
          desp: 'set the IPv4 info, required when set as static IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17490,
        },
        {
          id: 347818,
          keyName: '?ipv4.ip',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347819,
          keyName: '?ipv4.netmask',
          keyValue: null,
          desp: 'IPv4 netmask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347820,
          keyName: '?ipv4.gateway',
          keyValue: null,
          desp: 'IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
        {
          id: 347821,
          keyName: '?ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17490,
        },
        {
          id: 347822,
          keyName: '?secondwan',
          keyValue: null,
          desp: 'set secondwan',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17490,
        },
      ],
      results: [
        {
          id: 745183,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: parameter error; -2: ip format error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17490,
        },
        {
          id: 745184,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17490,
        },
      ],
    },
    get_ports_config: {
      data: {
        id: 17491,
        title: 'get_ports_config',
        desp: 'Query the ports config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cable","get_ports_config"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ports": [{"name":"wan","silk":"wan","speed":{"configurable":true,"speeds":[10,100,1000,2500],"speed":2500,"duplex":"full"},"macaddr":{"mode":"random","update":"time","period":7,"macaddr":"94:83:C4:00:00:00"}},{"name":"secondwan","silk":"wan/lan1","speed":{"configurable":true,"speeds":[10,100,1000],"speed":1000,"duplex":"half"},"macaddr":{"mode":"random","update":"time","period":7,"macaddr":"94:83:C4:00:0:01"}}]}}',
      module_name: ['cable'],
      params: [],
      results: [
        {
          id: 745185,
          keyName: 'ports',
          keyValue: null,
          desp: 'ports config array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17491,
        },
        {
          id: 745186,
          keyName: 'ports.name',
          keyValue: null,
          desp: 'port name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745187,
          keyName: 'ports.silk',
          keyValue: null,
          desp: 'port silk-screen',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745188,
          keyName: 'ports.mode',
          keyValue: null,
          desp: "work mode: ['wan', 'lan']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745189,
          keyName: 'ports.default_mode',
          keyValue: null,
          desp: "default work mode: ['wan', 'lan']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745190,
          keyName: 'ports.macaddr',
          keyValue: null,
          desp: 'port macaddr config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17491,
        },
        {
          id: 745191,
          keyName: 'ports.macaddr.mode',
          keyValue: null,
          desp: "port macaddr mode: ['default'; 'clone'; 'random']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745192,
          keyName: 'ports.macaddr.update',
          keyValue: null,
          desp: "random macaddr update policy: ['none'; 'reboot'; 'time']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
        {
          id: 745193,
          keyName: 'ports.macaddr.period',
          keyValue: null,
          desp: "update period in hours required if macaddr.update is 'time', must be great than 0",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17491,
        },
        {
          id: 745194,
          keyName: 'ports.macaddr.macaddr',
          keyValue: null,
          desp: 'port macaddr',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17491,
        },
      ],
    },
    get_ports_status: {
      data: {
        id: 17492,
        title: 'get_ports_status',
        desp: 'Query the ports status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","netmode","get_ports_status"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ports": [{"name":"wan","speed":2500,"duplex":"full"},{"name":"secondwan","speed":1000,"duplex":"half"}]}}',
      module_name: ['cable'],
      params: [],
      results: [
        {
          id: 745195,
          keyName: 'ports',
          keyValue: null,
          desp: 'ports status array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17492,
        },
        {
          id: 745196,
          keyName: 'ports.name',
          keyValue: null,
          desp: 'port name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17492,
        },
        {
          id: 745197,
          keyName: '?ports.speed',
          keyValue: null,
          desp: 'port speed: [10, 100, 1000, 2500]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17492,
        },
        {
          id: 745198,
          keyName: '?ports.duplex',
          keyValue: null,
          desp: "port duplex mode: ['half', 'full']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17492,
        },
      ],
    },
    set_port_config: {
      data: {
        id: 17493,
        title: 'set_port_config',
        desp: 'set port config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cable","set_port_config", {"name":"secondwan","speed":1000,"duplex":"half","macaddr":{"mode":"random","update":"time","period":7,"macaddr":"94:83:C4:00:0:01"}}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result":null}}',
      module_name: ['cable'],
      params: [
        {
          id: 347823,
          keyName: 'name',
          keyValue: null,
          desp: 'port name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17493,
        },
        {
          id: 347824,
          keyName: 'mode',
          keyValue: null,
          desp: "work mode: ['wan', 'lan']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17493,
        },
        {
          id: 347825,
          keyName: 'macaddr',
          keyValue: null,
          desp: 'macaddr config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17493,
        },
        {
          id: 347826,
          keyName: 'macaddr.mode',
          keyValue: null,
          desp: "macaddr mode: ['default'; 'clone'; 'random']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17493,
        },
        {
          id: 347827,
          keyName: 'macaddr.update',
          keyValue: null,
          desp: "random macaddr update policy: ['none'; 'reboot'; 'time']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17493,
        },
        {
          id: 347828,
          keyName: 'macaddr.period',
          keyValue: null,
          desp: "update period in hours required if macaddr.update is 'time', must be great than 0",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17493,
        },
        {
          id: 347829,
          keyName: 'macaddr.macaddr',
          keyValue: null,
          desp: 'port macaddr',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17493,
        },
      ],
      results: [
        {
          id: 745199,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: unsupported port name, -2: unsupported work mode, -3: need remove internet cable ]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17493,
        },
        {
          id: 745200,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17493,
        },
      ],
    },
    wan_proto_detect: {
      data: {
        id: 17494,
        title: 'wan_proto_detect',
        desp: 'detect wan port proto support',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","cable","wan_proto_detect",{}] }',
      out_example: '{"id":null,"jsonrpc":"2.0","result":{"suggest_proto":"dhcp","internet":true}}',
      module_name: ['cable'],
      params: [],
      results: [
        {
          id: 745201,
          keyName: 'suggest_proto',
          keyValue: null,
          desp: 'suggest wan proto ,dhcp or pppoe',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17494,
        },
        {
          id: 745202,
          keyName: 'internet',
          keyValue: null,
          desp: 'ethernet internet access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17494,
        },
      ],
    },
    init_status: {
      data: {
        id: 17495,
        title: 'init_status',
        desp: 'get ethernet status when initialize',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","cable","init_status",{}] }',
      out_example:
        '{"id":null,"jsonrpc":"2.0","result":{"wan":true,"proto":"dhcp","internet":true,"lan":true}}',
      module_name: ['cable'],
      params: [],
      results: [
        {
          id: 745203,
          keyName: 'wan',
          keyValue: null,
          desp: 'wan port has cable connected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17495,
        },
        {
          id: 745204,
          keyName: 'lan',
          keyValue: null,
          desp: 'any lan port has cable connected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17495,
        },
        {
          id: 745205,
          keyName: 'proto',
          keyValue: null,
          desp: 'wan current proto , dhcp or pppoe',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17495,
        },
        {
          id: 745206,
          keyName: 'internet',
          keyValue: null,
          desp: 'ethernet internet access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17495,
        },
      ],
    },
  },
  {
    module_name: ['clients'],
    get_list: {
      data: {
        id: 17496,
        title: 'get_list',
        desp: 'Get device list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","get_list",{}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"clients":[{"mac":"18:c0:4d:dc:4f:cc","type":2,"limit_tx":2048,"limit_rx":2048,"remote":false,"name":"DESKTOP-HO0T5C1","vendor":"unknown","ip":"192.168.8.148","ipv6":["fe80:0000:0000:0000:500b:b1a9:e333:bf7d"],"tx":0,"total_rx":397117728,"rx":0,"blocked":false,"iface":"eth0","online":true,"online_time":"1638517436","total_tx":470371319}]}}',
      module_name: ['clients'],
      params: [],
      results: [
        {
          id: 745207,
          keyName: 'clients',
          keyValue: null,
          desp: 'Client list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17496,
        },
        {
          id: 745208,
          keyName: 'clients.mac',
          keyValue: null,
          desp: 'Client MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745209,
          keyName: 'clients.ip',
          keyValue: null,
          desp: 'Client IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745210,
          keyName: 'clients.ipv6',
          keyValue: null,
          desp: 'Client IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17496,
        },
        {
          id: 745211,
          keyName: 'clients.tx',
          keyValue: null,
          desp: 'Uplink rate of the client (Unit: Bps)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745212,
          keyName: 'clients.rx',
          keyValue: null,
          desp: 'The downlink rate of the client (Unit: Bps)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745213,
          keyName: 'clients.total_tx',
          keyValue: null,
          desp: 'All upstream traffic of the client(Unit:Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745214,
          keyName: 'clients.total_rx',
          keyValue: null,
          desp: 'All downstream traffic of the client(Unit:Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745215,
          keyName: 'clients.limit_tx',
          keyValue: null,
          desp: 'Set uplink rate of client speed limit(Unit:KB/S)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745216,
          keyName: 'clients.limit_rx',
          keyValue: null,
          desp: 'Set downlink rate of client speed limit(Unit:KB/S)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745217,
          keyName: 'clients.blocked',
          keyValue: null,
          desp: 'GL.iNet firewall blacklist, true means to join the blacklist, false means not to join the blacklist',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17496,
        },
        {
          id: 745218,
          keyName: 'clients.online_time',
          keyValue: null,
          desp: 'Timestamp when the client came online',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745219,
          keyName: 'clients.online',
          keyValue: null,
          desp: 'True is online, false is offline',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17496,
        },
        {
          id: 745220,
          keyName: 'clients.iface',
          keyValue: null,
          desp: 'The interface name that the client connects to',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745221,
          keyName: 'clients.type',
          keyValue: null,
          desp: 'Interface type of client connection,[{0-2.4G};{1-5G};{2-lan};{3-2.4G guest};{4-5G guest};{5-unknown},{6-Dongle},{7-bypass route},{8-tap s2s}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745222,
          keyName: '?clients.name',
          keyValue: null,
          desp: 'The hostname of the client device (no value is returned)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745223,
          keyName: 'clients.remote',
          keyValue: null,
          desp: 'If true, it means that the current client is connecting to the router',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17496,
        },
        {
          id: 745224,
          keyName: '?clients.alias',
          keyValue: null,
          desp: 'The name of the user setting (no value is returned)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745225,
          keyName: '?clients.class',
          keyValue: null,
          desp: 'The device type set by the user (No value is not returned)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
        {
          id: 745226,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17496,
        },
        {
          id: 745227,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17496,
        },
      ],
    },
    block_client: {
      data: {
        id: 17497,
        title: 'block_client',
        desp: "Set the client's blacklist property",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","block_client",{"mac":"84:7a:88:79:e5:13","block":true}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result": null}',
      module_name: ['clients'],
      params: [
        {
          id: 347830,
          keyName: 'mac',
          keyValue: null,
          desp: 'The mac address of the client to be blacklisted',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17497,
        },
        {
          id: 347831,
          keyName: 'block',
          keyValue: null,
          desp: 'If true, the client of the specified mac cannot access the Internet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17497,
        },
      ],
      results: [
        {
          id: 745228,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17497,
        },
        {
          id: 745229,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17497,
        },
      ],
    },
    remove_offline: {
      data: {
        id: 17498,
        title: 'remove_offline',
        desp: 'Delete offline client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","remove_offline",{"mac":"FF:FF:FF:FF:FF:FF"}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result": null}',
      module_name: ['clients'],
      params: [
        {
          id: 347832,
          keyName: 'mac',
          keyValue: null,
          desp: 'The mac address of the client to be deleted (if the value is FF:FF:FF:FF:FF:FF, it means to delete all offline clients)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17498,
        },
      ],
      results: [
        {
          id: 745230,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17498,
        },
        {
          id: 745231,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17498,
        },
      ],
    },
    clean_traffic: {
      data: {
        id: 17499,
        title: 'clean_traffic',
        desp: 'Clear the traffic statistics of all clients',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","clean_traffic",{}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result": []}',
      module_name: ['clients'],
      params: [],
      results: [],
    },
    get_status: {
      data: {
        id: 17500,
        title: 'get_status',
        desp: 'Get the status of the total number of clients online',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","get_status",{}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result": {"cable_total":"1","wireless_total":"0"}}',
      module_name: ['clients'],
      params: [],
      results: [
        {
          id: 745232,
          keyName: 'cable_total',
          keyValue: null,
          desp: 'The total number of wired clients online',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17500,
        },
        {
          id: 745233,
          keyName: 'wireless_total',
          keyValue: null,
          desp: 'The total number of wireless clients online',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17500,
        },
        {
          id: 745234,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17500,
        },
        {
          id: 745235,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17500,
        },
      ],
    },
    set_info: {
      data: {
        id: 17501,
        title: 'set_info',
        desp: 'Setting name',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:06',
        create_time: '2024-11-19T17:55:06',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","clients","set_info",{"mac":"16:c3:7b:72:19:74","alias":"test","class":"tv"}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result": null}',
      module_name: ['clients'],
      params: [
        {
          id: 347833,
          keyName: 'mac',
          keyValue: null,
          desp: 'MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17501,
        },
        {
          id: 347834,
          keyName: '?alias',
          keyValue: null,
          desp: 'The name of the user setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17501,
        },
        {
          id: 347835,
          keyName: '?class',
          keyValue: null,
          desp: 'The device type set by the user',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17501,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['cloud'],
    get_config: {
      data: {
        id: 17502,
        title: 'get_config',
        desp: 'get the current configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","get_config"]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"cloud_enable": "true","rtty_ssh":"true","rtty_web":"true","serverzone":"China","serverzones":["Europe","America","China"],"name":"gclone","email":"88666@126.com","bindtime":"192168","token_invalid":false}}',
      module_name: ['cloud'],
      params: [],
      results: [
        {
          id: 745236,
          keyName: 'cloud_enable',
          keyValue: null,
          desp: 'enable connect to cloud',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17502,
        },
        {
          id: 745237,
          keyName: 'rtty_ssh',
          keyValue: null,
          desp: 'enable rtty ssh',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17502,
        },
        {
          id: 745238,
          keyName: 'rtty_web',
          keyValue: null,
          desp: 'enable rtty web',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17502,
        },
        {
          id: 745239,
          keyName: 'serverzone',
          keyValue: null,
          desp: 'currently set server zone',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
        {
          id: 745240,
          keyName: 'serverzones',
          keyValue: null,
          desp: 'all optional server zones',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17502,
        },
        {
          id: 745241,
          keyName: 'name',
          keyValue: null,
          desp: 'DDNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
        {
          id: 745242,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
        {
          id: 745243,
          keyName: 'email',
          keyValue: null,
          desp: 'user email',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
        {
          id: 745244,
          keyName: 'bindtime',
          keyValue: null,
          desp: 'user binding time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
        {
          id: 745245,
          keyName: 'token_invalid',
          keyValue: null,
          desp: 'invalid token',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17502,
        },
        {
          id: 745246,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17502,
        },
        {
          id: 745247,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17502,
        },
      ],
    },
    set_config: {
      data: {
        id: 17503,
        title: 'set_config',
        desp: 'modify the configuration file',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","set_config",{"cloud_enable": "true","rtty_ssh":"true","rtty_web":"true","serverzone":"China"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['cloud'],
      params: [
        {
          id: 347836,
          keyName: '?cloud_enable',
          keyValue: null,
          desp: 'enable connect to cloud',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17503,
        },
        {
          id: 347837,
          keyName: '?rtty_ssh',
          keyValue: null,
          desp: 'enable rtty ssh',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17503,
        },
        {
          id: 347838,
          keyName: '?rtty_web',
          keyValue: null,
          desp: 'enable rtty web',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17503,
        },
        {
          id: 347839,
          keyName: '?clear_token',
          keyValue: null,
          desp: 'clear token',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17503,
        },
        {
          id: 347840,
          keyName: '?serverzone',
          keyValue: null,
          desp: 'server zone',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17503,
        },
        {
          id: 347841,
          keyName: '?server_name',
          keyValue: null,
          desp: 'server name(serverzone server_name pick one of two)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17503,
        },
        {
          id: 347842,
          keyName: '?templete',
          keyValue: null,
          desp: 'template state(valid for 2B)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17503,
        },
        {
          id: 347843,
          keyName: '?url',
          keyValue: null,
          desp: 'server url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17503,
        },
      ],
      results: [
        {
          id: 745248,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17503,
        },
        {
          id: 745249,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17503,
        },
      ],
    },
    bind_device: {
      data: {
        id: 17504,
        title: 'bind_device',
        desp: 'bind device',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","bind_device",{"token": "afsdgdfh","var_id":"sdgfhf"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['cloud'],
      params: [
        {
          id: 347844,
          keyName: 'token',
          keyValue: null,
          desp: 'login token',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17504,
        },
        {
          id: 347845,
          keyName: '?org_id',
          keyValue: null,
          desp: 'bind to organization',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17504,
        },
        {
          id: 347846,
          keyName: '?var_id',
          keyValue: null,
          desp: 'bind to var',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17504,
        },
      ],
      results: [
        {
          id: 745250,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17504,
        },
        {
          id: 745251,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17504,
        },
      ],
    },
    rebind: {
      data: {
        id: 17505,
        title: 'rebind',
        desp: 'rebind device',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","rebind",{"token": "afsdgdfh"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['cloud'],
      params: [
        {
          id: 347847,
          keyName: 'token',
          keyValue: null,
          desp: 'login token',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17505,
        },
      ],
      results: [
        {
          id: 745252,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17505,
        },
        {
          id: 745253,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17505,
        },
      ],
    },
    bind_info: {
      data: {
        id: 17506,
        title: 'bind_info',
        desp: 'set binding information: Called by the cloud platform, when username is empty, it means unbinding',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud-batch-manage","bind_info",{"username":"glcloud","email":"126@qq.com","bindtime":"192168"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['cloud'],
      params: [
        {
          id: 347848,
          keyName: 'username',
          keyValue: null,
          desp: 'cloud user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17506,
        },
        {
          id: 347849,
          keyName: 'email',
          keyValue: null,
          desp: 'cloud user email',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17506,
        },
        {
          id: 347850,
          keyName: 'bindtime',
          keyValue: null,
          desp: 'user binding time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17506,
        },
      ],
      results: [
        {
          id: 745254,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17506,
        },
        {
          id: 745255,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17506,
        },
      ],
    },
    unbind: {
      data: {
        id: 17507,
        title: 'unbind',
        desp: 'unbind the device',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","unbind"]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"api":"cloud/unbind","code": -1}}',
      module_name: ['cloud'],
      params: [],
      results: [
        {
          id: 745256,
          keyName: 'api',
          keyValue: null,
          desp: 'unbind api',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17507,
        },
        {
          id: 745257,
          keyName: 'code',
          keyValue: null,
          desp: 'result code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17507,
        },
        {
          id: 745258,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [0: ok; -1: network not reachable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17507,
        },
        {
          id: 745259,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17507,
        },
      ],
    },
    get_batch_config: {
      data: {
        id: 17508,
        title: 'get_batch_config',
        desp: 'get batch configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","get_batch_config"]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"local_domain":"console.gl-inet.com","firewall":{"rules":[],"port_forwards":[{"enabled":true,"src_dport":"566","id":"cfg193837","dest_ip":"192.168.8.100","dest_port":666,"name":"ff","src":"wan","dest":"lan","proto":"tcp udp"}]},"hostname":"GL-AXT1800","wifi":[{"band":"5G","random_bssid":true,"ifaces":[{"enabled":true,"ssid":"GL-AXT1800-b9c-5G","encryption":"psk2","name":"default_radio0","guest":false,"hidden":false,"key":"goodlife"},{"enabled":true,"ssid":"GL-AXT1800-b9c-5G-Guest","encryption":"psk2","name":"guest5g","guest":true,"hidden":false,"key":"goodlife"}],"channels":[{"dfs":false,"channel":36},{"dfs":false,"channel":40},{"dfs":false,"channel":44},{"dfs":false,"channel":48},{"dfs":true,"channel":52},{"dfs":true,"channel":56},{"dfs":true,"channel":60},{"dfs":true,"channel":64},{"dfs":true,"channel":100},{"dfs":true,"channel":104},{"dfs":true,"channel":108},{"dfs":true,"channel":112},{"dfs":true,"channel":116},{"dfs":true,"channel":120},{"dfs":true,"channel":124},{"dfs":true,"channel":128},{"dfs":true,"channel":132},{"dfs":true,"channel":136},{"dfs":true,"channel":140},{"dfs":true,"channel":144},{"dfs":false,"channel":149},{"dfs":false,"channel":153},{"dfs":false,"channel":157},{"dfs":false,"channel":161},{"dfs":false,"channel":165}],"device":"radio0","hwmode":"11n\\/ac\\/ax","txpower":"Max","hwmodes":["11ac\\/ax","11n\\/ac\\/ax","11a\\/n\\/ac\\/ax","11a\\/n\\/ac"],"channel":0,"htmodes":{"11a\\/n\\/ac":80,"11n\\/ac\\/ax":80,"11a\\/n\\/ac\\/ax":80,"11ac\\/ax":80,"auto":false},"encryptions":["none","psk2","psk-mixed","sae","sae-mixed"],"htmode":"80"},{"band":"2G","random_bssid":true,"ifaces":[{"enabled":true,"ssid":"123","encryption":"psk2","name":"default_radio1","guest":false,"hidden":true,"key":"goodlife"},{"enabled":true,"ssid":"999","encryption":"psk2","name":"guest2g","guest":true,"hidden":false,"key":"goodlife"}],"channels":[{"dfs":false,"channel":1},{"dfs":false,"channel":2},{"dfs":false,"channel":3},{"dfs":false,"channel":4},{"dfs":false,"channel":5},{"dfs":false,"channel":6},{"dfs":false,"channel":7},{"dfs":false,"channel":8},{"dfs":false,"channel":9},{"dfs":false,"channel":10},{"dfs":false,"channel":11}],"device":"radio1","hwmode":"11g\\/n\\/ax","txpower":"Max","hwmodes":["11n\\/ax","11g\\/n\\/ax","11b\\/g\\/n\\/ax","11b\\/g\\/n"],"channel":0,"htmodes":{"11b\\/g\\/n":40,"11b\\/g\\/n\\/ax":40,"auto":true,"11n\\/ax":40,"11g\\/n\\/ax":40},"encryptions":["none","psk2","psk-mixed","sae","sae-mixed"],"htmode":"40"}],"network":{"guest":{"netmask":"255.255.255.0","dhcp_start":"100","ipaddr":"192.168.19.1","dhcp_limit":"150"},"lan":{"netmask":"255.255.255.0","dhcp_start":"100","ipaddr":"192.168.8.1","dhcp_limit":"150"},"wan6":{"gateway6":"ddb4:1aed:acf9::","proto":"dhcp","dns":[],"ip6addr":"ddb4:1aed:acf9::\\/48","dns6":["ddb4:1aed:acf9::"]}},"language":"zh-cn","timezone":"Asia\\/Shanghai"}}',
      module_name: ['cloud'],
      params: [],
      results: [
        {
          id: 745260,
          keyName: 'network',
          keyValue: null,
          desp: 'network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745261,
          keyName: 'network.wan',
          keyValue: null,
          desp: 'ethernet configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745262,
          keyName: 'network.wan.proto',
          keyValue: null,
          desp: 'interface protocol [dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745263,
          keyName: 'network.wan.username',
          keyValue: null,
          desp: 'PPPOE username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745264,
          keyName: 'network.wan.password',
          keyValue: null,
          desp: 'PPPOE password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745265,
          keyName: 'network.wan.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745266,
          keyName: 'network.wan.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745267,
          keyName: 'network.wan.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745268,
          keyName: 'network.wan.dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745269,
          keyName: 'network.wan.ip6addr',
          keyValue: null,
          desp: 'IPv6 address(include subnet mask,example: ddb4:1aed:acf9::/48)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745270,
          keyName: 'network.wan.gateway6',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745271,
          keyName: 'network.wan.dns6',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745272,
          keyName: 'network.lan',
          keyValue: null,
          desp: 'private network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745273,
          keyName: 'network.lan.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745274,
          keyName: 'network.lan.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745275,
          keyName: 'network.lan.dhcp_start',
          keyValue: null,
          desp: 'DHCP start address offset',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745276,
          keyName: 'network.lan.dhcp_limit',
          keyValue: null,
          desp: 'DHCP number of address pools',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745277,
          keyName: 'network.guest',
          keyValue: null,
          desp: 'guest network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745278,
          keyName: 'network.guest.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745279,
          keyName: 'network.guest.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745280,
          keyName: 'network.guest.dhcp_start',
          keyValue: null,
          desp: 'DHCP start address offset',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745281,
          keyName: 'network.guest.dhcp_limit',
          keyValue: null,
          desp: 'DHCP number of address pools',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745282,
          keyName: 'wifi',
          keyValue: null,
          desp: 'Wi-Fi configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745283,
          keyName: 'wifi.hwmodes',
          keyValue: null,
          desp: 'list of supported hardware modes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745284,
          keyName: 'wifi.htmodes',
          keyValue: null,
          desp: 'the maximum bandwidth supported by each hardware mode, the auto option indicates whether to support automatic bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745285,
          keyName: 'wifi.channels',
          keyValue: null,
          desp: 'list of supported channels',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745286,
          keyName: 'wifi.encryptions',
          keyValue: null,
          desp: 'list of supported encryption',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745287,
          keyName: 'wifi.band',
          keyValue: null,
          desp: 'Wi-Fi band [2G; 5G]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745288,
          keyName: 'wifi.hwmode',
          keyValue: null,
          desp: 'currently configured hardware mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745289,
          keyName: 'wifi.htmode',
          keyValue: null,
          desp: 'currently configured bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745290,
          keyName: 'wifi.channel',
          keyValue: null,
          desp: 'currently configured channel (0 means auto)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745291,
          keyName: 'wifi.txpower',
          keyValue: null,
          desp: 'currently configured power',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745292,
          keyName: 'wifi.device',
          keyValue: null,
          desp: 'Wi-Fi device name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745293,
          keyName: 'wifi.ifaces',
          keyValue: null,
          desp: 'WiFi interface configuration list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745294,
          keyName: 'wifi.ifaces.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745295,
          keyName: 'wifi.ifaces.ssid',
          keyValue: null,
          desp: 'Wi-Fi name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745296,
          keyName: 'wifi.ifaces.hidden',
          keyValue: null,
          desp: 'whether to hide SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745297,
          keyName: 'wifi.ifaces.encryption',
          keyValue: null,
          desp: 'encryption',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745298,
          keyName: 'wifi.ifaces.key',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745299,
          keyName: 'wifi.ifaces.guest',
          keyValue: null,
          desp: 'is it a guest Wi-Fi',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745300,
          keyName: 'wifi.ifaces.name',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745301,
          keyName: 'wifi.random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745302,
          keyName: 'firewall',
          keyValue: null,
          desp: 'firewall configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745303,
          keyName: 'firewall.rules',
          keyValue: null,
          desp: 'firewall rules',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745304,
          keyName: '?firewall.rules.name',
          keyValue: null,
          desp: 'firewall name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745305,
          keyName: '?firewall.rules.src',
          keyValue: null,
          desp: 'source zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745306,
          keyName: '?firewall.rules.src_ip',
          keyValue: null,
          desp: 'source IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745307,
          keyName: '?firewall.rules.src_mac',
          keyValue: null,
          desp: 'source MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745308,
          keyName: '?firewall.rules.src_port',
          keyValue: null,
          desp: 'source port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745309,
          keyName: '?firewall.rules.proto',
          keyValue: null,
          desp: 'protocol [tcp udp; tcp; udp]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745310,
          keyName: '?firewall.rules.dest',
          keyValue: null,
          desp: 'destination zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745311,
          keyName: '?firewall.rules.dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745312,
          keyName: '?firewall.rules.dest_port',
          keyValue: null,
          desp: 'destination port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745313,
          keyName: 'firewall.rules.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745314,
          keyName: 'firewall.rules.target',
          keyValue: null,
          desp: 'action [ACCEPT; REJECT; DROP]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745315,
          keyName: 'firewall.rules.id',
          keyValue: null,
          desp: 'configuration item ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745316,
          keyName: 'firewall.port_forwards',
          keyValue: null,
          desp: 'port forwarding configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17508,
        },
        {
          id: 745317,
          keyName: '?firewall.port_forwards.name',
          keyValue: null,
          desp: 'firewall name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745318,
          keyName: '?firewall.port_forwards.proto',
          keyValue: null,
          desp: 'protocol [tcp udp; tcp; udp]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745319,
          keyName: 'firewall.port_forwards.src',
          keyValue: null,
          desp: 'source zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745320,
          keyName: 'firewall.port_forwards.src_dport',
          keyValue: null,
          desp: 'source port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745321,
          keyName: 'firewall.port_forwards.dest',
          keyValue: null,
          desp: 'destination zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745322,
          keyName: 'firewall.port_forwards.dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745323,
          keyName: 'firewall.port_forwards.dest_port',
          keyValue: null,
          desp: 'destination port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17508,
        },
        {
          id: 745324,
          keyName: 'firewall.port_forwards.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745325,
          keyName: 'firewall.port_forwards.id',
          keyValue: null,
          desp: 'configuration item ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745326,
          keyName: 'firewall.dmz',
          keyValue: null,
          desp: 'DMZ configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745327,
          keyName: 'firewall.dmz.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17508,
        },
        {
          id: 745328,
          keyName: 'firewall.dmz.dest_ip',
          keyValue: null,
          desp: 'inernal IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745329,
          keyName: 'firewall.dmz.priority',
          keyValue: null,
          desp: "whether priority of DMZ higher than Port-Forward's[true, false]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745330,
          keyName: 'system',
          keyValue: null,
          desp: 'system parameters',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17508,
        },
        {
          id: 745331,
          keyName: 'system.timezone',
          keyValue: null,
          desp: 'time zone',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745332,
          keyName: 'system.zonename',
          keyValue: null,
          desp: 'time zone name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745333,
          keyName: 'system.local_domain',
          keyValue: null,
          desp: 'device local domain name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745334,
          keyName: 'system.language',
          keyValue: null,
          desp: 'device native Web page language',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745335,
          keyName: 'system.hostname',
          keyValue: null,
          desp: 'hostname',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745336,
          keyName: 'system.upgrade_url',
          keyValue: null,
          desp: 'firmware upgrade URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745337,
          keyName: 'system.icon_url',
          keyValue: null,
          desp: 'icon URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745338,
          keyName: 'system.logo_url',
          keyValue: null,
          desp: 'logo URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745339,
          keyName: 'system.enterprise_name',
          keyValue: null,
          desp: 'enterprise name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745340,
          keyName: 'system.copyright',
          keyValue: null,
          desp: 'copyright',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
        {
          id: 745341,
          keyName: 'system.official_website',
          keyValue: null,
          desp: 'official website',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17508,
        },
      ],
    },
    set_batch_config: {
      data: {
        id: 17509,
        title: 'set_batch_config',
        desp: 'batch configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","cloud","set_batch_config",{"network":{"wan":{"proto":"pppoe","username":"test","password":"1234","ipaddr":"192.168.2.11","gateway":"192.168.2.1","netmask":"255.255.255.0","dns":["192.168.2.1","8.8.8.8"],"ip6addr":"fe80::9683:c4ff:fe18:1b9f/64","gateway6":"ddb4:1aed:acf9::","dns6":["ddb4:1aed:acf9::","ddb4:1aed:acf9::"]},"lan":{"ipaddr":"192.168.8.1","netmask":"255.255.255.0","dhcp_start":150,"dhcp_limit":100},"guest":{"ipaddr":"192.168.9.1","netmask":"255.255.255.0","dhcp_start":150,"dhcp_limit":100}},"wifi":[{"band":"2g","channel":12,"hwmode":"11g/n/ax","htmode":"40","txpower":"Max","enabled":true,"ssid":"test","encryption":"psk","key":"12345678","hidden":false,"guest_enabled":true,"guest_ssid":"test","guest_encryption":"psk","guest_key":"12345678","guest_hidden":false},{"band":"5g","random_bssid":true,"channel":40,"hwmode":"11n/ac/ax","htmode":"80","txpower":"Max","enabled":true,"ssid":"test","encryption":"psk","key":"12345678","hidden":false,"guest_enabled":true,"guest_ssid":"test","guest_encryption":"psk","guest_key":"12345678","guest_hidden":false}],"firewall":{"rules":[{"name":"ssh","dest_port":22,"target":"ACCEPT","enabled":true},{"name":"web","dest_port":80,"target":"ACCEPT","enabled":true}],"port_forwards":[{"name":"test","proto":"tcp udp","dest":"lan","dest_ip":"192.168.8.100","dest_port":"666","src":"wan","src_dport":"566","enabled":true}],"dmz":{"enabled":true,"dest_ip":"192.168.8.100","priority":true}}}],"system":{"hostname":"GL-AXT1800","timezone":"Asia/Shanghai","local_domain":"console.gl-inet.com","language":"zh-cn","enterprise_name":"xx","copyright":"xx","official_website":"https://xx.com","icon":{"url":"https://xxx/test","md5":"102f5037fe6474019fe947b4977bb2a5"},"logo":{"url":"https://xxx/test","md5":"102f5037fe6474019fe947b4977bb2a5"}}}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['cloud'],
      params: [
        {
          id: 347851,
          keyName: 'network',
          keyValue: null,
          desp: 'network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347852,
          keyName: 'network.wan',
          keyValue: null,
          desp: 'ethernet configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347853,
          keyName: 'network.wan.proto',
          keyValue: null,
          desp: 'interface protocol [dhcp; static; pppoe]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347854,
          keyName: 'network.wan.username',
          keyValue: null,
          desp: 'PPPOE username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347855,
          keyName: 'network.wan.password',
          keyValue: null,
          desp: 'PPPOE password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347856,
          keyName: 'network.wan.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347857,
          keyName: 'network.wan.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347858,
          keyName: 'network.wan.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347859,
          keyName: 'network.wan.dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17509,
        },
        {
          id: 347860,
          keyName: 'network.wan.ip6addr',
          keyValue: null,
          desp: 'IPv6 address(include subnet mask,example: ddb4:1aed:acf9::/48)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347861,
          keyName: 'network.wan.gateway6',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347862,
          keyName: 'network.wan.dns6',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17509,
        },
        {
          id: 347863,
          keyName: 'network.lan',
          keyValue: null,
          desp: 'private network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347864,
          keyName: 'network.lan.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347865,
          keyName: 'network.lan.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347866,
          keyName: 'network.lan.dhcp_start',
          keyValue: null,
          desp: 'DHCP start address offset',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347867,
          keyName: 'network.lan.dhcp_limit',
          keyValue: null,
          desp: 'DHCP number of address pools',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347868,
          keyName: 'network.guest',
          keyValue: null,
          desp: 'guest network configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347869,
          keyName: 'network.guest.ipaddr',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347870,
          keyName: 'network.guest.netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347871,
          keyName: 'network.guest.dhcp_start',
          keyValue: null,
          desp: 'DHCP DHCP start address offset',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347872,
          keyName: 'network.guest.dhcp_limit',
          keyValue: null,
          desp: 'DHCP number of address pools',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347873,
          keyName: 'wifi',
          keyValue: null,
          desp: 'Wi-Fi configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17509,
        },
        {
          id: 347874,
          keyName: 'wifi.band',
          keyValue: null,
          desp: 'Wi-Fi band [2G; 5G]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347875,
          keyName: 'wifi.channel',
          keyValue: null,
          desp: 'Wi-Fi channel (0 means auto)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347876,
          keyName: 'wifi.hwmode',
          keyValue: null,
          desp: 'Wi-FI hardware mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347877,
          keyName: 'wifi.htmode',
          keyValue: null,
          desp: 'Wi-FI bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347878,
          keyName: 'wifi.txpower',
          keyValue: null,
          desp: 'Wi-FI power [Max; High; Medium; Low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347879,
          keyName: 'wifi.enabled',
          keyValue: null,
          desp: 'whether the main Wi-Fi is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347880,
          keyName: 'wifi.random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347881,
          keyName: 'wifi.ssid',
          keyValue: null,
          desp: 'main WiFi SSID(no more than 32 ASCII characters)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347882,
          keyName: 'wifi.encryption',
          keyValue: null,
          desp: 'main WiFi encryption [none; psk2; psk-mixed; sae; sae-mixed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347883,
          keyName: 'wifi.key',
          keyValue: null,
          desp: 'main Wi-Fi password(8 ~ 63 ASCII codes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347884,
          keyName: 'wifi.hidden',
          keyValue: null,
          desp: 'whether to hide the main Wi-Fi',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347885,
          keyName: 'wifi.guest_enabled',
          keyValue: null,
          desp: 'whether the guest Wi-Fi is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347886,
          keyName: 'wifi.guest_ssid',
          keyValue: null,
          desp: 'guest WiFi SSID(no more than 32 ASCII characters)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347887,
          keyName: 'wifi.guest_encryption',
          keyValue: null,
          desp: 'guest WiFi encryption [none; psk2; psk-mixed; sae; sae-mixed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347888,
          keyName: 'wifi.guest_key',
          keyValue: null,
          desp: 'guest Wi-Fi password(8 ~ 63 ASCII codes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347889,
          keyName: 'wifi.guest_hidden',
          keyValue: null,
          desp: 'whether to hide the guest Wi-Fi',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347890,
          keyName: 'firewall',
          keyValue: null,
          desp: 'firewall configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347891,
          keyName: 'firewall.rules',
          keyValue: null,
          desp: 'firewall rules',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17509,
        },
        {
          id: 347892,
          keyName: '?firewall.rules.name',
          keyValue: null,
          desp: 'firewall name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347893,
          keyName: '?firewall.rules.src',
          keyValue: null,
          desp: 'source zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347894,
          keyName: '?firewall.rules.src_ip',
          keyValue: null,
          desp: 'source IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347895,
          keyName: '?firewall.rules.src_mac',
          keyValue: null,
          desp: 'source MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347896,
          keyName: '?firewall.rules.src_port',
          keyValue: null,
          desp: 'source port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347897,
          keyName: '?firewall.rules.proto',
          keyValue: null,
          desp: 'protocol [tcp udp; tcp; udp]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347898,
          keyName: '?firewall.rules.dest',
          keyValue: null,
          desp: 'destination zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347899,
          keyName: '?firewall.rules.dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347900,
          keyName: '?firewall.rules.dest_port',
          keyValue: null,
          desp: 'destination port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347901,
          keyName: 'firewall.rules.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347902,
          keyName: 'firewall.rules.target',
          keyValue: null,
          desp: 'action [ACCEPT; REJECT; DROP]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347903,
          keyName: 'firewall.rules.id',
          keyValue: null,
          desp: 'configuration item ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347904,
          keyName: 'firewall.port_forwards',
          keyValue: null,
          desp: 'port forwarding configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17509,
        },
        {
          id: 347905,
          keyName: '?firewall.port_forwards.name',
          keyValue: null,
          desp: 'firewall name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347906,
          keyName: '?firewall.port_forwards.proto',
          keyValue: null,
          desp: 'protocol [tcp udp; tcp; udp]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347907,
          keyName: 'firewall.port_forwards.src',
          keyValue: null,
          desp: 'source zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347908,
          keyName: 'firewall.port_forwards.src_dport',
          keyValue: null,
          desp: 'source port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347909,
          keyName: 'firewall.port_forwards.dest',
          keyValue: null,
          desp: 'destination zone (obtained from the get_zone_list interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347910,
          keyName: 'firewall.port_forwards.dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347911,
          keyName: 'firewall.port_forwards.dest_port',
          keyValue: null,
          desp: 'destination port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
        {
          id: 347912,
          keyName: 'firewall.port_forwards.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347913,
          keyName: 'firewall.port_forwards.id',
          keyValue: null,
          desp: 'configuration item ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347914,
          keyName: 'firewall.dmz',
          keyValue: null,
          desp: 'DMZ configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347915,
          keyName: 'firewall.dmz.enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347916,
          keyName: 'firewall.dmz.dest_ip',
          keyValue: null,
          desp: 'internal IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347917,
          keyName: 'firewall.dmz.priority',
          keyValue: null,
          desp: "whether priority of DMZ higher than Port-Forward's[true, false]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17509,
        },
        {
          id: 347918,
          keyName: 'system',
          keyValue: null,
          desp: 'system parameters',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347919,
          keyName: 'system.timezone',
          keyValue: null,
          desp: 'time zone',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347920,
          keyName: 'system.zonename',
          keyValue: null,
          desp: 'time zone name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347921,
          keyName: 'system.local_domain',
          keyValue: null,
          desp: 'device local domain name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347922,
          keyName: 'system.language',
          keyValue: null,
          desp: 'device native Web page language',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347923,
          keyName: 'system.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347924,
          keyName: 'system.hostname',
          keyValue: null,
          desp: 'hostname',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347925,
          keyName: 'system.upgrade_url',
          keyValue: null,
          desp: 'firmware upgrade URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347926,
          keyName: 'system.icon',
          keyValue: null,
          desp: 'icon informationen',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347927,
          keyName: 'system.icon.url',
          keyValue: null,
          desp: 'icon URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347928,
          keyName: 'system.icon.md5',
          keyValue: null,
          desp: 'icon MD5',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347929,
          keyName: 'system.logo',
          keyValue: null,
          desp: 'logo informationen',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17509,
        },
        {
          id: 347930,
          keyName: 'system.logo.url',
          keyValue: null,
          desp: 'logo URL',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347931,
          keyName: 'system.logo.md5',
          keyValue: null,
          desp: 'logo MD5',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347932,
          keyName: 'system.enterprise_name',
          keyValue: null,
          desp: 'enterprise name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347933,
          keyName: 'system.copyright',
          keyValue: null,
          desp: 'copyright',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347934,
          keyName: 'system.official_website',
          keyValue: null,
          desp: 'official website',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17509,
        },
        {
          id: 347935,
          keyName: 'templete',
          keyValue: null,
          desp: 'template state(valid for 2B)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17509,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['ddns'],
    set_config: {
      data: {
        id: 17510,
        title: 'set_config',
        desp: 'modify the configuration file',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ddns","set_config",{"enable_ddns":true}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['ddns'],
      params: [
        {
          id: 347936,
          keyName: 'enable_ddns',
          keyValue: null,
          desp: 'whether to enable the ddns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17510,
        },
      ],
      results: [
        {
          id: 745342,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1:missing parameters; -2:uci nitialization error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17510,
        },
        {
          id: 745343,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17510,
        },
      ],
    },
    get_config: {
      data: {
        id: 17511,
        title: 'get_config',
        desp: 'get the current configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ddns","get_config",{}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"device_id":"aaabbbc","enable_ddns":false}}',
      module_name: ['ddns'],
      params: [],
      results: [
        {
          id: 745344,
          keyName: 'enable_ddns',
          keyValue: null,
          desp: 'whether to enable the ddns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17511,
        },
        {
          id: 745345,
          keyName: 'device_id',
          keyValue: null,
          desp: 'ddns device id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17511,
        },
        {
          id: 745346,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2:uci nitialization error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17511,
        },
        {
          id: 745347,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17511,
        },
      ],
    },
    get_status: {
      data: {
        id: 17512,
        title: 'get_status',
        desp: 'get ddns status information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:07',
        create_time: '2024-11-19T17:55:07',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ddns","get_status",{}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"ddns":"42.200.92.52","ips":[{"ip":["192.168.3.219"],"interface":"wan"},{"ip":[],"interface":"wan6"}],"status":2}}',
      module_name: ['ddns'],
      params: [],
      results: [
        {
          id: 745348,
          keyName: '?ddns',
          keyValue: null,
          desp: 'the resolved ip address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17512,
        },
        {
          id: 745349,
          keyName: '?ddnsv6',
          keyValue: null,
          desp: 'the resolved ipv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17512,
        },
        {
          id: 745350,
          keyName: '?ips',
          keyValue: null,
          desp: 'IP information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17512,
        },
        {
          id: 745351,
          keyName: '?ips.interface',
          keyValue: null,
          desp: 'interface name [wan; wwan; tethering; modem; wan6; wwan6; tethering6; modem6]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17512,
        },
        {
          id: 745352,
          keyName: '?ips.ip',
          keyValue: null,
          desp: 'interface IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17512,
        },
        {
          id: 745353,
          keyName: 'status',
          keyValue: null,
          desp: 'ddns status [0: success; 1: failed; 2: The device is behind a firewall or the ip provided by the operator is not the public ip]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17512,
        },
        {
          id: 745354,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2:uci nitialization error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17512,
        },
        {
          id: 745355,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17512,
        },
      ],
    },
  },
  {
    module_name: ['diag'],
    ping: {
      data: {
        id: 17467,
        title: 'ping',
        desp: 'test network connection',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","diag","ping",{"addr":"192.168.8.1"}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ping_result":"PING 192.168.8.1 (192.168.8.1): 56 data bytes\\n64 bytes from 192.168.8.1: seq=0 ttl=64 time=0.213 ms\\n64 bytes from 192.168.8.1: seq=1 ttl=64 time=0.166 ms\\n64 bytes from 192.168.8.1: seq=2 ttl=64 time=0.165 ms\\n64 bytes from 192.168.8.1: seq=3 ttl=64 time=0.169 ms\\n\\n--- 192.168.8.1 ping statistics ---\\n4 packets transmitted, 4 packets received, 0% packet loss\\nround-trip min/avg/max = 0.165/0.178/0.213 ms\\n"}}',
      module_name: ['diag'],
      params: [
        {
          id: 348887,
          keyName: 'addr',
          keyValue: null,
          desp: 'target IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17467,
        },
      ],
      results: [
        {
          id: 747244,
          keyName: 'ping_result',
          keyValue: null,
          desp: 'results of the ping command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17467,
        },
      ],
    },
    traceroute: {
      data: {
        id: 17468,
        title: 'traceroute',
        desp: 'trace network path',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","diag","traceroute",{"addr":"192.168.8.1"}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"trace_result":"traceroute to 192.168.8.1 (192.168.8.1), 30 hops max, 46 byte packets\\n 1  192.168.8.1  0.022 ms\\n"}}',
      module_name: ['diag'],
      params: [
        {
          id: 348888,
          keyName: 'addr',
          keyValue: null,
          desp: 'target IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17468,
        },
      ],
      results: [
        {
          id: 747245,
          keyName: 'trace_result',
          keyValue: null,
          desp: 'results of the traceroute command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17468,
        },
      ],
    },
  },
  {
    module_name: ['dlna'],
    set_config: {
      data: {
        id: 17513,
        title: 'set_config',
        desp: 'set dlna conf',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dlna","set_config",{"enabled":"true","path":"/mnt"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['dlna'],
      params: [
        {
          id: 347937,
          keyName: 'enabled',
          keyValue: null,
          desp: 'enable dlna',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17513,
        },
        {
          id: 347938,
          keyName: 'path',
          keyValue: null,
          desp: 'dlan use path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17513,
        },
      ],
      results: [
        {
          id: 745356,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17513,
        },
        {
          id: 745357,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17513,
        },
      ],
    },
    get_config: {
      data: {
        id: 17514,
        title: 'get_config',
        desp: 'get samba conf',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dlna","get_config",{}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"enabled": "true","name":"DLNA Server","path":"/mnt","list":["/mnt","/mnt/sda1","/mnt/sdb1"]}}',
      module_name: ['dlna'],
      params: [],
      results: [
        {
          id: 745358,
          keyName: 'enabled',
          keyValue: null,
          desp: 'dlna enable status',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17514,
        },
        {
          id: 745359,
          keyName: 'name',
          keyValue: null,
          desp: 'dlna server name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17514,
        },
        {
          id: 745360,
          keyName: 'path',
          keyValue: null,
          desp: 'dlna use path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17514,
        },
        {
          id: 745361,
          keyName: 'list',
          keyValue: null,
          desp: 'dlna server can use path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17514,
        },
        {
          id: 745362,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17514,
        },
        {
          id: 745363,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17514,
        },
      ],
    },
  },
  {
    module_name: ['dns'],
    get_info: {
      data: {
        id: 17515,
        title: 'get_info',
        desp: 'get DNS information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dns","get_info",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"protos":["DoT","DNSCrypt","DoH","oDoH"],"serverlist":[{"nolog":true,"proto":"DoH","name":"tirapan-doh-ipv4","nofilter":true,"ipv6":false,"dnssec":true}],"dnscrypt_version":2}}',
      module_name: ['dns'],
      params: [],
      results: [
        {
          id: 745364,
          keyName: 'protos',
          keyValue: null,
          desp: 'supported encryption protocols [DoT; DoH; DNSCrypt; oDoH]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17515,
        },
        {
          id: 745365,
          keyName: 'dnscrypt_version',
          keyValue: null,
          desp: 'DNS encrypted version',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17515,
        },
        {
          id: 745366,
          keyName: 'serverlist',
          keyValue: null,
          desp: 'DoH,DNSCrypt,oDoH list of supported servers',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17515,
        },
        {
          id: 745367,
          keyName: 'serverlist.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17515,
        },
        {
          id: 745368,
          keyName: 'serverlist.proto',
          keyValue: null,
          desp: 'protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17515,
        },
        {
          id: 745369,
          keyName: 'serverlist.ipv6',
          keyValue: null,
          desp: 'IPv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17515,
        },
        {
          id: 745370,
          keyName: 'serverlist.dnssec',
          keyValue: null,
          desp: 'dnssec',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17515,
        },
        {
          id: 745371,
          keyName: 'serverlist.nolog',
          keyValue: null,
          desp: 'no log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17515,
        },
        {
          id: 745372,
          keyName: 'serverlist.nofilter',
          keyValue: null,
          desp: 'does not support filtering',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17515,
        },
        {
          id: 745373,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code: [-1: failed to get server list]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17515,
        },
        {
          id: 745374,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17515,
        },
      ],
    },
    get_config: {
      data: {
        id: 17516,
        title: 'get_config',
        desp: 'get the current configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0", "id":"1", "method":"call","params":["","dns","get_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"override_vpn":true,"force_dns":false,"mode":"auto","rebind_protection":false,"server":["wan 192.168.101.10,223.5.5.5"]}}',
      module_name: ['dns'],
      params: [],
      results: [
        {
          id: 745375,
          keyName: 'force_dns',
          keyValue: null,
          desp: 'whether to cover all clients',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17516,
        },
        {
          id: 745376,
          keyName: 'rebind_protection',
          keyValue: null,
          desp: 'whether to enable rebinding attack protection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17516,
        },
        {
          id: 745377,
          keyName: 'override_vpn',
          keyValue: null,
          desp: 'whether to override vpn dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17516,
        },
        {
          id: 745378,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode [auto; secure; manual; proxy]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745379,
          keyName: 'proto',
          keyValue: null,
          desp: 'protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745380,
          keyName: '?dot_provider',
          keyValue: null,
          desp: 'dot provider , 0 means Cloudflare, 1 means NextDns, 2 means ControldDns ,3 means free ControldDns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745381,
          keyName: '?nextdns_id',
          keyValue: null,
          desp: 'nextdns_id from nextdns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745382,
          keyName: '?controld_id',
          keyValue: null,
          desp: 'resolver id from controld,length from 2 to 32,[%w-]+',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745383,
          keyName: '?free_controld_id',
          keyValue: null,
          desp: 'resolver id from free controld,length from 2 to 100,[%w-]+',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17516,
        },
        {
          id: 745384,
          keyName: '?server',
          keyValue: null,
          desp: 'represents a custom dns server list or selected encrypted server list or proxy address or DNS server address in automatic mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17516,
        },
      ],
    },
    set_config: {
      data: {
        id: 17517,
        title: 'set_config',
        desp: 'modify the configuration file',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dns","set_config",{"force_dns":false,"rebind_protection":false,"override_vpn":true,"mode":"secure","proto":"DoT","dot_provider":"1","nextdns_id":""}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['dns'],
      params: [
        {
          id: 347939,
          keyName: 'force_dns',
          keyValue: null,
          desp: 'whether to cover all clients',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17517,
        },
        {
          id: 347940,
          keyName: 'override_vpn',
          keyValue: null,
          desp: 'whether to override vpn dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17517,
        },
        {
          id: 347941,
          keyName: 'rebind_protection',
          keyValue: null,
          desp: 'whether to enable rebinding attack protection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17517,
        },
        {
          id: 347942,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode [auto; secure; manual; proxy]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347943,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347944,
          keyName: '?dot_provider',
          keyValue: null,
          desp: 'dot provider , 0 means Cloudflare, 1 means NextDns, 2 means ControldDns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347945,
          keyName: '?nextdns_id',
          keyValue: null,
          desp: 'nextdns_id from nextdns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347946,
          keyName: '?controld_id',
          keyValue: null,
          desp: 'resolver id from controld,length from 2 to 32,[%w-]+',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347947,
          keyName: '?free_controld_id',
          keyValue: null,
          desp: 'resolver id from free controld,length from 2 to 100,[%w-]+',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
        {
          id: 347948,
          keyName: '?server',
          keyValue: null,
          desp: 'represents a custom dns server list or selected encrypted server list or proxy address or DNS server address in automatic mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17517,
        },
      ],
      results: [
        {
          id: 745385,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code: [-1: DNS is occupied; -2: parameter error; -3: controld resolver id wrong]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17517,
        },
        {
          id: 745386,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17517,
        },
      ],
    },
    get_host: {
      data: {
        id: 17518,
        title: 'get_host',
        desp: 'get host file content',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dns","get_host",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"content": "185.199.108.154 github.githubassets.com"}}',
      module_name: ['dns'],
      params: [],
      results: [
        {
          id: 745387,
          keyName: 'content',
          keyValue: null,
          desp: 'file content',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17518,
        },
      ],
    },
    set_host: {
      data: {
        id: 17519,
        title: 'set_host',
        desp: 'modify host file content',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","dns","set_host",{"content": "185.199.108.154 github.githubassets.com"}] }',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['dns'],
      params: [
        {
          id: 347949,
          keyName: 'content',
          keyValue: null,
          desp: 'file content',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17519,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['edgerouter'],
    get_status: {
      data: {
        id: 17520,
        title: 'get_status',
        desp: 'obtain the status of device traffic passing through the edge route in the LAN',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","edgerouter","get_status",{}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"detected":false}}',
      module_name: ['edgerouter'],
      params: [],
      results: [
        {
          id: 745388,
          keyName: 'detected',
          keyValue: null,
          desp: 'upper-level DHCP server status [0: disable; 1:enabled and have pointed the gateway to the bypass route; 2: enabled; 3：the cable is not connected]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17520,
        },
        {
          id: 745389,
          keyName: '?ip',
          keyValue: null,
          desp: 'IP assigned by DHCP server,returned when the detected is 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17520,
        },
        {
          id: 745390,
          keyName: '?netmask',
          keyValue: null,
          desp: 'DHCP server mask,returned when the detected is 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17520,
        },
        {
          id: 745391,
          keyName: '?gateway',
          keyValue: null,
          desp: 'DHCP server address,returned when the detected is 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17520,
        },
        {
          id: 745392,
          keyName: '?dns',
          keyValue: null,
          desp: 'DNS,returned when the detected is 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17520,
        },
        {
          id: 745393,
          keyName: '?valid',
          keyValue: null,
          desp: 'is the current configuration valid,returned when the detected is 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17520,
        },
        {
          id: 745394,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17520,
        },
        {
          id: 745395,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17520,
        },
      ],
    },
    set_config: {
      data: {
        id: 17521,
        title: 'set_config',
        desp: 'modify the configuration file',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","edgerouter","set_config",{"enable":true,"ignore":false,"ip":"192.168.99.129","netmask":"255.255.255.0","gateway":"192.168.99.1","dns":["192.168.99.1","114.114.114.114"]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['edgerouter'],
      params: [
        {
          id: 347950,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17521,
        },
        {
          id: 347951,
          keyName: 'ignore',
          keyValue: null,
          desp: 'whether to ignore dhcp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17521,
        },
        {
          id: 347952,
          keyName: '?ip',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17521,
        },
        {
          id: 347953,
          keyName: '?netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17521,
        },
        {
          id: 347954,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17521,
        },
        {
          id: 347955,
          keyName: '?dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17521,
        },
      ],
      results: [
        {
          id: 745396,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17521,
        },
        {
          id: 745397,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17521,
        },
      ],
    },
    get_config: {
      data: {
        id: 17522,
        title: 'get_config',
        desp: 'get the current configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:08',
        create_time: '2024-11-19T17:55:08',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","edgerouter","get_config",{}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"enable":true,"ip":"192.168.99.129","netmask":"255.255.255.0","gateway":"192.168.99.1","dns":["192.168.99.1","114.114.114.114"]}}',
      module_name: ['edgerouter'],
      params: [],
      results: [
        {
          id: 745398,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17522,
        },
        {
          id: 745399,
          keyName: 'ignore',
          keyValue: null,
          desp: 'whether to ignore',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17522,
        },
        {
          id: 745400,
          keyName: 'ip',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17522,
        },
        {
          id: 745401,
          keyName: 'netmask',
          keyValue: null,
          desp: 'subnet mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17522,
        },
        {
          id: 745402,
          keyName: 'gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17522,
        },
        {
          id: 745403,
          keyName: 'dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17522,
        },
        {
          id: 745404,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17522,
        },
        {
          id: 745405,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17522,
        },
      ],
    },
  },
  {
    module_name: ['firewall'],
    get_zone_list: {
      data: {
        id: 17523,
        title: 'get_zone_list',
        desp: 'get zone list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","get_zone_list"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"internals": ["lan", "guest"], "externals": ["wan"]}}',
      module_name: ['firewall'],
      params: [],
      results: [
        {
          id: 745406,
          keyName: 'internals',
          keyValue: null,
          desp: 'internal zone list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17523,
        },
        {
          id: 745407,
          keyName: 'externals',
          keyValue: null,
          desp: 'external zone list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17523,
        },
      ],
    },
    get_rule_list: {
      data: {
        id: 17524,
        title: 'get_rule_list',
        desp: 'get firewall rule list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","get_rule_list"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"res": [{"id": "cfg1392bd", "dest_port": 22, "name": "test", "target": "ACCEPT", "enabled": true, "src": "wan"}]}}',
      module_name: ['firewall'],
      params: [],
      results: [
        {
          id: 745408,
          keyName: 'res',
          keyValue: null,
          desp: 'rule list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17524,
        },
        {
          id: 745409,
          keyName: '?res.name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745410,
          keyName: '?res.src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745411,
          keyName: '?res.src_ip',
          keyValue: null,
          desp: 'source IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745412,
          keyName: '?res.src_mac',
          keyValue: null,
          desp: 'source MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745413,
          keyName: '?res.src_port',
          keyValue: null,
          desp: 'src port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17524,
        },
        {
          id: 745414,
          keyName: '?res.proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745415,
          keyName: '?res.dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745416,
          keyName: '?res.dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745417,
          keyName: '?res.dest_port',
          keyValue: null,
          desp: 'destination port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17524,
        },
        {
          id: 745418,
          keyName: 'res.enabled',
          keyValue: null,
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17524,
        },
        {
          id: 745419,
          keyName: 'res.target',
          keyValue: null,
          desp: 'action [{ACCEPT}, {REJECT}, {DROP}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
        {
          id: 745420,
          keyName: 'res.id',
          keyValue: null,
          desp: "rule's ID",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17524,
        },
      ],
    },
    add_rule: {
      data: {
        id: 17525,
        title: 'add_rule',
        desp: 'add firewall rule',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","add_rule",{"name":"test","src":"wan","dest_port":22,"target":"ACCEPT"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"id": "cfg1392bd"}}',
      module_name: ['firewall'],
      params: [
        {
          id: 347956,
          keyName: '?name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347957,
          keyName: '?src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347958,
          keyName: '?src_ip',
          keyValue: null,
          desp: 'source IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347959,
          keyName: '?src_mac',
          keyValue: null,
          desp: 'source MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347960,
          keyName: '?src_port',
          keyValue: null,
          desp: 'src port(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17525,
        },
        {
          id: 347961,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347962,
          keyName: '?dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347963,
          keyName: '?dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
        {
          id: 347964,
          keyName: '?dest_port',
          keyValue: null,
          desp: 'destination port(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17525,
        },
        {
          id: 347965,
          keyName: '?enabled',
          keyValue: null,
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17525,
        },
        {
          id: 347966,
          keyName: 'target',
          keyValue: null,
          desp: 'action [{ACCEPT}, {REJECT}, {DROP}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
      ],
      results: [
        {
          id: 745421,
          keyName: 'id',
          keyValue: null,
          desp: "rule's ID",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17525,
        },
      ],
    },
    set_rule: {
      data: {
        id: 17526,
        title: 'set_rule',
        desp: 'modify an existing firewall rule',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","set_rule",{"id":"cfg1392bd","src":"wan","dest_port":80}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 347967,
          keyName: '?name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347968,
          keyName: '?src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347969,
          keyName: '?src_ip',
          keyValue: null,
          desp: 'source IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347970,
          keyName: '?src_mac',
          keyValue: null,
          desp: 'source MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347971,
          keyName: '?src_port',
          keyValue: null,
          desp: 'src port(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17526,
        },
        {
          id: 347972,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347973,
          keyName: '?dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347974,
          keyName: '?dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347975,
          keyName: '?dest_port',
          keyValue: null,
          desp: 'destination port(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17526,
        },
        {
          id: 347976,
          keyName: '?enabled',
          keyValue: null,
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17526,
        },
        {
          id: 347977,
          keyName: '?target',
          keyValue: null,
          desp: 'action [{ACCEPT}, {REJECT}, {DROP}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
        {
          id: 347978,
          keyName: 'id',
          keyValue: null,
          desp: "rule's ID (get from get_rules of add_rule)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17526,
        },
      ],
      results: [],
    },
    remove_rule: {
      data: {
        id: 17527,
        title: 'remove_rule',
        desp: 'remove firewall rule',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","remove_rule",{"id":"cfg1392bd"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 347979,
          keyName: '?id',
          keyValue: null,
          desp: "rule's ID(get from get_rule_list or add_rule)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17527,
        },
        {
          id: 347980,
          keyName: '?all',
          keyValue: null,
          desp: 'whether to delete all (ID does not need to be passed when deleting all)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17527,
        },
      ],
      results: [],
    },
    get_dmz: {
      data: {
        id: 17528,
        title: 'get_dmz',
        desp: 'get DMZ configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","get_dmz"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"enabled":true,"dest_ip":"192.168.8.248","priority":true}}',
      module_name: ['firewall'],
      params: [],
      results: [
        {
          id: 745422,
          keyName: 'enabled',
          keyValue: null,
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17528,
        },
        {
          id: 745423,
          keyName: 'dest_ip',
          keyValue: null,
          desp: 'destination IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17528,
        },
        {
          id: 745424,
          keyName: 'priority',
          keyValue: null,
          desp: "whether priority of DMZ higher than Port-Forward's[true, false]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17528,
        },
      ],
    },
    set_dmz: {
      data: {
        id: 17529,
        title: 'set_dmz',
        desp: 'set DMZ configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","set_dmz",{"dest_ip":"192.168.8.100","priority":false}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 347981,
          keyName: 'enabled',
          keyValue: 'true',
          desp: 'whether to enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17529,
        },
        {
          id: 347982,
          keyName: '?dest_ip',
          keyValue: null,
          desp: "destination IP address(it's need to be set when enable)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17529,
        },
        {
          id: 347983,
          keyName: 'priority',
          keyValue: null,
          desp: "whether priority of DMZ higher than Port-Forward's[true, false]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17529,
        },
      ],
      results: [],
    },
    get_port_forward_list: {
      data: {
        id: 17530,
        title: 'get_port_forward_list',
        desp: 'get port forward list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","get_port_forward_list"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"res":[{"src_dport":"6637","id":"cfg233837","dest_ip":"192.168.8.248","src":"wan","dest_port":"6620","enabled":true,"dest":"lan","idx":"2","proto":"tcp udp"}]}}',
      module_name: ['firewall'],
      params: [],
      results: [
        {
          id: 745425,
          keyName: 'res',
          keyValue: null,
          desp: "port-forward's rule list",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17530,
        },
        {
          id: 745426,
          keyName: '?res.name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745427,
          keyName: '?res.proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745428,
          keyName: 'res.src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745429,
          keyName: 'res.src_dport',
          keyValue: null,
          desp: 'src port or port range(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745430,
          keyName: 'res.dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745431,
          keyName: 'res.dest_ip',
          keyValue: null,
          desp: 'destination ip address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
        {
          id: 745432,
          keyName: 'res.dest_port',
          keyValue: null,
          desp: 'destination port or port range(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17530,
        },
        {
          id: 745433,
          keyName: 'res.enabled',
          keyValue: null,
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17530,
        },
        {
          id: 745434,
          keyName: 'res.id',
          keyValue: null,
          desp: "rule's ID",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17530,
        },
      ],
    },
    add_port_forward: {
      data: {
        id: 17531,
        title: 'add_port_forward',
        desp: 'add port forward',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","add_port_forward",{"name": "test", "proto":"tcp", "src": "wan", "src_dport": "80", "dest":"lan", "dest_ip":"192.168.8.100", "dest_port": "80"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"id": "cfg153837"}}',
      module_name: ['firewall'],
      params: [
        {
          id: 347984,
          keyName: '?name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347985,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347986,
          keyName: 'src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347987,
          keyName: 'src_dport',
          keyValue: null,
          desp: 'src port or port range (1 ~ 65535)(port range format: "1000-2000")',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347988,
          keyName: 'dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347989,
          keyName: 'dest_ip',
          keyValue: null,
          desp: 'destination ip address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347990,
          keyName: 'dest_port',
          keyValue: null,
          desp: 'destination port or port range(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
        {
          id: 347991,
          keyName: '?enabled',
          keyValue: 'true',
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17531,
        },
      ],
      results: [
        {
          id: 745435,
          keyName: 'id',
          keyValue: null,
          desp: "rule's ID",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17531,
        },
      ],
    },
    set_port_forward: {
      data: {
        id: 17532,
        title: 'set_port_forward',
        desp: 'modify an existing port-forware rule',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","set_port_forward",{"id":"cfg153837", "name": "test", "proto":"tcp", "src": "wan", "src_dport": "80", "dest":"lan", "dest_ip":"192.168.8.100", "dest_port": "80"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 347992,
          keyName: '?name',
          keyValue: null,
          desp: "rule's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347993,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol [{tcp udp}: {default}; {tcp}; {udp}]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347994,
          keyName: 'src',
          keyValue: null,
          desp: 'source zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347995,
          keyName: 'src_dport',
          keyValue: null,
          desp: 'src port or port range(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347996,
          keyName: 'dest',
          keyValue: null,
          desp: 'destination zone(get from get_zone_list)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347997,
          keyName: 'dest_ip',
          keyValue: null,
          desp: 'destination ip address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347998,
          keyName: 'dest_port',
          keyValue: null,
          desp: 'destination port or port range(1 ~ 65535)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
        {
          id: 347999,
          keyName: 'enabled',
          keyValue: null,
          desp: 'whether to enbale this rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17532,
        },
        {
          id: 348000,
          keyName: 'id',
          keyValue: null,
          desp: "rule's ID(get from get_port_forward_list or add_port_forward)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17532,
        },
      ],
      results: [],
    },
    remove_port_forward: {
      data: {
        id: 17533,
        title: 'remove_port_forward',
        desp: 'remove port forward',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","remove_port_forward",{"id":"cfg153837"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 348001,
          keyName: 'id',
          keyValue: null,
          desp: "the rule's ID that need to be deleted. (ID is get from the get_port_forward_list or add_port_forward)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17533,
        },
        {
          id: 348002,
          keyName: '?all',
          keyValue: null,
          desp: 'whether to delete all (ID does not need to be passed when deleting all)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17533,
        },
      ],
      results: [],
    },
    order_port_forward: {
      data: {
        id: 17534,
        title: 'order_port_forward',
        desp: 'order port forward',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","order_port_forward",{"id_list":["cfg153837","cfg163837","cfg173837"]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 348003,
          keyName: 'id_list',
          keyValue: null,
          desp: "port-forward's rule id list",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17534,
        },
      ],
      results: [],
    },
    get_wan_access: {
      data: {
        id: 17535,
        title: 'get_wan_access',
        desp: 'get the wan access configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","get_wan_access",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"enable_https":false,"enable_ping":false,"enable_ssh":false,"whitelist":[],"enable_whitelist":false}}',
      module_name: ['firewall'],
      params: [],
      results: [
        {
          id: 745436,
          keyName: 'enable_ping',
          keyValue: null,
          desp: 'whether ping is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17535,
        },
        {
          id: 745437,
          keyName: 'enable_https',
          keyValue: null,
          desp: 'whether https access is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17535,
        },
        {
          id: 745438,
          keyName: 'enable_ssh',
          keyValue: null,
          desp: 'whether ssh access is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17535,
        },
        {
          id: 745439,
          keyName: 'enable_whitelist',
          keyValue: null,
          desp: 'whether to allow access only from the whitelist IP addresses',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17535,
        },
        {
          id: 745440,
          keyName: 'whitelist',
          keyValue: null,
          desp: 'whitelist table',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17535,
        },
        {
          id: 745441,
          keyName: 'whitelist.name',
          keyValue: null,
          desp: "whitelist IP's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17535,
        },
        {
          id: 745442,
          keyName: 'whitelist.ipaddr',
          keyValue: null,
          desp: 'whitelist IP addresse',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17535,
        },
      ],
    },
    set_wan_access: {
      data: {
        id: 17536,
        title: 'set_wan_access',
        desp: 'Set the wan access configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","firewall","set_wan_access",{"enable_https": false, "enable_ping": false, "enable_ssh": true, "enable_whitelist": true, "whitelist": [{"ipaddr": "192.168.18.182", "name": "111"}]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['firewall'],
      params: [
        {
          id: 348004,
          keyName: 'enable_ping',
          keyValue: null,
          desp: 'whether ping is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17536,
        },
        {
          id: 348005,
          keyName: 'enable_https',
          keyValue: null,
          desp: 'whether https access is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17536,
        },
        {
          id: 348006,
          keyName: 'enable_ssh',
          keyValue: null,
          desp: 'whether ssh access is allowed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17536,
        },
        {
          id: 348007,
          keyName: 'enable_whitelist',
          keyValue: null,
          desp: 'whether to allow access only from the whitelist IP addresses',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17536,
        },
        {
          id: 348008,
          keyName: 'whitelist',
          keyValue: null,
          desp: 'whitelist table',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17536,
        },
        {
          id: 348009,
          keyName: 'whitelist.name',
          keyValue: null,
          desp: "whitelist IP's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17536,
        },
        {
          id: 348010,
          keyName: 'whitelist.ipaddr',
          keyValue: null,
          desp: 'whitelist IP addresse',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17536,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['igmp'],
    get_config: {
      data: {
        id: 17537,
        title: 'get_config',
        desp: 'get igmp configuration information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","igmp","get_config",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"enable":false,"version":3}}',
      module_name: ['igmp'],
      params: [],
      results: [
        {
          id: 745443,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable igmp.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17537,
        },
        {
          id: 745444,
          keyName: 'version',
          keyValue: null,
          desp: 'igmp version [1,2,3].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17537,
        },
      ],
    },
    set_config: {
      data: {
        id: 17538,
        title: 'set_config',
        desp: '设置igmp',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","igmp","set_config",{"version":3,"enable":false}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['igmp'],
      params: [
        {
          id: 348011,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable igmp.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17538,
        },
        {
          id: 348012,
          keyName: 'version',
          keyValue: null,
          desp: 'igmp version [1,2,3].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17538,
        },
      ],
      results: [
        {
          id: 745445,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17538,
        },
        {
          id: 745446,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17538,
        },
      ],
    },
  },
  {
    module_name: ['ipv6'],
    get_ipv6: {
      data: {
        id: 17539,
        title: 'get_ipv6',
        desp: 'get ipv6 configuration information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ipv6","get_ipv6"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"enable": false, "lan_dns_mode": true, "lan_mode": "nat6"}}',
      module_name: ['ipv6'],
      params: [],
      results: [
        {
          id: 745447,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable ipv6.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17539,
        },
        {
          id: 745448,
          keyName: 'lan_mode',
          keyValue: null,
          desp: 'Ipv6 mode [native;relay;nat6;static] (relay is displayed as Passthrough on the Web).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17539,
        },
        {
          id: 745449,
          keyName: 'lan_ip',
          keyValue: null,
          desp: 'When lan_mode is static, it is the IPv6 address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17539,
        },
        {
          id: 745450,
          keyName: 'lan_dns_mode',
          keyValue: null,
          desp: "Dns mode，'true' means auto, 'false' means manual.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17539,
        },
        {
          id: 745451,
          keyName: 'lan_dns1',
          keyValue: null,
          desp: 'When lan_dnsmode is false, the first DNS server address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17539,
        },
        {
          id: 745452,
          keyName: 'lan_dns2',
          keyValue: null,
          desp: 'When lan_dnsmode is false, the second DNS server address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17539,
        },
        {
          id: 745453,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code:-1:Information acquisition failure.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17539,
        },
        {
          id: 745454,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17539,
        },
      ],
    },
    set_ipv6: {
      data: {
        id: 17540,
        title: 'set_ipv6',
        desp: 'setting ipv6',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:09',
        create_time: '2024-11-19T17:55:09',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ipv6","set_ipv6",{"enable":true,"lan_mode":"static","lan_ip":"fdab:6a57:e8f5:10:d14f:d19b:a63c:d7a5","lan_dns_mode":true,"lan_dns1":"fdab:6a57:e8f5:10::1","lan_dns2":"fdab:6a57:e8f5:10::2"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['ipv6'],
      params: [
        {
          id: 348013,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable ipv6.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17540,
        },
        {
          id: 348014,
          keyName: 'lan_mode',
          keyValue: null,
          desp: 'Ipv6 mode [native;relay;nat6;static] (relay is displayed as Passthrough on the Web).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17540,
        },
        {
          id: 348015,
          keyName: '?lan_ip',
          keyValue: null,
          desp: 'When lan_mode is static, it is the IPv6 address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17540,
        },
        {
          id: 348016,
          keyName: 'lan_dns_mode',
          keyValue: null,
          desp: "Dns mode，'true' means auto, 'false' means manual.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17540,
        },
        {
          id: 348017,
          keyName: '?lan_dns1',
          keyValue: null,
          desp: 'When lan_dnsmode is false, the first DNS server address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17540,
        },
        {
          id: 348018,
          keyName: '?lan_dns2',
          keyValue: null,
          desp: 'When lan_dnsmode is false, the second DNS server address of the LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17540,
        },
      ],
      results: [
        {
          id: 745455,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17540,
        },
        {
          id: 745456,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17540,
        },
      ],
    },
  },
  {
    module_name: ['kmwan'],
    set_interface: {
      data: {
        id: 17541,
        title: 'set_interface',
        desp: 'set interface info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","kmwan","set_interface",{"interface":"wan","enable_check":true,"track_mode":1,"track_proto": 0,"track_method":0,"ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"ipv6":["2001:4860:4860::8844","2001:4860:4860::8888","2620:0:ccd::2","2620:0:ccc::2"]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['kmwan'],
      params: [
        {
          id: 348019,
          keyName: 'interface',
          keyValue: null,
          desp: 'detetction interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17541,
        },
        {
          id: 348020,
          keyName: 'enable_check',
          keyValue: null,
          desp: 'enable detection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17541,
        },
        {
          id: 348021,
          keyName: 'track_mode',
          keyValue: null,
          desp: 'Internet status check mode,which takes effect when enbale_check is true[0:passive; 1:force; 2:strict]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17541,
        },
        {
          id: 348022,
          keyName: 'track_proto',
          keyValue: null,
          desp: 'detection protocol [0:ipv4 only; 1:ipv6 only; 2:both ipv4 & ipv6]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17541,
        },
        {
          id: 348023,
          keyName: 'track_method',
          keyValue: null,
          desp: 'detection way [0:ping; 1:httping, not implemented]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17541,
        },
        {
          id: 348024,
          keyName: '?enable_ssl',
          keyValue: null,
          desp: 'Whether ssl is enabled in httping mode, not use',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17541,
        },
        {
          id: 348025,
          keyName: 'track_ipv4',
          keyValue: null,
          desp: 'IPv4 address detected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17541,
        },
        {
          id: 348026,
          keyName: 'track_ipv6',
          keyValue: null,
          desp: 'IPv6 address detected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17541,
        },
      ],
      results: [
        {
          id: 745457,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17541,
        },
        {
          id: 745458,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17541,
        },
      ],
    },
    set_sensitivity: {
      data: {
        id: 17542,
        title: 'set_sensitivity',
        desp: 'set sensitivity',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","kmwan","set_sensitivity",{"sensitivity":{"level":"custom","val":5}}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['kmwan'],
      params: [
        {
          id: 348027,
          keyName: 'sensitivity.level',
          keyValue: null,
          desp: 'Set sensitivity level[low; medium; high; custom]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17542,
        },
        {
          id: 348028,
          keyName: '?sensitivity.val',
          keyValue: null,
          desp: 'Set detection time interval(unit:s)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17542,
        },
      ],
      results: [
        {
          id: 745459,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17542,
        },
        {
          id: 745460,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17542,
        },
      ],
    },
    get_sensitivity: {
      data: {
        id: 17543,
        title: 'get_sensitivity',
        desp: 'get kmwan sensitivity',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0", "method":"call", "params":["","kmwan","get_sensitivity",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result":{"sensitivity":{"level":"custom", "val":5}}}',
      module_name: ['kmwan'],
      params: [],
      results: [
        {
          id: 745461,
          keyName: 'sensitivity.level',
          keyValue: null,
          desp: 'sensitivity level[low; medium; high; custom]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17543,
        },
        {
          id: 745462,
          keyName: '?sensitivity.val',
          keyValue: null,
          desp: 'sensitivity val(unit:s)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17543,
        },
        {
          id: 745463,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17543,
        },
        {
          id: 745464,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17543,
        },
      ],
    },
    set_config: {
      data: {
        id: 17544,
        title: 'set_config',
        desp: 'set kmwan Settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","kmwan","set_config",{"mode":0,"interfaces":[{"interfacd":"wan","metric":10},{"interface":"wwan","metric":20}]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['kmwan'],
      params: [
        {
          id: 348029,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode setting[0:failover; 1:load balance]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17544,
        },
        {
          id: 348030,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17544,
        },
        {
          id: 348031,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17544,
        },
        {
          id: 348032,
          keyName: '?interfaces.metric',
          keyValue: null,
          desp: 'link metric [for failover mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17544,
        },
        {
          id: 348033,
          keyName: '?interfaces.weight',
          keyValue: null,
          desp: 'load weight [for load balance mode, ranges: 0-10]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17544,
        },
      ],
      results: [
        {
          id: 745465,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17544,
        },
        {
          id: 745466,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17544,
        },
      ],
    },
    get_config: {
      data: {
        id: 17545,
        title: 'get_config',
        desp: 'get kmwan Settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0", "method":"call", "params":["","kmwan","get_config",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result":{"mode":1, "sensitivity":5, "interfaces":[{"interface":"wan", "weight":1, "metric":10, "enable_check":true, "track_mode":1, "track_proto":0, "track_method":0, "track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"]},{"interface":"wwan", "weight":2, "metric":20, "enable_check":true, "track_mode":0, "track_proto":0, "track_method":0, "track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"]}]}}',
      module_name: ['kmwan'],
      params: [],
      results: [
        {
          id: 745467,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode setting[0:failover; 1:load balance]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745468,
          keyName: 'sensitivity',
          keyValue: null,
          desp: 'detection time interval(unit:s)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745469,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17545,
        },
        {
          id: 745470,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17545,
        },
        {
          id: 745471,
          keyName: '?interfaces.metric',
          keyValue: null,
          desp: 'link metric [for failover mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745472,
          keyName: '?interfaces.weight',
          keyValue: null,
          desp: 'load weight [for load balance mode, ranges: 0-10]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745473,
          keyName: 'interfaces.enable_check',
          keyValue: null,
          desp: 'enable detection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17545,
        },
        {
          id: 745474,
          keyName: 'interfaces.track_mode',
          keyValue: null,
          desp: 'Internet status check mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745475,
          keyName: 'interfaces.track_proto',
          keyValue: null,
          desp: 'detection protocol [0:ipv4 only; 1:ipv6 only; 2:both ipv4 & ipv6]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745476,
          keyName: 'interfaces.track_method',
          keyValue: null,
          desp: 'detection way [0: ping; 1: httping]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745477,
          keyName: '?enable_ssl',
          keyValue: null,
          desp: 'Whether to enable ssl in http mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17545,
        },
        {
          id: 745478,
          keyName: 'interfaces.track_ipv4',
          keyValue: null,
          desp: 'detection ipv4 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17545,
        },
        {
          id: 745479,
          keyName: 'interfaces.track_ipv6',
          keyValue: null,
          desp: 'detection ipv6 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17545,
        },
        {
          id: 745480,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17545,
        },
        {
          id: 745481,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17545,
        },
      ],
    },
    get_status: {
      data: {
        id: 17546,
        title: 'get_status',
        desp: 'get status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","kmwan","get_status",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"interfaces":[{"status_v6":0,"status_v4":0,"interface":"wan"},{"status_v6":1,"status_v4":1,"interface":"wwan"},{"status_v6":1,"status_v4":1,"interface":"tethering"},{"status_v6":1,"status_v4":0,"interface":"modem_1_1_2"},{"status_v6":1,"status_v4":0,"interface":"modem_1_1_3"}]}}',
      module_name: ['kmwan'],
      params: [],
      results: [
        {
          id: 745482,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17546,
        },
        {
          id: 745483,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17546,
        },
        {
          id: 745484,
          keyName: 'interfaces.status_v4',
          keyValue: null,
          desp: 'interface ipv4 status [0:online; 1:offline]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17546,
        },
        {
          id: 745485,
          keyName: 'interfaces.status_v6',
          keyValue: null,
          desp: 'interface ipv6 status [0:online; 1:offline]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17546,
        },
        {
          id: 745486,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17546,
        },
        {
          id: 745487,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error messag',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17546,
        },
      ],
    },
  },
  {
    module_name: ['lan'],
    get_config_list: {
      data: {
        id: 17547,
        title: 'get_config_list',
        desp: 'get lan or guest ip info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","get_config_list",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"interfaces":[{"dns":["192.168.8.1","8.8.8.8"],"lpr":["192.168.8.155"],"netmask":"255.255.255.0","ip":"192.168.8.1","leasetime":"150s","end":"192.168.8.199","start":"192.168.8.99","gateway":"192.168.8.1","enable":1,"ap_isolate":0,"interface":"lan"},{"dns":["192.168.13.1","8.8.8.8"],"lpr":["192.168.8.155"],"netmask":"255.255.255.0","ip":"192.168.13.1","leasetime":"1h","end":"192.168.13.252","start":"192.168.13.100","gateway":"192.168.13.1","enable":1,"ap_isolate":1,"transfer_enable":0,"interface":"guest"}]}}',
      module_name: ['lan'],
      params: [],
      results: [
        {
          id: 745488,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface information array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17547,
        },
        {
          id: 745489,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name [ lan; guest ]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745490,
          keyName: 'interfaces.ip',
          keyValue: null,
          desp: 'interface ip.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745491,
          keyName: 'interfaces.gateway',
          keyValue: null,
          desp: 'interface gateway.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745492,
          keyName: 'interfaces.netmask',
          keyValue: null,
          desp: 'subnet mask of the interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745493,
          keyName: 'interfaces.start',
          keyValue: null,
          desp: 'The starting IP address of the interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745494,
          keyName: 'interfaces.end',
          keyValue: null,
          desp: 'The ending IP address of the interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745495,
          keyName: 'interface.enable',
          keyValue: null,
          desp: 'dhcp server switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17547,
        },
        {
          id: 745496,
          keyName: 'interface.dns',
          keyValue: null,
          desp: 'dhcp option(6),dns server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17547,
        },
        {
          id: 745497,
          keyName: 'interface.leasetime',
          keyValue: null,
          desp: 'dhcp option(51),ip address lease time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
        {
          id: 745498,
          keyName: 'interface.lpr',
          keyValue: null,
          desp: 'dhcp option(9), lpr server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17547,
        },
        {
          id: 745499,
          keyName: 'ap_isolate',
          keyValue: null,
          desp: 'ap disconnecting switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17547,
        },
        {
          id: 745500,
          keyName: 'transfer_enable',
          keyValue: null,
          desp: 'lan access guest network switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17547,
        },
        {
          id: 745501,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:parameter not found,-4:uci initialization error,-5:no LAN interface.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17547,
        },
        {
          id: 745502,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17547,
        },
      ],
    },
    set_config: {
      data: {
        id: 17548,
        title: 'set_config',
        desp: 'Set the ip address of the LAN。',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","set_config",{"interface":"lan","ip":"192.168.8.1","netmask":"255.255.255.0","enable":1,"leasetime":"150s","gateway":"192.168.8.1","start":"192.168.8.99","end":"192.168.8.199","lpr":["192.168.8.151"],"dns":["192.168.8.1","8.8.8.8"]}],"ap_isolate":1,"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['lan'],
      params: [
        {
          id: 348034,
          keyName: 'interface',
          keyValue: null,
          desp: 'interface name [ lan; guest ] , Indicates whether to set lan ip or guest ip currently.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348035,
          keyName: 'ip',
          keyValue: null,
          desp: 'Set new IP.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348036,
          keyName: 'gateway',
          keyValue: null,
          desp: 'Set up a new gateway.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348037,
          keyName: 'start',
          keyValue: null,
          desp: 'Set a new starting IP address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348038,
          keyName: 'end',
          keyValue: null,
          desp: 'Set the new end IP address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348039,
          keyName: 'netmask',
          keyValue: null,
          desp: 'Set a new subnet mask.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348040,
          keyName: 'enable',
          keyValue: null,
          desp: 'set dhcp server enable[1:enable; 0:disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17548,
        },
        {
          id: 348041,
          keyName: 'leasetime',
          keyValue: null,
          desp: 'set lease time,The minimum is 2 minutes, and the incoming parameter can only carry one unit m(minutes)/s(seconds)/h(hours).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
        {
          id: 348042,
          keyName: 'lpr',
          keyValue: null,
          desp: 'set lpr server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17548,
        },
        {
          id: 348043,
          keyName: 'dns',
          keyValue: null,
          desp: 'set dns server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17548,
        },
        {
          id: 348044,
          keyName: 'ap_isolate',
          keyValue: null,
          desp: 'set ap isolate [1:enable; 0:disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17548,
        },
        {
          id: 348045,
          keyName: 'transfer_enable',
          keyValue: null,
          desp: 'set lan access guest network switch[1:enable; 0:disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17548,
        },
      ],
      results: [
        {
          id: 745503,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:parameter not found,-2:ip wrong format,-4:uci initialization error，-7:conflict with wan ip，-8:conflict with lan ip，-9:conflict with guest ip，-10:conflict with repeater ip, -11: The DHCP configuration parameters are incorrect',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17548,
        },
        {
          id: 745504,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17548,
        },
      ],
    },
    add_static_bind: {
      data: {
        id: 17549,
        title: 'add_static_bind',
        desp: 'Set static ip binding',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","add_static_bind",{"name":"DESKTOP-HO0T5C1","mac":"58:41:20:0b:9b:b1","ip":"192.168.8.162"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['lan'],
      params: [
        {
          id: 348046,
          keyName: 'mac',
          keyValue: null,
          desp: 'Set the mac address of the static ip binding entry.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17549,
        },
        {
          id: 348047,
          keyName: 'ip',
          keyValue: null,
          desp: 'Set the ip address of the static ip binding entry.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17549,
        },
        {
          id: 348048,
          keyName: '?name',
          keyValue: null,
          desp: 'The hostname of the device to bind the static ip to.[Optional parameter, defaults to "" ]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17549,
        },
      ],
      results: [
        {
          id: 745505,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:parameter not found,-3:mac address format error,-4:uci initialization error',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17549,
        },
        {
          id: 745506,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17549,
        },
      ],
    },
    set_static_bind: {
      data: {
        id: 17550,
        title: 'set_static_bind',
        desp: 'Change static ip binding',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","set_static_bind",{"mac":"58:41:20:0b:9b:b1","ip":"192.168.8.80","name":"pc1"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['lan'],
      params: [
        {
          id: 348049,
          keyName: 'mac',
          keyValue: null,
          desp: 'The mac address of the static ip binding entry to be changed. [Find the corresponding static ip binding entry according to mac]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17550,
        },
        {
          id: 348050,
          keyName: 'ip',
          keyValue: null,
          desp: 'The ip address of the static ip binding entry to be changed. [Set the ip of the static ip binding entry corresponding to mac]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17550,
        },
        {
          id: 348051,
          keyName: 'name',
          keyValue: null,
          desp: 'The name of the static ip binding entry to be changed. [Set the name of the static ip binding entry corresponding to mac]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17550,
        },
      ],
      results: [
        {
          id: 745507,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-4:uci initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17550,
        },
        {
          id: 745508,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17550,
        },
      ],
    },
    get_static_bind_list: {
      data: {
        id: 17551,
        title: 'get_static_bind_list',
        desp: 'Get the information list of all current static ip binding entries',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","get_static_bind_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"static_bind_list": [{"name": "DESKTOP-HO0T5C1", "mac": "58:41:20:0b:9b:b1", "ip": "192.168.8.162"}, {"name": "DESKTOP-HO0T5C3", "mac": "58:41:20:0b:9b:b3", "ip": "192.168.8.163"}]}}',
      module_name: ['lan'],
      params: [],
      results: [
        {
          id: 745509,
          keyName: 'static_bind_list',
          keyValue: null,
          desp: 'Get a list of all static ip binding entries.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17551,
        },
        {
          id: 745510,
          keyName: 'static_bind_list.mac',
          keyValue: null,
          desp: 'The mac address of the static ip binding entry.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17551,
        },
        {
          id: 745511,
          keyName: 'static_bind_list.ip',
          keyValue: null,
          desp: 'The ip address of the static ip binding entry.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17551,
        },
        {
          id: 745512,
          keyName: '?static_bind_list.name',
          keyValue: null,
          desp: 'The hostname of the device to bind the static ip to. [If there is no value, the default is "" ]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17551,
        },
        {
          id: 745513,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-4:uci initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17551,
        },
        {
          id: 745514,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17551,
        },
      ],
    },
    remove_static_bind: {
      data: {
        id: 17552,
        title: 'remove_static_bind',
        desp: 'Delete a static ip binding or delete all static ip bindings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","lan","remove_static_bind",{"mode":0,"mac":"58:41:20:0b:9b:b1"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['lan'],
      params: [
        {
          id: 348052,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode sets the mode to delete static ip binding entries, mode is 0 to delete a single static ip binding (need to pass in mac parameters), mode is 1 to delete all static ip bindings (do not pass in mac parameters or mac parameters are null).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17552,
        },
        {
          id: 348053,
          keyName: 'mac',
          keyValue: null,
          desp: 'The mac address of the static ip binding entry to be deleted, find the corresponding entry according to the mac address and delete. pass mac parameter)]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17552,
        },
      ],
      results: [
        {
          id: 745515,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-4:uci initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17552,
        },
        {
          id: 745516,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17552,
        },
      ],
    },
  },
  {
    module_name: ['led'],
    set_config: {
      data: {
        id: 17553,
        title: 'set_config',
        desp: 'Set led config.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","led","set_config",{"led_enable":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['led'],
      params: [
        {
          id: 348054,
          keyName: 'led_enable',
          keyValue: null,
          desp: 'Whether to enable led: false: Disable, true: Enable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17553,
        },
      ],
      results: [
        {
          id: 745517,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1;Parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17553,
        },
        {
          id: 745518,
          keyName: '?err_msg',
          keyValue: null,
          desp: '\tError message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17553,
        },
      ],
    },
    get_config: {
      data: {
        id: 17554,
        title: 'get_config',
        desp: 'Get config of LED.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:10',
        create_time: '2024-11-19T17:55:10',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","led","get_config"],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"led_enable":true}}',
      module_name: ['led'],
      params: [],
      results: [
        {
          id: 745519,
          keyName: 'led_enable',
          keyValue: null,
          desp: 'Whether to enable led: false: Disable, true: Enable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17554,
        },
      ],
    },
  },
  {
    module_name: ['local-access'],
    get_config: {
      data: {
        id: 17555,
        title: 'get_config',
        desp: 'Get configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","local-access","get_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"session_timeout":300,"https_port":443,"redirect_https":true,"ssh_port":22,"http_port":80,"luci_http_port":8080,"luci_https_port":8443}}',
      module_name: ['local-access'],
      params: [],
      results: [
        {
          id: 745520,
          keyName: 'redirect_https',
          keyValue: null,
          desp: 'Whether to redirect http to https',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17555,
        },
        {
          id: 745521,
          keyName: 'http_port',
          keyValue: null,
          desp: 'HTTP port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745522,
          keyName: 'https_port',
          keyValue: null,
          desp: 'HTTPS port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745523,
          keyName: 'ssh_port',
          keyValue: null,
          desp: 'SSH port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745524,
          keyName: 'session_timeout',
          keyValue: '300',
          desp: 'Session timeout duration (unit: second)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745525,
          keyName: 'luci_http_port',
          keyValue: null,
          desp: 'LuCI HTTP port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745526,
          keyName: 'luci_https_port',
          keyValue: null,
          desp: 'LuCI HTTPS port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17555,
        },
        {
          id: 745527,
          keyName: 'luci_redirect_https',
          keyValue: null,
          desp: 'LuCI force redirect to https',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17555,
        },
      ],
    },
    set_config: {
      data: {
        id: 17556,
        title: 'set_config',
        desp: 'Set configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","local-access","set_config",{"redirect_https":false,"http_port":80,"https_port":443,"ssh_port":22,"session_timeout":300}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['local-access'],
      params: [
        {
          id: 348055,
          keyName: '?redirect_https',
          keyValue: 'false',
          desp: 'Whether to redirect http to https',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17556,
        },
        {
          id: 348056,
          keyName: '?http_port',
          keyValue: '80',
          desp: 'HTTP port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348057,
          keyName: '?https_port',
          keyValue: '443',
          desp: 'HTTPS port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348058,
          keyName: '?ssh_port',
          keyValue: '22',
          desp: 'SSH port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348059,
          keyName: '?session_timeout',
          keyValue: '300',
          desp: 'Session timeout duration (unit: second)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348060,
          keyName: '?luci_http_port',
          keyValue: '8080',
          desp: 'LuCI HTTP port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348061,
          keyName: '?luci_https_port',
          keyValue: '8443',
          desp: 'LuCI HTTPS port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 348062,
          keyName: '?luci_redirect_https',
          keyValue: 'false',
          desp: 'LuCI force redirect to https',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17556,
        },
      ],
      results: [
        {
          id: 745528,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(-1: http port occupied, -2: https port occupied, -3: ssh port occupied)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17556,
        },
        {
          id: 745529,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17556,
        },
      ],
    },
  },
  {
    module_name: ['logread'],
    get_system_log: {
      data: {
        id: 17557,
        title: 'get_system_log',
        desp: 'get system log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":"1","params":["","logread","get_system_log",{"lines":1,"module":"udhcpc"}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"log":"Thu Jul  4 03:02:14 2024 daemon.notice netifd: wan (27066): udhcpc: lease of 192.168.1.164 obtained, lease time 43200\\n"}}',
      module_name: ['logread'],
      params: [
        {
          id: 348063,
          keyName: '?lines',
          keyValue: null,
          desp: 'Set the number of log lines to be obtained [If the number of log lines is not set, all logs that meet the conditions will be returned]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17557,
        },
        {
          id: 348064,
          keyName: '?module',
          keyValue: null,
          desp: 'Set the log module name to be obtained [The specific module name needs to be checked in the background, if the module name is not set, no relevant filtering will be performed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17557,
        },
      ],
      results: [
        {
          id: 745530,
          keyName: '?log',
          keyValue: null,
          desp: 'The output system log [returns all logs by default if no parameters are passed, and returns only when the log exists]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17557,
        },
        {
          id: 745531,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17557,
        },
        {
          id: 745532,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17557,
        },
      ],
    },
    get_kernel_log: {
      data: {
        id: 17558,
        title: 'get_kernel_log',
        desp: 'get kernel log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","logread","get_kernel_log"]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"log":"[    0.000000] Linux version 4.14.221 (glinet@ubuntu) (gcc version 7.5.0 (OpenWrt GCC 7.5.0 r11306-c4a6851c72)) #0 Mon Feb 15 15:22:37 2021\\n"}}',
      module_name: ['logread'],
      params: [],
      results: [
        {
          id: 745533,
          keyName: '?log',
          keyValue: null,
          desp: 'Output kernel log [return all]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17558,
        },
        {
          id: 745534,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17558,
        },
        {
          id: 745535,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17558,
        },
      ],
    },
    get_nginx_log: {
      data: {
        id: 17559,
        title: 'get_nginx_log',
        desp: 'get nginx log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","logread","get_nginx_log",{"type":"error"}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"log":"2024/07/04 02:49:26 [error] 9083#0: *14 lua tcp socket read timed out, client: 192.168.8.180, server: , request: \\"GET /ws?sid=90ySvEWeQfv3aPASlj0tG73R6fymzv5o HTTP/1.1\\", host: \\"192.168.8.1\\"\\n"}}',
      module_name: ['logread'],
      params: [
        {
          id: 348065,
          keyName: 'type',
          keyValue: null,
          desp: 'Set the log type to get [ access; error ]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17559,
        },
      ],
      results: [
        {
          id: 745536,
          keyName: '?log',
          keyValue: null,
          desp: 'Output the nginx log of this log type [return the latest 100 lines of log]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17559,
        },
        {
          id: 745537,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17559,
        },
        {
          id: 745538,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17559,
        },
      ],
    },
    get_crash_log: {
      data: {
        id: 17560,
        title: 'get_crash_log',
        desp: 'get crash log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","logread","get_crash_log",{"mode":1,"log_number":2}]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"log":"Log Entry 2 (at position 1)\\n<6>[  650.605535] br-lan: port 2(wlan0) entered forwarding state\\n\\n","sum":3}}',
      module_name: ['logread'],
      params: [
        {
          id: 348066,
          keyName: '?mode',
          keyValue: null,
          desp: 'Set the log mode to be obtained [0; 1] (0 is to select the latest log | 1 is to select the log number, which log is returned, and the log_number parameter must have a value in this mode).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17560,
        },
        {
          id: 348067,
          keyName: '?log_number',
          keyValue: null,
          desp: 'Set the log sequence number to be obtained [when mode is 1 mode, the log_number parameter must have a value]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17560,
        },
      ],
      results: [
        {
          id: 745539,
          keyName: '?log',
          keyValue: null,
          desp: 'Output the latest crash log [If no parameter is passed, all logs will be returned by default, and only the specified log will be output with parameters]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17560,
        },
        {
          id: 745540,
          keyName: '?sum',
          keyValue: null,
          desp: 'Output The total number of crash logs currently stored',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17560,
        },
        {
          id: 745541,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Wrong log sequence number entered.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17560,
        },
        {
          id: 745542,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17560,
        },
      ],
    },
    remove_crash_log: {
      data: {
        id: 17561,
        title: 'remove_crash_log',
        desp: 'remove crash log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","logread","remove_crash_log"]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":[]}',
      module_name: ['logread'],
      params: [],
      results: [
        {
          id: 745543,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17561,
        },
        {
          id: 745544,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17561,
        },
      ],
    },
    export_logs: {
      data: {
        id: 17562,
        title: 'export_logs',
        desp: 'export logs',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:11',
        create_time: '2024-11-19T17:55:11',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","logread","export_logs"],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":[]}',
      module_name: ['logread'],
      params: [],
      results: [
        {
          id: 745545,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17562,
        },
        {
          id: 745546,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17562,
        },
      ],
    },
  },
  {
    module_name: ['macclone'],
    get_mac: {
      data: {
        id: 17563,
        title: 'get_mac',
        desp: 'get mac configuration information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["", "macclone", "get_mac"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"remote_mac": "68:DA:73:AE:2F:C2","wan": {"mac": "76:0A:6C:A5:53:79","mode": 2,"factory_mac": "94:83:C4:36:73:F1"},"secondwan": {"mac": "96:EA:29:A1:56:CF","mode": 2,"factory_mac": "94:83:C4:36:73:F2"}}}',
      module_name: ['macclone'],
      params: [],
      results: [
        {
          id: 745547,
          keyName: 'wan',
          keyValue: null,
          desp: 'Get wan',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17563,
        },
        {
          id: 745548,
          keyName: 'wan.mode',
          keyValue: null,
          desp: 'Mac clone mode by wan 0: factory 1: clone 2: manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17563,
        },
        {
          id: 745549,
          keyName: 'wan.mac',
          keyValue: null,
          desp: 'WAN port Mac address.("Your Router (WAN)][Random]" on web)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17563,
        },
        {
          id: 745550,
          keyName: 'wan.factory_mac',
          keyValue: null,
          desp: 'WAN factory Mac address.("Factory Default[default]" on web)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17563,
        },
        {
          id: 745551,
          keyName: 'secondwan',
          keyValue: null,
          desp: 'Get secondwan',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17563,
        },
        {
          id: 745552,
          keyName: 'secondwan.mode',
          keyValue: null,
          desp: 'Mac clone mode by secondwan 0: factory 1: clone 2: manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17563,
        },
        {
          id: 745553,
          keyName: 'secondwan.mac',
          keyValue: null,
          desp: 'SECONDWAN port Mac address.("Your Router (SECONDWAN)][Random]" on web)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17563,
        },
        {
          id: 745554,
          keyName: 'swcondwan.factory_mac',
          keyValue: null,
          desp: 'SECONDWAN factory Mac address.("Factory Default[default]" on web)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17563,
        },
        {
          id: 745555,
          keyName: 'remote_mac',
          keyValue: null,
          desp: 'The client Mac address.("Your Current Client[clone]" on web)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17563,
        },
      ],
    },
    set_mac: {
      data: {
        id: 17564,
        title: 'set_mac',
        desp: 'setting macclone',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0", "id": 1, "method":"call","params":["", "macclone", "set_mac", {"wan": {"mode": 2,"mac": "76:0A:6C:A5:53:79"},"secondwan": {"mode": 2,"mac": "96:EA:29:A1:56:CF"}}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": []}',
      module_name: ['macclone'],
      params: [
        {
          id: 348068,
          keyName: 'wan',
          keyValue: null,
          desp: 'Set wan',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17564,
        },
        {
          id: 348069,
          keyName: 'wan.mode',
          keyValue: null,
          desp: 'Mac clone mode by wan 0: factory 1: clone 2: manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17564,
        },
        {
          id: 348070,
          keyName: 'wan.mac',
          keyValue: null,
          desp: 'The Mac address to be cloned by WAN',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17564,
        },
        {
          id: 348071,
          keyName: 'secondwan',
          keyValue: null,
          desp: 'Set the secondwan',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17564,
        },
        {
          id: 348072,
          keyName: 'secondwan.mode',
          keyValue: null,
          desp: 'Mac clone mode by secondwan 0: factory 1: clone 2: manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17564,
        },
        {
          id: 348073,
          keyName: 'secondwan.mac',
          keyValue: null,
          desp: 'The Mac address to be cloned by SECONDWAN',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17564,
        },
      ],
      results: [
        {
          id: 745556,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17564,
        },
        {
          id: 745557,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17564,
        },
      ],
    },
  },
  {
    module_name: ['mcu'],
    set_battery_config: {
      data: {
        id: 17565,
        title: 'set_battery_config',
        desp: 'Set battery config.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","mcu","set_battery_config",{"capacity":{"enable":true,"value":12},"temp_high":{"enable":true,"value":60}, "temp_low":{"enable": true, "value":-15}}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['mcu'],
      params: [
        {
          id: 348074,
          keyName: 'temp_high',
          keyValue: null,
          desp: 'High temperature warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17565,
        },
        {
          id: 348075,
          keyName: 'temp_high.enable',
          keyValue: null,
          desp: 'High temperature warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17565,
        },
        {
          id: 348076,
          keyName: 'temp_high.value',
          keyValue: null,
          desp: 'High temperature warning value(Degrees Celsius)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17565,
        },
        {
          id: 348077,
          keyName: 'temp_low',
          keyValue: null,
          desp: 'Low temperature warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17565,
        },
        {
          id: 348078,
          keyName: 'temp_low.enable',
          keyValue: null,
          desp: 'Low temperature warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17565,
        },
        {
          id: 348079,
          keyName: 'temp_low.value',
          keyValue: null,
          desp: 'Low temperature warning value(Degrees Celsius)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17565,
        },
        {
          id: 348080,
          keyName: 'capacity.enable',
          keyValue: null,
          desp: 'Capacity warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17565,
        },
        {
          id: 348081,
          keyName: 'capacity.value',
          keyValue: null,
          desp: 'Capacity warning value[1-100(%)]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17565,
        },
        {
          id: 348082,
          keyName: 'capacity',
          keyValue: null,
          desp: 'capacity warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17565,
        },
      ],
      results: [
        {
          id: 745558,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code,-1;parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17565,
        },
        {
          id: 745559,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17565,
        },
      ],
    },
    get_battery_config: {
      data: {
        id: 17566,
        title: 'get_battery_config',
        desp: 'Get config of battery.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","mcu","get_battery_config",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"capacity":{"enable":false,"value":"10"},"temp_low":{"enable":false,"value":"-10"},"temp_high":{"enable":false, "value":"50"}}}',
      module_name: ['mcu'],
      params: [],
      results: [
        {
          id: 745560,
          keyName: 'temp_high',
          keyValue: null,
          desp: 'High temperature warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17566,
        },
        {
          id: 745561,
          keyName: 'temp_high.enable',
          keyValue: null,
          desp: 'High temperature warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17566,
        },
        {
          id: 745562,
          keyName: 'temp_high.value',
          keyValue: null,
          desp: 'High temperature warning value(Degrees Celsius)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17566,
        },
        {
          id: 745563,
          keyName: 'temp_low',
          keyValue: null,
          desp: 'Low temperature warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17566,
        },
        {
          id: 745564,
          keyName: 'temp_low.enable',
          keyValue: null,
          desp: 'Low temperature warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17566,
        },
        {
          id: 745565,
          keyName: 'temp_low.value',
          keyValue: null,
          desp: 'Low temperature warning value(Degrees Celsius)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17566,
        },
        {
          id: 745566,
          keyName: 'capacity',
          keyValue: null,
          desp: 'Capacity warning',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17566,
        },
        {
          id: 745567,
          keyName: 'capacity.enable',
          keyValue: null,
          desp: 'Capacity warning[true:open; false:close].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17566,
        },
        {
          id: 745568,
          keyName: 'capacity.value',
          keyValue: null,
          desp: 'Capacity warning value[1-100(%)]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17566,
        },
      ],
    },
    get_oled_config: {
      data: {
        id: 17567,
        title: 'get_oled_config',
        desp: 'Get oled config of mcu.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","mcu","get_config",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"screen_display":{"main":false,"wifi_password":false,"wifi_2g":false,"wifi_5g":false,"lan":false,"vpn":false,"custom":false,"content":"123123"}}}',
      module_name: ['mcu'],
      params: [],
      results: [
        {
          id: 745569,
          keyName: 'screen_display',
          keyValue: null,
          desp: 'screen display info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17567,
        },
        {
          id: 745570,
          keyName: 'screen_display.main',
          keyValue: null,
          desp: 'Overview page screen display switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745571,
          keyName: 'screen_display.wifi_password',
          keyValue: null,
          desp: 'wifi password screen display switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745572,
          keyName: 'screen_display.wifi_2g',
          keyValue: null,
          desp: '2g wifi switch screen display，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745573,
          keyName: 'screen_display.wifi_5g',
          keyValue: null,
          desp: '5g wifi switch screen display，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745574,
          keyName: 'screen_display.lan',
          keyValue: null,
          desp: 'lan screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745575,
          keyName: 'screen_display.vpn',
          keyValue: null,
          desp: 'vpn screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745576,
          keyName: 'screen_display.custom?',
          keyValue: null,
          desp: 'custom screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17567,
        },
        {
          id: 745577,
          keyName: 'screen_display.content',
          keyValue: null,
          desp: 'custom command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17567,
        },
      ],
    },
    set_oled_config: {
      data: {
        id: 17568,
        title: 'set_oled_config',
        desp: 'Get oled config of mcu.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:15',
        create_time: '2024-11-19T17:55:15',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","mcu","set_config",{"screen_display":{"main":false,"wifi_password":false,"wifi_2g":false,"wifi_5g":false,"lan":false,"vpn":false,"custom":false,"content":"123123"}}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['mcu'],
      params: [
        {
          id: 348083,
          keyName: 'screen_display',
          keyValue: null,
          desp: 'screen display info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17568,
        },
        {
          id: 348084,
          keyName: 'screen_display.main',
          keyValue: null,
          desp: 'Overview page screen display switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348085,
          keyName: 'screen_display.wifi_password',
          keyValue: null,
          desp: 'wifi password screen display switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348086,
          keyName: 'screen_display.wifi_2g',
          keyValue: null,
          desp: '2g wifi switch screen display，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348087,
          keyName: 'screen_display.wifi_5g',
          keyValue: null,
          desp: '5g wifi switch screen display，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348088,
          keyName: 'screen_display.lan',
          keyValue: null,
          desp: 'lan screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348089,
          keyName: 'screen_display.vpn',
          keyValue: null,
          desp: 'vpn screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348090,
          keyName: 'screen_display.custom?',
          keyValue: null,
          desp: 'custom screen display page switch，true:enabled false:disabled.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17568,
        },
        {
          id: 348091,
          keyName: 'screen_display.content',
          keyValue: null,
          desp: 'custom command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17568,
        },
      ],
      results: [
        {
          id: 745578,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code,-1;parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17568,
        },
        {
          id: 745579,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17568,
        },
      ],
    },
  },
  {
    module_name: ['modem'],
    get_info: {
      data: {
        id: 17569,
        title: 'get_info',
        desp: 'Get the modems hardware information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","modem","get_info",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"modems":[{"devices":["/dev/ttyUSB1","/dev/cdc-wdm0"],"protocols":["3g","qmi"],"simcard":{"iccid":"1234567890","phone_number":"8617603079735","mcc":"460","mnc":"11"},"type":0,"bus":"1-1","at_port":"/dev/mhi_DUN","data_port":"/dev/mhi_QMI","sms_support":true,"lock_tower_support":true,"qcfg_unsupport":true,"name":" EC25EFAR06A04M4G","version":"RM520NGLAAR01A05M4G_01.001.01.001","vendor":"quectel","imei":"860548047084717"}],"offline_doc":true}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745580,
          keyName: 'modems',
          keyValue: null,
          desp: 'The hardward info of all cellular modems in the devices',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17569,
        },
        {
          id: 745581,
          keyName: 'modems.devices',
          keyValue: null,
          desp: 'Port list of devices of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17569,
        },
        {
          id: 745582,
          keyName: 'modems.type',
          keyValue: null,
          desp: 'The cellular modem type [0: built-in supported modem; 1: external supported modem; 2: unsupported modem]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17569,
        },
        {
          id: 745583,
          keyName: 'modems.bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745584,
          keyName: 'modems.at_port',
          keyValue: null,
          desp: 'The AT command port of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745585,
          keyName: 'modems.data_port',
          keyValue: null,
          desp: 'The data port of the cellular modem, It is used when using the 3G protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745586,
          keyName: 'modems.sms_support',
          keyValue: null,
          desp: 'Whether the cellular modem support SMS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17569,
        },
        {
          id: 745587,
          keyName: 'modems.lock_tower_support',
          keyValue: null,
          desp: 'Whether the cellular modem support tower locking',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17569,
        },
        {
          id: 745588,
          keyName: 'modems.qcfg_unsupport',
          keyValue: null,
          desp: "Whether the cellular modem does not support to set band by AT+QCFG command (true means it doesn't support this command, need to disable AT command set_band)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17569,
        },
        {
          id: 745589,
          keyName: 'modems.imei',
          keyValue: null,
          desp: 'The IMEI of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745590,
          keyName: 'modems.name',
          keyValue: null,
          desp: 'The name of the cellular modem (Some modem may include the software version)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745591,
          keyName: 'modems.version',
          keyValue: null,
          desp: 'The version detail of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745592,
          keyName: 'modems.vendor',
          keyValue: null,
          desp: 'The vendor of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745593,
          keyName: 'modems.protocols',
          keyValue: null,
          desp: 'List of connection protocols supported by the cellular modem (Possible values in the list are 3g, ncm, qmi, qcm, directip, callip)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17569,
        },
        {
          id: 745594,
          keyName: '?modems.simcard',
          keyValue: null,
          desp: 'The SIM card information plugged into the cellular modem (The object is not returned if SIM is not detected)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17569,
        },
        {
          id: 745595,
          keyName: '?modems.simcard.iccid',
          keyValue: null,
          desp: 'The ICCID of the SIM card (The value may not be available if the SIM card requires a PIN to unlock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745596,
          keyName: '?modems.simcard.phone_number',
          keyValue: null,
          desp: 'The phone nubmer of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the phone number)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745597,
          keyName: '?modems.simcard.mcc',
          keyValue: null,
          desp: 'Mobile Country Code MCC (Mobile Country Code) of the SIM card, (Co-identify with the MNC the mobile network operator to which the SIM card belongs, the value may not be available if the SIM card requires a PIN)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745598,
          keyName: '?modems.simcard.mnc',
          keyValue: null,
          desp: 'Mobile Network Code MNC (Mobile Network Code) of the SIM card, (Co-identify with the MCC the mobile network operator to which the SIM card belongs, the value may not be available if the SIM card requires a PIN)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
        {
          id: 745599,
          keyName: '?offline_doc',
          keyValue: null,
          desp: 'true: offline_doc exist, flase: offline_doc not exist',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17569,
        },
        {
          id: 745600,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17569,
        },
        {
          id: 745601,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17569,
        },
      ],
    },
    get_status: {
      data: {
        id: 17570,
        title: 'get_status',
        desp: 'Get the modems status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","modem","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"modems":[{"bus":"1-1","switch_status":0,"current_sim":"1","simcard":{"status":0,"carrier":"CMCC","iccid":"1234567890","phone_number":"8617603079735","mcc":"460","mnc":"02","certification":true,"signal":{"mode":4,"strength":4,"rssi":-67,"rsrp":-60,"rsrq":-10,"sinr":13}},"network":{"status":0,"protocol":"3g","tx":1024,"rx":4096,"new_sms_count":5,"ipv4":{"ip":"103.25.102.101","netmask":"255.255.255.0","gateway":"103.25.102.100","dns":["114.114.114.114","8.8.8.8"]},"ipv6":{"ip":"2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b/64","gateway":"2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b","dns":["2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b","2001:0db8:3c4d:0015:0000:0000:1a2f:1a2b"]}}}]}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745602,
          keyName: 'modems',
          keyValue: null,
          desp: 'The status of all cellular modems in the devices',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17570,
        },
        {
          id: 745603,
          keyName: 'modems.bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745604,
          keyName: '?modems.current_sim',
          keyValue: null,
          desp: 'The SIM card currently used by the device, this value is only available for dual card slot devices [1: SIM 1; 2: SIM 2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745605,
          keyName: '?modems.switch_status',
          keyValue: null,
          desp: "The state of the device's sim card slots, this value is only available for dual card slot devices [0: Active SIM not switched; 1: Switched to backup SIM due to failover]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745606,
          keyName: '?modems.auto_switching',
          keyValue: null,
          desp: 'The status of automatic switching [0: automatic switching is done; 1: automatic switching]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745607,
          keyName: '?modems.simcard',
          keyValue: null,
          desp: 'The status of the SIM card plugged into the cellular modem(this object will not be returned if no SIM card is recognized)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17570,
        },
        {
          id: 745608,
          keyName: '?modems.simcard.status',
          keyValue: null,
          desp: 'The registration status of the SIM card [0: Registered; 1: Unregistered; 2: SIM card needs to be unlocked by PIN code; 3: Ooly one last chance left to unlock SIM card; 4: SIM card has been locked, has no chance to unlock]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745609,
          keyName: '?modems.simcard.carrier',
          keyValue: null,
          desp: "The network operator's name of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the name)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745610,
          keyName: '?modems.simcard.iccid',
          keyValue: null,
          desp: 'The ICCID (Integrated Circuit Card Identification Number) of the SIM card (The value may not be available if the SIM card requires a PIN to unlock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745611,
          keyName: '?modems.simcard.phone_number',
          keyValue: null,
          desp: 'The phone nubmer of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the phone number)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745612,
          keyName: '?modems.simcard.mcc',
          keyValue: null,
          desp: 'MCC (Mobile Country Code) of the SIM card, (Co-identify with the MNC the mobile network operator to which the SIM card belongs, the value may not be available if the SIM card requires a PIN)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745613,
          keyName: '?modems.simcard.mnc',
          keyValue: null,
          desp: 'MNC (Mobile Network Code) of the SIM card, (Co-identify with the MCC the mobile network operator to which the SIM card belongs, the value may not be available if the SIM card requires a PIN)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745614,
          keyName: '?modems.simcard.certification',
          keyValue: null,
          desp: 'true: sim carrier is att or T-Mobile, false: sim carrier is not att or T-Mobile',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17570,
        },
        {
          id: 745615,
          keyName: '?modems.network',
          keyValue: null,
          desp: 'Network status of the cellular modem (this object will not be returned if the cellular interface is disabled)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17570,
        },
        {
          id: 745616,
          keyName: '?modems.network.status',
          keyValue: null,
          desp: 'Networking status [0: Connected; 1: Connecting]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745617,
          keyName: '?modems.network.protocol',
          keyValue: null,
          desp: 'Current dial-up protocol type[3g:qmi:qcm]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745618,
          keyName: '?modems.network.traffic_total',
          keyValue: null,
          desp: 'Total data size of transmitted and receive(Unit: Byte), it is only returned in connected status, i.e. network.status is 0',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745619,
          keyName: '?modems.network.ipv4',
          keyValue: null,
          desp: 'IPv4 network status of the cellular modem, the object is only returned in connected status, i.e. network.status is 0',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17570,
        },
        {
          id: 745620,
          keyName: '?modems.network.ipv4.ip',
          keyValue: null,
          desp: 'The IPv4 address obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745621,
          keyName: '?modems.network.ipv4.netmask',
          keyValue: null,
          desp: 'The IPv4 subnet mask obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745622,
          keyName: '?modems.network.ipv4.gateway',
          keyValue: null,
          desp: 'The IPv4 gateway obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745623,
          keyName: '?modems.network.ipv4.dns',
          keyValue: null,
          desp: 'The IPv4 DNS server list obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17570,
        },
        {
          id: 745624,
          keyName: '?modems.network.ipv6',
          keyValue: null,
          desp: 'IPv6 network status of cellular modem, this object is only returned if IPv6 is enabled and in connected status, i.e. network.status is 0',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17570,
        },
        {
          id: 745625,
          keyName: '?modems.network.ipv6.ip',
          keyValue: null,
          desp: 'The IPv6 address (contain the prefix) obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745626,
          keyName: '?modems.network.ipv6.gateway',
          keyValue: null,
          desp: 'The IPv6 gateway obtained by the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745627,
          keyName: '?modems.network.ipv6.dns',
          keyValue: null,
          desp: 'The IPv6 DNS server list obtained by the cellulayixiugair modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17570,
        },
        {
          id: 745628,
          keyName: '?modems.network.new_sms_count',
          keyValue: null,
          desp: 'Number of unread SMS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745629,
          keyName: '?passthrough',
          keyValue: null,
          desp: 'Passthrough information, this object is returned when the device works in passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745630,
          keyName: '?passthrough.enable',
          keyValue: null,
          desp: 'Enabled status of passthrough [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745631,
          keyName: '?passthrough.ip',
          keyValue: null,
          desp: 'The IPv4 address from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745632,
          keyName: '?passthrough.gateway',
          keyValue: null,
          desp: 'The IPv4 gateway from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745633,
          keyName: '?passthrough.netmask',
          keyValue: null,
          desp: 'The IPv4 subnet mask from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745634,
          keyName: '?passthrough.dns',
          keyValue: null,
          desp: 'The IPv4 DNS server list from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
        {
          id: 745635,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get information]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17570,
        },
        {
          id: 745636,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17570,
        },
      ],
    },
    set_connect: {
      data: {
        id: 17571,
        title: 'set_connect',
        desp: 'Set the dial-up settings of the cellular modem and connect',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_connect",{"bus":"1-1","mode":2,"config":{"description":"config1","protocol":"3g","device":"ttyUSB3","apn":"3gnet","service":"CDCWDMA","auth":"PAP","username":"gl-inet","password":"goodlife1","dial_number":"#9999","ttl":65,"ttl_ipv6":65,"pin_code":"1234","apn_use":1,"roaming":true,"mtu":"1500","band_enable":true,"band_filter_mode":1,"band_list":{"LTE":[1,2,3,4],"NR-SA":[1,2,3,4],"NR-NSA":[1,2,3,4]}}}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348092,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348093,
          keyName: 'mode',
          keyValue: null,
          desp: 'Handle mode, which defines how to handle the submitted settings [0: Apply but not save; 1: Save but not apply; 2: Save and apply]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 348094,
          keyName: 'config',
          keyValue: null,
          desp: 'Apply to the target cellular modem or saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17571,
        },
        {
          id: 348095,
          keyName: 'config.protocol',
          keyValue: null,
          desp: 'Connection protocol used',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348096,
          keyName: 'config.device',
          keyValue: null,
          desp: 'Port of the device used for connection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348097,
          keyName: '?config.apn',
          keyValue: null,
          desp: 'APN (Access Point Name)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348098,
          keyName: '?config.sim_index',
          keyValue: null,
          desp: 'When using dual SIM cards for dialing, specify which SIM card to use [1; 2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348099,
          keyName: '?config.service',
          keyValue: null,
          desp: 'Service type, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348100,
          keyName: '?config.auth',
          keyValue: '"NONE"',
          desp: 'Authentication method [NONE; PAP; CHAP; PAP/CHAP]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348101,
          keyName: '?config.username',
          keyValue: null,
          desp: 'Username for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348102,
          keyName: '?config.password',
          keyValue: null,
          desp: 'Password for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348103,
          keyName: '?config.dial_number',
          keyValue: null,
          desp: 'Dial number, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348104,
          keyName: '?config.ttl',
          keyValue: null,
          desp: 'Data packet TTL (Time to Live), the data packets sent by the cellular interface will be forced to use the value after setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 348105,
          keyName: '?config.ttl_ipv6',
          keyValue: null,
          desp: 'Data packet IPV6 TTL (Time to Live), the data packets sent by the cellular interface will be forced to use the value after setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 348106,
          keyName: '?config.pin_code',
          keyValue: null,
          desp: 'PIN code, it required to unlock the SIM card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348107,
          keyName: '?config.description',
          keyValue: null,
          desp: 'Name of saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348108,
          keyName: '?config.apn_use',
          keyValue: null,
          desp: 'Whether to use apn',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 348109,
          keyName: '?config.mtu',
          keyValue: null,
          desp: 'MTU (Maximum Transmission Unit)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 348110,
          keyName: '?config.roaming',
          keyValue: null,
          desp: 'Whether data roaming is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17571,
        },
        {
          id: 348111,
          keyName: '?config.band_enable',
          keyValue: null,
          desp: 'Whether channel filtering(masking) is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17571,
        },
        {
          id: 348112,
          keyName: '?config.band_filter_mode',
          keyValue: null,
          desp: 'Channel filtering mode [0: allowlist mode, only allow the specified channel; 1: blocklist mode, block the use of the specified channel]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 348113,
          keyName: '?config.band_list',
          keyValue: null,
          desp: 'Specify the list of channels to be allow or block, divided into 3 number arrays LTE, NA-SA, NR-NSA',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17571,
        },
      ],
      results: [
        {
          id: 745637,
          keyName: '?id',
          keyValue: null,
          desp: 'The ID (as unique identifier) for the saved settings, only returned when saving the settings (mode is not 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
        {
          id: 745638,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17571,
        },
        {
          id: 745639,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17571,
        },
      ],
    },
    get_config: {
      data: {
        id: 17572,
        title: 'get_config',
        desp: 'Get the target cellular modem settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_config",{"bus":"1-1"}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"protocol" :"3g","device":"ttyUSB3","apn":"3gnet","service":"CDC-WDMA","auth":"PAP","username":"gl-inet","password":"goodlife1","dial_number":"#9999","ttl":65,"ttl_ipv6":65,"pin_code":"1234","mtu":"1500","band_info":{"LET":[1,2,3,4,5,7,8,12,13,14,17,18,19,20,25,26,28,29,30,32,34,38,39,40,41,42,43,46,48,66,71],"NR-SA":[1,2,3,5,7,8,12,13,14,18,20,25,26,28,29,30,38,40,41,48,66,70,71,75,76,77,78,79],"NR-NSA":[1,2,3,5,7,8,12,13,14,18,20,25,26,28,29,30,38,40,41,48,66,70,71,75,76,77,78,79]},"band_filter_mode":1,"roaming":true,"band_enable":true,"band_list":{"LTE":[1,2],"NR-SA":[1,2],"NR-NSA":[1,2]}}}',
      module_name: ['modem'],
      params: [
        {
          id: 348114,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
      ],
      results: [
        {
          id: 745640,
          keyName: 'protocol',
          keyValue: null,
          desp: 'Connection protocol used',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745641,
          keyName: 'device',
          keyValue: null,
          desp: 'Port of the device used for connection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745642,
          keyName: '?apn',
          keyValue: null,
          desp: 'APN (Access Point Name)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745643,
          keyName: '?service',
          keyValue: null,
          desp: 'Service type, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745644,
          keyName: '?auth',
          keyValue: '"NONE"',
          desp: 'Authentication method [NONE; PAP; CHAP; PAP/CHAP]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745645,
          keyName: '?username',
          keyValue: null,
          desp: 'Username for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745646,
          keyName: '?password',
          keyValue: null,
          desp: 'Password for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745647,
          keyName: '?dial_number',
          keyValue: null,
          desp: 'Dial number, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745648,
          keyName: '?ttl',
          keyValue: null,
          desp: 'Data packet TTL (Time to Live)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17572,
        },
        {
          id: 745649,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'Data packet IPV6 TTL (Time to Live)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17572,
        },
        {
          id: 745650,
          keyName: '?pin_code',
          keyValue: null,
          desp: 'PIN code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745651,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU (Maximum Transmission Unit)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745652,
          keyName: '?passthrough',
          keyValue: null,
          desp: 'Passthrough information, this object is returned when the device works in passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745653,
          keyName: '?passthrough.enable',
          keyValue: null,
          desp: 'Enabled status of passthrough [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745654,
          keyName: '?passthrough.ip',
          keyValue: null,
          desp: 'The IPv4 address from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745655,
          keyName: '?passthrough.gateway',
          keyValue: null,
          desp: 'The IPv4 gateway from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745656,
          keyName: '?passthrough.netmask',
          keyValue: null,
          desp: 'The IPv4 subnet mask from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745657,
          keyName: '?passthrough.dns',
          keyValue: null,
          desp: 'The IPv4 DNS server list from passthrough mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
        {
          id: 745658,
          keyName: 'band_info',
          keyValue: null,
          desp: 'List of supported channels in current network mode, divided into 3 number arrays LTE, NA-SA, NR-NSA',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17572,
        },
        {
          id: 745659,
          keyName: '?roaming',
          keyValue: null,
          desp: 'Whether data roaming is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17572,
        },
        {
          id: 745660,
          keyName: '?band_enable',
          keyValue: null,
          desp: 'Whether channel filtering(masking) is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17572,
        },
        {
          id: 745661,
          keyName: '?band_filter_mode',
          keyValue: null,
          desp: 'Channel filtering mode [0: allowlist mode, only allow the specified channel; 1: blocklist mode, block the use of the specified channel]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17572,
        },
        {
          id: 745662,
          keyName: '?band_list',
          keyValue: null,
          desp: 'Specify the list of channels to be allow or block, divided into 3 number arrays LTE, NA-SA, NR-NSA',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17572,
        },
        {
          id: 745663,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17572,
        },
        {
          id: 745664,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17572,
        },
      ],
    },
    set_auto_connect: {
      data: {
        id: 17573,
        title: 'set_auto_connect',
        desp: 'Automatically set up and connect to the network based on the SIM card information plugged into the target cellular modem.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_auto_connect",{"bus":"1-1"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348115,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17573,
        },
      ],
      results: [
        {
          id: 745665,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17573,
        },
        {
          id: 745666,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17573,
        },
      ],
    },
    disconnect: {
      data: {
        id: 17574,
        title: 'disconnect',
        desp: 'Disconnect the network connection of the target cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","disconnect",{"bus":"1-1"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348116,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17574,
        },
      ],
      results: [
        {
          id: 745667,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17574,
        },
        {
          id: 745668,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17574,
        },
      ],
    },
    send_at_command: {
      data: {
        id: 17575,
        title: 'send_at_command',
        desp: 'Send AT commands to the target cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","send_at_command",{"bus":"1-1","port":"ttyUSB2","command":"AT"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"response":"ok"}}',
      module_name: ['modem'],
      params: [
        {
          id: 348117,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17575,
        },
        {
          id: 348118,
          keyName: 'port',
          keyValue: null,
          desp: 'The port of the device on which the modem receives the AT command, which can be gotten from the get_info interface (Only the ttyUSBX port supports AT commands)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17575,
        },
        {
          id: 348119,
          keyName: 'command',
          keyValue: null,
          desp: 'AT command to request (No more than 256 Bytes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17575,
        },
      ],
      results: [
        {
          id: 745669,
          keyName: 'response',
          keyValue: null,
          desp: 'Response of the AT command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17575,
        },
        {
          id: 745670,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Command exceeds the length limit; -3: Unsupported operation; -4: Unknown error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17575,
        },
        {
          id: 745671,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17575,
        },
      ],
    },
    reboot_modem: {
      data: {
        id: 17576,
        title: 'reboot_modem',
        desp: 'Reboot the target cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","reboot_modem",{"bus":"1-1","hw_reboot":true}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"wait_time":25}}',
      module_name: ['modem'],
      params: [
        {
          id: 348120,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17576,
        },
        {
          id: 348121,
          keyName: '?hw_reboot',
          keyValue: 'false',
          desp: 'Whether this operation uses the hard reboot, i.e. forced reboot by power-off/power-on method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17576,
        },
      ],
      results: [
        {
          id: 745672,
          keyName: 'wait_time',
          keyValue: null,
          desp: 'The time to wait for this reboot operation (Unit: Seconds)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17576,
        },
        {
          id: 745673,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Failure to reboot]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17576,
        },
        {
          id: 745674,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17576,
        },
      ],
    },
    get_cells_info: {
      data: {
        id: 17577,
        title: 'get_cells_info',
        desp: 'Get the network cells information of the target cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_cells_info",{"bus":"1-1"}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"cells":[{"type":"servingcell","id":1234,"band":41,"dl_bandwidth":"20M","ul_bandwidth":"20M","mode":"LTE","rssi":-71,"rsrp":-61,"rsrq":-12,"sinr":13}]}}',
      module_name: ['modem'],
      params: [
        {
          id: 348122,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
      ],
      results: [
        {
          id: 745675,
          keyName: 'cells',
          keyValue: null,
          desp: 'List of network cells information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17577,
        },
        {
          id: 745676,
          keyName: 'cells.type',
          keyValue: null,
          desp: 'The network cell type [servingcell: Serving cell; neighbourcell: Neighbouring cell]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
        {
          id: 745677,
          keyName: '?cells.id',
          keyValue: null,
          desp: 'The network cell ID, It is only returned if the network cell is a serving cell',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745678,
          keyName: 'cells.mode',
          keyValue: null,
          desp: 'Network mode [LTE; WCDMA; TDSCDMA; CDMA; HDR; GSM]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
        {
          id: 745679,
          keyName: '?cells.band',
          keyValue: null,
          desp: 'Work band, It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745680,
          keyName: '?cells.dl_bandwidth',
          keyValue: null,
          desp: 'Download bandwith, It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
        {
          id: 745681,
          keyName: '?cells.ul_bandwidth',
          keyValue: null,
          desp: 'Upload bandwith, It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
        {
          id: 745682,
          keyName: '?cells.rssi',
          keyValue: null,
          desp: 'Received signal strength indicator, It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745683,
          keyName: '?cells.rsrp',
          keyValue: null,
          desp: 'Reference signal received power (Unit: dBm), It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745684,
          keyName: '?cells.rsrq',
          keyValue: null,
          desp: 'Reference signal received quality (Unit: dB), It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745685,
          keyName: '?cells.sinr',
          keyValue: null,
          desp: 'Signal to interference-plus-noise ratio (Unit: dB), It is only returned if the network cell is a serving cell and mode is LTE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745686,
          keyName: '?cells.ecio',
          keyValue: null,
          desp: 'Energy to interference ratio, It is only returned if the network cell is a serving cell and mode is WCDMA,TDSCDMA, CDMA, HDR',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745687,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Failed to get cells information]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17577,
        },
        {
          id: 745688,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17577,
        },
      ],
    },
    get_sms_list: {
      data: {
        id: 17578,
        title: 'get_sms_list',
        desp: 'Get SMS list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_sms_list",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"list":[{"type":1,"name":"xy7rz","phone_number":"15219475678","bus":"1-1.2","date":"21-07-27 18:23:15","body":"hello","status":1}]}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745689,
          keyName: 'list',
          keyValue: null,
          desp: 'SMS list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17578,
        },
        {
          id: 745690,
          keyName: 'list.name',
          keyValue: null,
          desp: 'The unique identifier for the SMS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
        {
          id: 745691,
          keyName: 'list.type',
          keyValue: null,
          desp: 'The SMS type [0: international; 1: national; 2:unknown]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17578,
        },
        {
          id: 745692,
          keyName: 'list.phone_number',
          keyValue: null,
          desp: 'Source number for the SMS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
        {
          id: 745693,
          keyName: 'list.bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, whic is used to distinguish which module the SMS come from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
        {
          id: 745694,
          keyName: 'list.date',
          keyValue: null,
          desp: 'The time when the SMS was received (Format: YY-MM-DD HH:mm:ss)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
        {
          id: 745695,
          keyName: 'list.body',
          keyValue: null,
          desp: 'The SMS content, encoding format is UTF-8',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
        {
          id: 745696,
          keyName: 'list.status',
          keyValue: null,
          desp: 'The Status of the SMS [0: Unread; 1: Read; 2: Sent; 3: Sending; 4: Waiting for send; 5: Failed to send]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17578,
        },
        {
          id: 745697,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17578,
        },
        {
          id: 745698,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17578,
        },
      ],
    },
    set_sms: {
      data: {
        id: 17579,
        title: 'set_sms',
        desp: 'Set the status of SMS',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_sms",{"bus":"1-1","name":"xy7rz","status":0}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348123,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17579,
        },
        {
          id: 348124,
          keyName: '?name',
          keyValue: null,
          desp: 'The unique identifier for the SMS, it is only omitted when status is 6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17579,
        },
        {
          id: 348125,
          keyName: 'status',
          keyValue: null,
          desp: 'The status of the SMS to be set [0: Unread; 1: Read; 2: Sent; 3: Sending; 4: Waiting for send; 5: Failed to send; 6: Set all SMS as read]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17579,
        },
      ],
      results: [
        {
          id: 745699,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: SMS does not exist; -3: Failed to set SMS]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17579,
        },
        {
          id: 745700,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17579,
        },
      ],
    },
    remove_sms: {
      data: {
        id: 17580,
        title: 'remove_sms',
        desp: 'Remove SMS',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","remove_sms",{"bus":"1-1","scope":10,"name":"xy7rz"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348126,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17580,
        },
        {
          id: 348127,
          keyName: 'scope',
          keyValue: null,
          desp: 'Range of SMS to be removed [0: All unread SMS; 1: All read SMS; 2: All sent SMS; 3: All sending SMS; 4: All waiting to send SMS; 5: All failed to send SMS, 10: Specified single SMS; 11: All SMS; 12: All received SMS; 13: All SMS in sending area]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17580,
        },
        {
          id: 348128,
          keyName: '?name',
          keyValue: null,
          desp: 'The unique identifier for the SMS, it is only needed when It is only needed to remove the specified SMS, i.e. scope is 10',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17580,
        },
      ],
      results: [
        {
          id: 745701,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17580,
        },
        {
          id: 745702,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17580,
        },
      ],
    },
    send_sms: {
      data: {
        id: 17581,
        title: 'send_sms',
        desp: 'Send SMS',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_sms_list",{"bus":"1-1","phone_number":"8617603079726","body":"hello","timeout":10}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348129,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17581,
        },
        {
          id: 348130,
          keyName: 'phone_number',
          keyValue: null,
          desp: 'The target number to receive SMS, it contains the country code, such as 8617603079726',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17581,
        },
        {
          id: 348131,
          keyName: 'body',
          keyValue: null,
          desp: 'The SMS content (no more than 140 Bytes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17581,
        },
        {
          id: 348132,
          keyName: 'timeout',
          keyValue: null,
          desp: 'Timeout time (Unit: Seconds), if the value is set to 0, it means that it will return immediately without waiting for the sending result',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17581,
        },
      ],
      results: [
        {
          id: 745703,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Unknown error; -3: Sending failed; -4: Sending timeout; -5: The cellular modem does not support SMS; -6:Current network environment does not support SMS]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17581,
        },
        {
          id: 745704,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17581,
        },
      ],
    },
    set_traffic_config: {
      data: {
        id: 17582,
        title: 'set_traffic_config',
        desp: 'Set dual SIM card traffic auto save switch and traffic limit settings. The API only supports setting the built-in cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_traffic_config",{"bus": "1-1","sim1_traffic_total":"1024","sim2_traffic_total":"2048","save_to_flash":true,"sim1_limit":{"enable":true,"threshold":"1024","unit":"KB","reset_period":"year","month":"1","day":"28","hour":"12"},"sim2_limit":{"enable":true,"threshold":"2048","unit":"MB","reset_period":"week","day":"7","hour":"12"}}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348133,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348134,
          keyName: 'sim1_traffic_total',
          keyValue: null,
          desp: 'The SIM 1 used traffic data(Unit: Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348135,
          keyName: 'sim2_traffic_total',
          keyValue: null,
          desp: 'The SIM 2 used traffic data(Unit: Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348136,
          keyName: 'save_to_flash',
          keyValue: null,
          desp: 'Whether to enable automatic saving of traffic statistics data for the cellular modem, and the automatic saving interval is fixed at 30s.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17582,
        },
        {
          id: 348137,
          keyName: '?sim1_limit',
          keyValue: null,
          desp: 'The SIM 1 traffic config, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17582,
        },
        {
          id: 348138,
          keyName: '?sim1_limit.enable',
          keyValue: null,
          desp: 'Whether to enable sim1 card traffic limit, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17582,
        },
        {
          id: 348139,
          keyName: '?sim1_limit.threshold',
          keyValue: null,
          desp: 'The maximum traffic data limit of the SIM card, if the number exceeds the limit, disable the card or cut the card based on the failover switch, it only returned in "sim1.limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348140,
          keyName: '?sim1_limit.unit',
          keyValue: null,
          desp: 'The traffic statistics unit, the value can be "KB","MB","GB", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348141,
          keyName: '?sim1_limit.reset_period',
          keyValue: null,
          desp: 'The reset period of traffic statistics, when a period ends, traffic data is cleared, the value can be "day"/"week"/"month"/"season"/"year", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348142,
          keyName: '?sim1_limit.month',
          keyValue: null,
          desp: 'The start month of traffic statistics, if "sim1.reset_period" is "year", the value ranges from 1 to 12; if "sim1.reset_period" is "season", the value ranges from 1 to 3, it only returned in "sim1_limit_enable" is true and "sim1.reset_period" is "year"/"season"',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348143,
          keyName: '?sim1_limit.day',
          keyValue: null,
          desp: 'The start day of traffic statistics, if "sim1.reset_period" is "day"/"month"/"season"/"year", the value ranges from 1 to 28; if "sim1.reset_period" is "week", the value ranges from 1 to 7, it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348144,
          keyName: '?sim1_limit.hour',
          keyValue: null,
          desp: 'The start hour of traffic statistics, the value ranges from 0 to 23, it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348145,
          keyName: '?sim2_limit',
          keyValue: null,
          desp: 'The SIM 2 traffic config, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17582,
        },
        {
          id: 348146,
          keyName: '?sim2_limit.enable',
          keyValue: null,
          desp: 'Whether to enable sim2 card traffic limit, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17582,
        },
        {
          id: 348147,
          keyName: '?sim2_limit.threshold',
          keyValue: null,
          desp: 'The maximum traffic data limit of the SIM card, if the number exceeds the limit, disable the card or cut the card based on the failover switch, it only returned in "sim2.limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348148,
          keyName: '?sim2_limit.unit',
          keyValue: null,
          desp: 'The traffic statistics unit, the value can be "KB","MB","GB", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348149,
          keyName: '?sim2_limit.reset_period',
          keyValue: null,
          desp: 'The reset period of traffic statistics, when a period ends, traffic data is cleared, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348150,
          keyName: '?sim2_limit.month',
          keyValue: null,
          desp: 'The start month of traffic statistics, if "sim2.reset_period" is "year", the value ranges from 1 to 12; if "sim2.reset_period" is "season", the value ranges from 1 to 3, it only returned in "sim2_limit_enable" is true and "sim2.reset_period" is "year"/"season"',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348151,
          keyName: '?sim2_limit.day',
          keyValue: null,
          desp: 'The start day of traffic statistics, if "sim2.reset_period" is "day"/"month"/"season"/"year", the value ranges from 1 to 28; if "sim2.reset_period" is "week", the value ranges from 1 to 7, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
        {
          id: 348152,
          keyName: '?sim2_limit.hour',
          keyValue: null,
          desp: 'The start hour of traffic statistics, the value ranges from 0 to 23, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
      ],
      results: [
        {
          id: 745705,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17582,
        },
        {
          id: 745706,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17582,
        },
      ],
    },
    get_traffic_config: {
      data: {
        id: 17583,
        title: 'get_traffic_config',
        desp: 'Get dual SIM card traffic auto save switch and traffic limit settings. The API only supports setting the built-in cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_traffic_config",{"bus":"1-1"}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"sim1_traffic_total":"1024","sim2_traffic_total":"2048","save_to_flash":true,"sim1_limit":{"enable":true,"threshold":"1024","unit":"KB","reset_period":"year","month":"1","day":"28","hour":"12"},"sim2_limit":{"enable":true,"threshold":"2048","unit":"MB","reset_period":"week","day":"7","hour":"12"}},"id":1}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745707,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745708,
          keyName: 'sim1_traffic_total',
          keyValue: null,
          desp: 'The SIM 1 used traffic data(Unit: Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745709,
          keyName: 'sim2_traffic_total',
          keyValue: null,
          desp: 'The SIM 2 used traffic data(Unit: Byte)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745710,
          keyName: 'save_to_flash',
          keyValue: null,
          desp: 'Whether to enable automatic saving of traffic statistics data for the cellular modem, and the automatic saving interval is fixed at 30s.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17583,
        },
        {
          id: 745711,
          keyName: '?sim1_limit',
          keyValue: null,
          desp: 'The SIM 1 traffic config, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17583,
        },
        {
          id: 745712,
          keyName: '?sim1_limit.enable',
          keyValue: null,
          desp: 'Whether to enable sim1 card traffic limit, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17583,
        },
        {
          id: 745713,
          keyName: '?sim1_limit.threshold',
          keyValue: null,
          desp: 'The maximum traffic data limit of the SIM card, if the number exceeds the limit, disable the card or cut the card based on the failover switch, it only returned in "sim1.limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745714,
          keyName: '?sim1_limit.unit',
          keyValue: null,
          desp: 'The traffic statistics unit, the value can be "KB","MB","GB", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745715,
          keyName: '?sim1_limit.reset_period',
          keyValue: null,
          desp: 'The reset period of traffic statistics, when a period ends, traffic data is cleared, the value can be "day"/"week"/"month"/"season"/"year", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745716,
          keyName: '?sim1_limit.month',
          keyValue: null,
          desp: 'The start month of traffic statistics, if "sim1.reset_period" is "year", the value ranges from 1 to 12; if "sim1.reset_period" is "season", the value ranges from 1 to 3, it only returned in "sim1_limit_enable" is true and "sim1.reset_period" is "year"/"season"',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745717,
          keyName: '?sim1_limit.day',
          keyValue: null,
          desp: 'The start day of traffic statistics, if "sim1.reset_period" is "day"/"month"/"season"/"year", the value ranges from 1 to 28; if "sim1.reset_period" is "week", the value ranges from 1 to 7, it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745718,
          keyName: '?sim1_limit.hour',
          keyValue: null,
          desp: 'The start hour of traffic statistics, the value ranges from 0 to 23, it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745719,
          keyName: '?sim2_limit',
          keyValue: null,
          desp: 'The SIM 2 traffic config, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17583,
        },
        {
          id: 745720,
          keyName: '?sim2_limit.enable',
          keyValue: null,
          desp: 'Whether to enable sim2 card traffic limit, it only returned in "traffic_save_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17583,
        },
        {
          id: 745721,
          keyName: '?sim2_limit.threshold',
          keyValue: null,
          desp: 'The maximum traffic data limit of the SIM card, if the number exceeds the limit, disable the card or cut the card based on the failover switch, it only returned in "sim2.limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745722,
          keyName: '?sim2_limit.unit',
          keyValue: null,
          desp: 'The traffic statistics unit, the value can be "KB","MB","GB", it only returned in "sim1_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745723,
          keyName: '?sim2_limit.reset_period',
          keyValue: null,
          desp: 'The reset period of traffic statistics, when a period ends, traffic data is cleared, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745724,
          keyName: '?sim2_limit.month',
          keyValue: null,
          desp: 'The start month of traffic statistics, if "sim2.reset_period" is "year", the value ranges from 1 to 12; if "sim2.reset_period" is "season", the value ranges from 1 to 3, it only returned in "sim2_limit_enable" is true and "sim2.reset_period" is "year"/"season"',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745725,
          keyName: '?sim2_limit.day',
          keyValue: null,
          desp: 'The start day of traffic statistics, if "sim2.reset_period" is "day"/"month"/"season"/"year", the value ranges from 1 to 28; if "sim2.reset_period" is "week", the value ranges from 1 to 7, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745726,
          keyName: '?sim2_limit.hour',
          keyValue: null,
          desp: 'The start hour of traffic statistics, the value ranges from 0 to 23, it only returned in "sim2_limit_enable" is true',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
        {
          id: 745727,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17583,
        },
        {
          id: 745728,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17583,
        },
      ],
    },
    get_debug_msg: {
      data: {
        id: 17584,
        title: 'get_debug_msg',
        desp: 'Get the debug information of the target cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_debug_msg",{"bus":"1-1"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"msgs":[{"cmd":"AT","result":"OK"}]}}',
      module_name: ['modem'],
      params: [
        {
          id: 348153,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17584,
        },
      ],
      results: [
        {
          id: 745729,
          keyName: 'msgs',
          keyValue: null,
          desp: 'An array of objects, each of the objects means a piece of status message. The specific content is uncertain, determined by the characteristics of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17584,
        },
        {
          id: 745730,
          keyName: 'msgs.cmd',
          keyValue: null,
          desp: 'Requested AT command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17584,
        },
        {
          id: 745731,
          keyName: 'msgs.result',
          keyValue: null,
          desp: 'Response of the AT command',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17584,
        },
        {
          id: 745732,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Failed to get information]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17584,
        },
        {
          id: 745733,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17584,
        },
      ],
    },
    get_name: {
      data: {
        id: 17585,
        title: 'get_name',
        desp: 'Get the cellular modem name',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","modem","get_name",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"name":"RM520NGLAAR01A06M4G"}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745734,
          keyName: '?name',
          keyValue: null,
          desp: 'The cellular modem name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17585,
        },
        {
          id: 745735,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17585,
        },
        {
          id: 745736,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17585,
        },
      ],
    },
    get_sim_signal: {
      data: {
        id: 17586,
        title: 'get_sim_signal',
        desp: 'Get SIM card information, simplified version of get_sim_info interface, does not judge sim card plugged status and registration status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_sim_signal",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"slot":1,"signal":{"mode":4,"strength":4,"rssi":-67,"rsrp":-60,"rsrq":-10,"sinr":13}}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745737,
          keyName: 'slot',
          keyValue: null,
          desp: 'slot info[1:slot 1; 2:slot 2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745738,
          keyName: '?signal',
          keyValue: null,
          desp: 'signal value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17586,
        },
        {
          id: 745739,
          keyName: '?signal.mode',
          keyValue: null,
          desp: 'Network mode [2: 2G mode; 3: 3G mode; 4: 4G mode; 5: 5G mode; 41: 4G+ mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745740,
          keyName: '?signal.strength',
          keyValue: null,
          desp: 'Overall signal strength [1: Poor; 2: Fair; 3: Good; 4: Excellent]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745741,
          keyName: '?signal.rssi',
          keyValue: null,
          desp: 'Received Signal Strength Indicator',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745742,
          keyName: '?signal.rsrp',
          keyValue: null,
          desp: 'Reference signal received power (Unit: dBm), it only returned in 4G or 4G+ mode）',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745743,
          keyName: '?signal.rsrq',
          keyValue: null,
          desp: 'Reference signal received quality (Unit: dB), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745744,
          keyName: '?signal.sinr',
          keyValue: null,
          desp: 'Reference signal received quality (Unit: dB), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745745,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17586,
        },
        {
          id: 745746,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17586,
        },
      ],
    },
    get_sim_info: {
      data: {
        id: 17587,
        title: 'get_sim_info',
        desp: 'Get the information of SIM card',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_sim_info",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"signal":{"mode":4,"strength":4,"rssi":-67,"rsrp":-60,"rsrq":-10,"sinr":13}}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745747,
          keyName: 'signal',
          keyValue: null,
          desp: 'Signal value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17587,
        },
        {
          id: 745748,
          keyName: '?signal.mode',
          keyValue: null,
          desp: 'Network mode [2: 2G mode; 3: 3G mode; 4: 4G mode; 5: 5G mode; 41: 4G+ mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745749,
          keyName: '?signal.strength',
          keyValue: null,
          desp: 'Overall signal strength [1: Poor; 2: Fair; 3: Good; 4: Excellent]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745750,
          keyName: '?signal.rssi',
          keyValue: null,
          desp: 'Received Signal Strength Indicator',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745751,
          keyName: '?signal.rsrp',
          keyValue: null,
          desp: 'Reference signal received power (Unit: dBm), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745752,
          keyName: '?signal.rsrq',
          keyValue: null,
          desp: 'Reference signal received quality (Unit: dB), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745753,
          keyName: '?signal.sinr',
          keyValue: null,
          desp: 'Signal to interference-plus-noise ratio (Unit: dB), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745754,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -3: the cellular modem initialization failured]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17587,
        },
        {
          id: 745755,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17587,
        },
      ],
    },
    set_upgrade: {
      data: {
        id: 17588,
        title: 'set_upgrade',
        desp: 'Upgrade cellular modem with PCIe access',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_upgrade",{"modem_url":"/tmp/modem_ver","target_version":"RM520NGLAAR01A06M4G_01.001.01.001","current_version":"RM520NGLAAR01A05M4G_01.001.01.001","hash_type":"sha256","hash_value":"3db150d0c4be6c3783524b6dafa55abab14cdd65f951232aa01c40633ef00bdb","firmware_upload":"router","upgrade_type":"OTG"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348154,
          keyName: 'modem_url',
          keyValue: null,
          desp: 'The path to the cellular modem firmware that needs to be downloaded',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348155,
          keyName: 'target_version',
          keyValue: null,
          desp: 'Target version to upgrade to',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348156,
          keyName: 'current_version',
          keyValue: null,
          desp: 'Current version of the cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348157,
          keyName: 'firmware_upload',
          keyValue: null,
          desp: 'Firmware getting method [modem: Cellular modem download; router: Router upload]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348158,
          keyName: 'hash_type',
          keyValue: null,
          desp: 'Hash algorithm used to verify firmware integrity',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348159,
          keyName: 'hash_value',
          keyValue: null,
          desp: 'Hash used to verify firmware integrity, only sha256sum supported currently',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
        {
          id: 348160,
          keyName: 'upgrade_type',
          keyValue: null,
          desp: 'Firmware upgrade method [full_ota: Full upgrade; delta_ota: Delta update]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
      ],
      results: [
        {
          id: 745756,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Faar modem; -2: The current version is the same as the target version; -3: The upgrade is in progress; -4: The version number of the cellular modem does not match the current version; -5: Some parameters is wrong]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17588,
        },
        {
          id: 745757,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error messageiled to get the version number of the cellul',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17588,
        },
      ],
    },
    set_slot_config: {
      data: {
        id: 17589,
        title: 'set_slot_config',
        desp: 'Set dual SIM card settings. The API only supports setting the built-in cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_slot_config",{"bus":"0001:01:00.0","enable_switch":true,"current_sim":"1","sim1_profile":"dfdffbCZMB53KHk6","main_sim":"1","failover_interval":"120","sim2_profile":"o2bCZMB53KHk6HAX","enable_timing":true,"hour":"05","min":"00"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348161,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348162,
          keyName: 'enable_switch',
          keyValue: 'false',
          desp: 'Whether enables dual SIM card failover, that is, the backup card is automatically switched when the network of the main card is unavailable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17589,
        },
        {
          id: 348163,
          keyName: '?current_sim',
          keyValue: null,
          desp: 'The currently used SIM card slot, which is required when SIM card failover is disabled [1: SIM 1; 2: SIM 2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348164,
          keyName: '?sim1_profile',
          keyValue: null,
          desp: 'The settings ID used for the SIM 1 slot points to a saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348165,
          keyName: '?sim2_profile',
          keyValue: null,
          desp: 'The settings ID used for the SIM 2 slot points to a saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348166,
          keyName: '?sim1_config',
          keyValue: null,
          desp: "The settings network configure for the SIM 1 slot.Refer to 'set_connect'",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348167,
          keyName: '?sim2_config',
          keyValue: null,
          desp: "The settings network configure for the SIM 2 slot.Refer to 'set_connect'",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348168,
          keyName: '?main_sim',
          keyValue: null,
          desp: 'The main SIM slot, which is required when SIM failover is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348169,
          keyName: '?failover_interval',
          keyValue: '300',
          desp: 'The failover interval time (Unit: Seconds), which is required when SIM failover is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348170,
          keyName: 'enable_timing',
          keyValue: 'false',
          desp: 'Whether to enable scheduled switching back to the main card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17589,
        },
        {
          id: 348171,
          keyName: '?hour',
          keyValue: '03',
          desp: 'The hours of scheduled switching time, which is required when scheduled switching back is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
        {
          id: 348172,
          keyName: '?min',
          keyValue: '00',
          desp: 'The minutes of scheduled switching time, which is required when scheduled switching back is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
      ],
      results: [
        {
          id: 745758,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17589,
        },
        {
          id: 745759,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17589,
        },
      ],
    },
    get_slot_config: {
      data: {
        id: 17590,
        title: 'get_slot_config',
        desp: 'Get dual SIM card settings. The API only supports setting the built-in cellular modem',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_slot_config",{"bus":"0001:01:00.0"}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"enable_switch":true,"current_sim":"1","main_sim":"1","failover_interval":"120","sim1_profile":"f9FQ3vUzMJmih4Ck","sim2_profile":"o2bCZMB53KHk6HAX","enable_timing":true,"hour":"05","min":"00","sim1":{"carrier":"CHN-UNICOM","phone_number":"13060005427","iccid":"89860118801382789221","network":{"protocol":"3g","device":"ttyUSB3","apn":"3gnet","service":"CDC-WDMA","auth":"PAP","username":"gl-inet","password":"goodlife1","dial_number":"#9999","ttl":"65","ttl_ipv6":"65","pin_code":"1234"}},"sim2":{"carrier":"CHN-UNICOM","phone_number":"13054365427","iccid":"89860322201382789221","network":{"protocol":"3g","device":"ttyUSB3","apn":"3gnet","service":"CDC-WDMA","auth":"PAP","username":"gl-inet","password":"goodlife1","dial_number":"#9999","ttl":"65","ttl_ipv6":"65","pin_code":"1234"}}}}',
      module_name: ['modem'],
      params: [
        {
          id: 348173,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
      ],
      results: [
        {
          id: 745760,
          keyName: 'enable_switch',
          keyValue: 'false',
          desp: 'Whether enables dual SIM card failover, that is, the backup card is automatically switched when the network of the main card is unavailable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17590,
        },
        {
          id: 745761,
          keyName: 'current_sim',
          keyValue: null,
          desp: 'The currently used SIM card slot, which is required when SIM card failover is disabled [1: SIM 1; 2: SIM 2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745762,
          keyName: '?main_sim',
          keyValue: null,
          desp: 'The main SIM slot, which is required when SIM failover is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745763,
          keyName: '?failover_interval',
          keyValue: '300',
          desp: 'The failover interval time (Unit: Seconds), which is required when SIM failover is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745764,
          keyName: '?sim1_profile',
          keyValue: null,
          desp: 'The settings ID used for the SIM 1 slot points to a saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745765,
          keyName: '?sim2_profile',
          keyValue: null,
          desp: 'The settings ID used for the SIM 2 slot points to a saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745766,
          keyName: 'enable_timing',
          keyValue: 'false',
          desp: 'Whether to enable scheduled switching back to the main card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17590,
        },
        {
          id: 745767,
          keyName: '?hour',
          keyValue: '03',
          desp: 'The hours of scheduled switching time, which is required when scheduled switching back is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745768,
          keyName: '?min',
          keyValue: '00',
          desp: 'The minutes of scheduled switching time, which is required when scheduled switching back is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745769,
          keyName: '?sim1',
          keyValue: null,
          desp: 'The SIM 1 card information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17590,
        },
        {
          id: 745770,
          keyName: '?sim1.carrier',
          keyValue: null,
          desp: "The network operator's name of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the name)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745771,
          keyName: '?sim1.phone_number',
          keyValue: null,
          desp: 'The phone nubmer of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the phone number)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745772,
          keyName: '?sim1.iccid',
          keyValue: null,
          desp: 'The ICCID of the SIM card (The value may not be available if the SIM card requires a PIN to unlock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745773,
          keyName: '?sim2',
          keyValue: null,
          desp: 'The SIM 2 card information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17590,
        },
        {
          id: 745774,
          keyName: '?sim2.carrier',
          keyValue: null,
          desp: "The network operator's name of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the name)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745775,
          keyName: '?sim2.phone_number',
          keyValue: null,
          desp: 'The phone nubmer of the SIM card (The value may not be available if the SIM card requires a PIN to unlock or the SIM card does not store the phone number)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745776,
          keyName: '?sim2.iccid',
          keyValue: null,
          desp: 'The ICCID of the SIM card (The value may not be available if the SIM card requires a PIN to unlock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
        {
          id: 745777,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17590,
        },
        {
          id: 745778,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17590,
        },
      ],
    },
    remove_profile: {
      data: {
        id: 17591,
        title: 'remove_profile',
        desp: 'Remove a saved cellular modem connection settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","remove_profile",{"id":"1"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348174,
          keyName: 'id',
          keyValue: null,
          desp: 'the ID of the settings to remove',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17591,
        },
      ],
      results: [
        {
          id: 745779,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17591,
        },
        {
          id: 745780,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17591,
        },
      ],
    },
    get_profile_list: {
      data: {
        id: 17592,
        title: 'get_profile_list',
        desp: 'Get a list of all cellular modem connection settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_profile_list",{"bus":"1-1"}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"profiles":[{"pin_code":"1234","protocol":"3g","id":"visible","service":"3g","dial_number":"","password":"","apn":"VSBLINTERNET","description":"VERIZON","device":"","username":"","ttl":65,"ttl_ipv6":65,"auth":"","band_enable":true,"band_filter_mode":1,"band_list":{"LTE":[1,2],"NR-SA":[1,2],"NR-NSA":[1,2]},"roaming":true}]}}',
      module_name: ['modem'],
      params: [
        {
          id: 348175,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
      ],
      results: [
        {
          id: 745781,
          keyName: 'profiles',
          keyValue: null,
          desp: 'Modem dialup configuration information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17592,
        },
        {
          id: 745782,
          keyName: 'id',
          keyValue: null,
          desp: 'The ID of the cellular modem connection settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745783,
          keyName: 'protocol',
          keyValue: null,
          desp: 'Connection protocol used',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745784,
          keyName: 'device',
          keyValue: null,
          desp: 'Port of the device used for connection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745785,
          keyName: '?apn',
          keyValue: null,
          desp: 'APN (Access Point Name)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745786,
          keyName: '?service',
          keyValue: null,
          desp: 'Service type, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745787,
          keyName: '?auth',
          keyValue: '"NONE"',
          desp: 'Authentication method [NONE; PAP; CHAP; PAP/CHAP]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745788,
          keyName: '?username',
          keyValue: null,
          desp: 'Username for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745789,
          keyName: '?password',
          keyValue: null,
          desp: 'Password for authentication, it is only valid when auth is not NONE',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745790,
          keyName: '?dial_number',
          keyValue: null,
          desp: 'Dial number, it is required only when using 3G protocol, i.e. protocol is 3g',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745791,
          keyName: '?ttl',
          keyValue: null,
          desp: 'Data packet TTL (Time to Live), the data packets sent by the cellular interface will be forced to use the value after setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17592,
        },
        {
          id: 745792,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'Data packet IPV6 TTL (Time to Live), the data packets sent by the cellular interface will be forced to use the value after setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17592,
        },
        {
          id: 745793,
          keyName: '?pin_code',
          keyValue: null,
          desp: 'PIN code, it required to unlock the SIM card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745794,
          keyName: '?description',
          keyValue: null,
          desp: 'Name of saved settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745795,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU (Maximum Transmission Unit)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
        {
          id: 745796,
          keyName: '?roaming',
          keyValue: null,
          desp: 'Whether data roaming is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17592,
        },
        {
          id: 745797,
          keyName: '?band_enable',
          keyValue: null,
          desp: 'Whether channel filtering(masking) is enabled [0: Disabled; 1: Enabled]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17592,
        },
        {
          id: 745798,
          keyName: '?band_filter_mode',
          keyValue: null,
          desp: 'Channel filtering mode [0: allowlist mode, only allow the specified channel; 1: blocklist mode, block the use of the specified channel]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17592,
        },
        {
          id: 745799,
          keyName: '?band_list',
          keyValue: null,
          desp: 'Specify the list of channels to be allow or block, divided into 3 number arrays LTE, NA-SA, NR-NSA',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17592,
        },
        {
          id: 745800,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17592,
        },
        {
          id: 745801,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17592,
        },
      ],
    },
    get_signals: {
      data: {
        id: 17593,
        title: 'get_signals',
        desp: 'Gets the signal for the specified time interval.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_signals",{"time":10}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"level":{"NR5G-SA":{"sinr":[-10,-5,0,5],"rsrq":[-31,-28,-25,-19],"rsrp":[-115,-100,-95,-90]},"LTE":{"sinr":[-11,-7,-3,1],"rssi":[-118,-113,-108,-103],"rsrq":[-23,-21,-19,-17],"rsrp":[-120,-115,-110,-105]},"WCDMA":{"rscp":[-112,-107,-102,-97],"ecio":[-120,-115,-110,-105]},"TDSCDMA":{"rscp":[-110,-107,-102,-97]},"EVDO":{"snr":[1,3,5,7],"rssi":[-105,-90,-75,-65]},"GSM":{"rssi":[-107,-103,-97,-89]},"NR5G-NSA":{"sinr":[-10,-5,0,5],"rsrq":[-31,-28,-25,-19],"rsrp":[-115,-100,-95,-90]},"CDMA":{"snr":[-150,-130,-110,-90],"rssi":[-100,-95,-85,-75]}},"signals":[{"rsrp":-80,"mode":5,"rsrq":-11,"slot":1,"sinr":25,"timestamp":1690106819,"strength":4,"network_type":"NR5G-SA"}]}}',
      module_name: ['modem'],
      params: [
        {
          id: 348176,
          keyName: '?time',
          keyValue: null,
          desp: 'Time interval.Default:1800s',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
      ],
      results: [
        {
          id: 745802,
          keyName: 'level',
          keyValue: null,
          desp: 'Signal value level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745803,
          keyName: 'level.NR5G-SA',
          keyValue: null,
          desp: 'SA signal level:{"sinr":[],"rsrq":[],"rsrp":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745804,
          keyName: 'level.NR5G-NSA',
          keyValue: null,
          desp: 'NSA signal level:{"sinr":[],"rsrq":[],"rsrp":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745805,
          keyName: 'level.LTE',
          keyValue: null,
          desp: 'LTE signal level:{"sinr":[],"rssi":[],"rsrq":[],"rsrp":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745806,
          keyName: 'level.WCDMA',
          keyValue: null,
          desp: 'WCAMA signal level:{"rscp":[],"ecio":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745807,
          keyName: 'level.TDSCDMA',
          keyValue: null,
          desp: 'TDSCDMA signal level:{"rscp":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745808,
          keyName: 'level.CDMA',
          keyValue: null,
          desp: 'CDMA signal level:{"snr":[],"rssi":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745809,
          keyName: 'level.EVDO',
          keyValue: null,
          desp: 'EVDO signal level:{"snr":[],"rssi":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745810,
          keyName: 'level.GSM',
          keyValue: null,
          desp: 'GSM sginal level:{"rssi":[]}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745811,
          keyName: '?signals',
          keyValue: null,
          desp: 'Signal value set',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17593,
        },
        {
          id: 745812,
          keyName: '?signals.slot',
          keyValue: null,
          desp: '1:slot 1;2:slot 2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745813,
          keyName: '?signals.timestamp',
          keyValue: null,
          desp: 'Timestamp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745814,
          keyName: '?signal.network_type',
          keyValue: null,
          desp: 'Network mode [2: 2G mode; 3: 3G mode; 4: 4G mode; 5: 5G SA mode; 41: 4G+ mode; 51: 5G NSA mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17593,
        },
        {
          id: 745815,
          keyName: '?signal.strength',
          keyValue: null,
          desp: 'Signal strength [1: Poor; 2: Fair; 3: Good; 4: Excellent]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745816,
          keyName: '?signal.rssi',
          keyValue: null,
          desp: 'Received Signal Strength Indicator (Unit: dBm)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745817,
          keyName: '?signal.rsrp',
          keyValue: null,
          desp: 'Reference Signal Receiving Power (Unit: dBm)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745818,
          keyName: '?signal.rsrq',
          keyValue: null,
          desp: 'Reference Signal Receiving Quality',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745819,
          keyName: '?signal.sinr',
          keyValue: null,
          desp: 'Signal to Interference plus Noise Ratio (Unit: dB)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745820,
          keyName: '?signal.rscp',
          keyValue: null,
          desp: 'Receive Signal Channel Power (Unit: dBm)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745821,
          keyName: '?signal.ecio',
          keyValue: null,
          desp: 'Signal to Interference plus Noise Ratio (Unit: dB)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745822,
          keyName: '?signal.snr',
          keyValue: null,
          desp: 'Signal to Interference plus Noise Ratio (Unit: dB)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745823,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17593,
        },
        {
          id: 745824,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17593,
        },
      ],
    },
    set_cell_tower: {
      data: {
        id: 17594,
        title: 'set_cell_tower',
        desp: 'Lock specified cell tower.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","set_cell_tower",{"bus": "0001:01:00.0","slot": 1,"lock": true,"band": 1,"mcc": 460,"rsrp": -80,"freq": 428910,"strength": 4,"bandwidth": 106,"pci": 952,"cellid": "7602244D0","mnc": 11,"tac": "76011A","carrier":"CMCC","srxlev": 49,"scs": 15,"rsrq": -11,"network_type": "NR5G"}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{}}',
      module_name: ['modem'],
      params: [
        {
          id: 348177,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
        {
          id: 348178,
          keyName: 'slot',
          keyValue: null,
          desp: 'Slot.0,A card slot;1:slot 1 for dual slot;2:slot 2 for dual slot',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348179,
          keyName: 'lock',
          keyValue: null,
          desp: 'Whether to lock the cell tower.true:lock cell tower;false:unlock cell tower',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17594,
        },
        {
          id: 348180,
          keyName: 'network_type',
          keyValue: null,
          desp: 'Cellular network type:LTE/NR5G',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
        {
          id: 348181,
          keyName: 'mcc',
          keyValue: null,
          desp: 'Mobile Country Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348182,
          keyName: 'mnc',
          keyValue: null,
          desp: 'Mobile Network Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348183,
          keyName: 'freq',
          keyValue: null,
          desp: 'Cell frequency',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348184,
          keyName: 'pci',
          keyValue: null,
          desp: 'Physical cell ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348185,
          keyName: '?srxlev',
          keyValue: null,
          desp: 'Cell selection RX level value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348186,
          keyName: '?squal',
          keyValue: null,
          desp: 'Cell selection quality value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348187,
          keyName: '?scs',
          keyValue: null,
          desp: 'Sub-carrier space',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348188,
          keyName: 'cellid',
          keyValue: null,
          desp: 'Cell identity',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
        {
          id: 348189,
          keyName: 'tac',
          keyValue: null,
          desp: 'Tracking area code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
        {
          id: 348190,
          keyName: 'carrier',
          keyValue: null,
          desp: 'Carrier name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
        {
          id: 348191,
          keyName: '?bandwidth',
          keyValue: null,
          desp: 'Bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 348192,
          keyName: '?band',
          keyValue: null,
          desp: 'Frequency band',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
      ],
      results: [
        {
          id: 745825,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Lock tower failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17594,
        },
        {
          id: 745826,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17594,
        },
      ],
    },
    get_cell_tower: {
      data: {
        id: 17595,
        title: 'get_cell_tower',
        desp: 'Gets the configuration for locked the tower',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","get_cell_tower",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"slot2":{"band":2,"mcc":460,"freq":2452,"pci":8,"cellid":"D2AA512","mnc":11,"srxlev":28,"tac":770,"carrier":"CT","squal":120,"network_type":"LTE"},"slot1":{"band":1,"mcc":460,"scs":15,"freq":428910,"pci":952,"bandwidth":106,"mnc":2,"srxlev":49,"tac":76011,"carrier":"CMCC","cellid":"7602244D0","network_type":"NR5G"}}}',
      module_name: ['modem'],
      params: [],
      results: [
        {
          id: 745827,
          keyName: 'slotx.network_type',
          keyValue: null,
          desp: 'Cellular network type:LTE/NR5G.slotx:slot,slot1,slot2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17595,
        },
        {
          id: 745828,
          keyName: 'slotx.mcc',
          keyValue: null,
          desp: 'Mobile Country Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745829,
          keyName: 'slotx.mnc',
          keyValue: null,
          desp: 'Mobile Network Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745830,
          keyName: 'slotx.freq',
          keyValue: null,
          desp: 'Cell frequency',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745831,
          keyName: 'slotx.pci',
          keyValue: null,
          desp: 'Physical cell ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745832,
          keyName: 'slotx.srxlev',
          keyValue: null,
          desp: 'Cell selection RX level value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745833,
          keyName: 'slotx.squal',
          keyValue: null,
          desp: 'Cell selection quality value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745834,
          keyName: 'slotx.scs',
          keyValue: null,
          desp: 'Sub-carrier space',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745835,
          keyName: 'slotx.cellid',
          keyValue: null,
          desp: 'Cell identity',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17595,
        },
        {
          id: 745836,
          keyName: 'slotx.tac',
          keyValue: null,
          desp: 'Tracking area code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745837,
          keyName: 'slotx.carrier',
          keyValue: null,
          desp: 'Carrier name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17595,
        },
        {
          id: 745838,
          keyName: 'slotx.bandwidth',
          keyValue: null,
          desp: 'Bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745839,
          keyName: 'slotx.band',
          keyValue: null,
          desp: 'Frequency band',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745840,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: get tower configuration failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17595,
        },
        {
          id: 745841,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17595,
        },
      ],
    },
    scan_cell_tower: {
      data: {
        id: 17596,
        title: 'scan_cell_tower',
        desp: 'Scan cell tower lists.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","scan_cell_tower",{"bus": "0001:01:00.0"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"towers":[{"band":1,"mcc":460,"rsrp":-79,"freq":428910,"strength":4,"bandwidth":106,"pci":952,"cellid":"7602244D0","mnc":11,"tac":"76011A","carrier":"CT","srxlev":50,"scs":15,"rsrq":-11,"network_type":"NR5G"},{"band":1,"mcc":460,"rsrp":-79,"freq":428910,"strength":4,"bandwidth":106,"pci":952,"cellid":"7602244D0","mnc":1,"tac":"76011A","carrier":"CMCC","srxlev":50,"scs":15,"rsrq":-11,"network_type":"NR5G"},{"band":78,"mcc":460,"rsrp":-105,"freq":627264,"strength":2,"bandwidth":273,"pci":165,"cellid":"760300000","mnc":11,"tac":"76011A","carrier":"CT","srxlev":20,"scs":30,"rsrq":-11,"network_type":"NR5G"},{"band":78,"mcc":460,"rsrp":-105,"freq":627264,"strength":2,"bandwidth":273,"pci":165,"cellid":"760300000","mnc":7,"tac":"76011A","carrier":"CMCC","srxlev":20,"scs":30,"rsrq":-11,"network_type":"NR5G"},{"band":78,"mcc":460,"rsrp":-105,"freq":627264,"strength":2,"bandwidth":273,"pci":165,"cellid":"760300000","mnc":1,"tac":"76011A","carrier":"CU","srxlev":20,"scs":30,"rsrq":-11,"network_type":"NR5G"},{"mcc":460,"rsrp":-76,"freq":100,"strength":4,"pci":404,"cellid":"424E290","mnc":11,"tac":"770F","carrier":"CT","srxlev":47,"squal":125,"rsrq":-4,"network_type":"LTE"},{"mcc":460,"rsrp":-76,"freq":100,"strength":4,"pci":404,"cellid":"424E290","mnc":1,"tac":"770F","carrier":"CMCC","srxlev":47,"squal":125,"rsrq":-4,"network_type":"LTE"},{"mcc":460,"rsrp":-110,"freq":3740,"strength":3,"pci":236,"cellid":"61537F2","mnc":1,"tac":"2604","carrier":"CMCC","srxlev":14,"squal":111,"rsrq":-17,"network_type":"LTE"},{"mcc":460,"rsrp":-118,"freq":1650,"strength":2,"pci":197,"cellid":"6A8EE06","mnc":1,"tac":"2604","carrier":"CMCC","srxlev":-2,"squal":110,"rsrq":-19,"network_type":"LTE"},{"mcc":460,"rsrp":-118,"freq":1650,"strength":2,"pci":197,"cellid":"6A8EE06","mnc":11,"tac":"2604","carrier":"CT","srxlev":-2,"squal":110,"rsrq":-19,"network_type":"LTE"},{"mcc":460,"rsrp":-93,"freq":2452,"strength":4,"pci":8,"cellid":"D2AA512","mnc":7,"tac":"770F","carrier":"CU","srxlev":24,"squal":119,"rsrq":-10,"network_type":"LTE"},{"mcc":460,"rsrp":-94,"freq":1850,"strength":4,"pci":8,"cellid":"77B2A32","mnc":11,"tac":"770F","carrier":"CMCC","srxlev":28,"squal":117,"rsrq":-11,"network_type":"LTE"},{"mcc":460,"rsrp":-94,"freq":1850,"strength":4,"pci":8,"cellid":"77B2A32","mnc":1,"tac":"770F","carrier":"CMCC","srxlev":28,"squal":117,"rsrq":-11,"network_type":"LTE"}]}}',
      module_name: ['modem'],
      params: [
        {
          id: 348193,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
      ],
      results: [
        {
          id: 745842,
          keyName: 'towers',
          keyValue: null,
          desp: 'Information about the base station tower',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17596,
        },
        {
          id: 745843,
          keyName: 'network_type',
          keyValue: null,
          desp: 'Cellular network type:LTE/NR5G.slotx:slot,slot1,slot2',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
        {
          id: 745844,
          keyName: 'mcc',
          keyValue: null,
          desp: 'Mobile Country Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745845,
          keyName: 'rsrp',
          keyValue: null,
          desp: 'Reference signal received power (Unit: dBm), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745846,
          keyName: 'rsrq',
          keyValue: null,
          desp: 'Reference signal received quality (Unit: dB), it only returned in 4G or 4G+ mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745847,
          keyName: 'mnc',
          keyValue: null,
          desp: 'Mobile Network Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745848,
          keyName: 'freq',
          keyValue: null,
          desp: 'Cell frequency',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745849,
          keyName: 'pci',
          keyValue: null,
          desp: 'Physical cell ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745850,
          keyName: 'srxlev',
          keyValue: null,
          desp: 'Cell selection RX level value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745851,
          keyName: 'squal',
          keyValue: null,
          desp: 'Cell selection quality value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745852,
          keyName: 'scs',
          keyValue: null,
          desp: 'Sub-carrier space',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745853,
          keyName: 'cellid',
          keyValue: null,
          desp: 'Cell identity',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
        {
          id: 745854,
          keyName: 'tac',
          keyValue: null,
          desp: 'Tracking area code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
        {
          id: 745855,
          keyName: 'carrier',
          keyValue: null,
          desp: 'Carrier name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
        {
          id: 745856,
          keyName: 'bandwidth',
          keyValue: null,
          desp: 'Bandwidth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745857,
          keyName: 'band',
          keyValue: null,
          desp: 'Frequency band',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745858,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Scan tower failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17596,
        },
        {
          id: 745859,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17596,
        },
      ],
    },
    unlock_simcard: {
      data: {
        id: 17597,
        title: 'unlock_simcard',
        desp: 'Unlock simcard with pin code.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","modem","unlock_simcard",{"bus": "0001:01:00.0", "pin_code": "1234"}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['modem'],
      params: [
        {
          id: 348194,
          keyName: 'bus',
          keyValue: null,
          desp: 'The PCIe path (Format: {domain}:{bus}:{slot}.{func}) or the USB path (Format: {bus}-{port[.port[.port]]}) for the cellular modem, depends on how the modem is connected, which can be gotten from the get_info interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17597,
        },
        {
          id: 348195,
          keyName: 'pin_code',
          keyValue: null,
          desp: 'PIN code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17597,
        },
      ],
      results: [
        {
          id: 745860,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: The cellular modem was not found; -2: Unlock simcard failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17597,
        },
        {
          id: 745861,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17597,
        },
      ],
    },
  },
  {
    module_name: ['mwan3'],
    set_interface: {
      data: {
        id: 17598,
        title: 'set_interface',
        desp: 'set mwan3 interface detection type',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","mwan3","set_interface",{"enable_check":true,"interface":"wan","track_proto": 0,"track_method":0,"interval":5,"up":8,"down":3,"ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"ipv6":["2001:4860:4860::8844","2001:4860:4860::8888","2620:0:ccd::2","2620:0:ccc::2"]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['mwan3'],
      params: [
        {
          id: 348196,
          keyName: 'enable_check',
          keyValue: null,
          desp: 'enable detection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17598,
        },
        {
          id: 348197,
          keyName: 'interface',
          keyValue: null,
          desp: 'detetction interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17598,
        },
        {
          id: 348198,
          keyName: 'track_proto',
          keyValue: null,
          desp: 'detection protocol [0: ipv4 only; 1: ipv6 only; 2: both ipv4 & ipv6]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 348199,
          keyName: 'track_method',
          keyValue: null,
          desp: 'detection way [0: ping; 1: httping]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 348200,
          keyName: 'enable_ssl',
          keyValue: null,
          desp: 'enable ssl [for httping way]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17598,
        },
        {
          id: 348201,
          keyName: 'interval',
          keyValue: null,
          desp: 'detection interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 348202,
          keyName: 'up',
          keyValue: null,
          desp: 'the number of successful detections to treat the link as active',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 348203,
          keyName: 'down',
          keyValue: null,
          desp: 'the number of failure detections to treat the link as inactive',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 348204,
          keyName: 'track_ipv4',
          keyValue: null,
          desp: 'detection ipv4 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17598,
        },
        {
          id: 348205,
          keyName: 'track_ipv6',
          keyValue: null,
          desp: 'detection ipv6 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17598,
        },
      ],
      results: [
        {
          id: 745862,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17598,
        },
        {
          id: 745863,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17598,
        },
      ],
    },
    set_config: {
      data: {
        id: 17599,
        title: 'set_config',
        desp: 'mwan3 settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","mwan3","set_config",{"mode":0,"flush_track":false,"interfaces":[{"interface":"wan","priority":1},{"interface":"wwan","priority":2},{"interface":"tethering","priority":3}]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['mwan3'],
      params: [
        {
          id: 348206,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode setting[0: failover; 1: load balance]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17599,
        },
        {
          id: 348207,
          keyName: 'flush_track',
          keyValue: null,
          desp: 'enable refresh tracking table [for failover mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17599,
        },
        {
          id: 348208,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17599,
        },
        {
          id: 348209,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17599,
        },
        {
          id: 348210,
          keyName: 'interfaces.priority',
          keyValue: null,
          desp: 'link priority [for load balance mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17599,
        },
        {
          id: 348211,
          keyName: 'interfaces.weight',
          keyValue: null,
          desp: 'load weight [for load balance mode, ranges: 0-10]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17599,
        },
      ],
      results: [
        {
          id: 745864,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17599,
        },
        {
          id: 745865,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17599,
        },
      ],
    },
    get_config: {
      data: {
        id: 17600,
        title: 'get_config',
        desp: 'get mwan3 settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","mwan3","get_config",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"interfaces":[{"track_proto":0,"up":8,"track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"enable_ssl":true,"enable_check":true,"interval":5,"track_ipv6":["2001:4860:4860::8844","2001:4860:4860::8888","2620:0:ccd::2","2620:0:ccc::2"],"weight":3,"track_method":1,"priority":1,"down":3,"interface":"wan"},{"track_proto":0,"up":8,"track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"enable_ssl":false,"enable_check":true,"interval":5,"track_ipv6":["2001:4860:4860::8844","2001:4860:4860::8888","2620:0:ccd::2","2620:0:ccc::2"],"weight":3,"track_method":0,"priority":2,"down":3,"interface":"wwan"},{"track_proto":0,"up":8,"track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"enable_ssl":false,"enable_check":true,"interval":5,"track_ipv6":["2001:4860:4860::8844","2001:4860:4860::8888","2620:0:ccd::2","2620:0:ccc::2"],"weight":3,"track_method":0,"priority":3,"down":3,"interface":"tethering"},{"track_proto":0,"type":0,"up":8,"track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"enable_ssl":false,"enable_check":true,"interval":5,"weight":3,"track_method":0,"priority":4,"down":3,"interface":"modem_1_1_2"},{"track_proto":0,"type":1,"up":8,"track_ipv4":["8.8.4.4","8.8.8.8","208.67.222.222","208.67.220.220"],"enable_ssl":false,"enable_check":true,"interval":5,"weight":3,"track_method":0,"priority":4,"down":3,"interface":"modem_1_1_3"}],"mode":0,"flush_track":false}}',
      module_name: ['mwan3'],
      params: [],
      results: [
        {
          id: 745866,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode setting[0: failover; 1: load balance]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745867,
          keyName: '?flush_track',
          keyValue: null,
          desp: 'enable refresh tracking table[for failover mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17600,
        },
        {
          id: 745868,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17600,
        },
        {
          id: 745869,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17600,
        },
        {
          id: 745870,
          keyName: '?interfaces.priority',
          keyValue: null,
          desp: 'link priority [for load balance mode]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745871,
          keyName: '?interfaces.weight',
          keyValue: null,
          desp: 'load weight [for load balance mode, ranges: 0-10]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745872,
          keyName: 'interfaces.enable_check',
          keyValue: null,
          desp: 'enable detection',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17600,
        },
        {
          id: 745873,
          keyName: 'interfaces.track_proto',
          keyValue: null,
          desp: 'detection protocol [0: ipv4 only; 1: ipv6 only; 2: both ipv4 & ipv6]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745874,
          keyName: 'interfaces.track_method',
          keyValue: null,
          desp: 'detection way [0: ping; 1: httping]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745875,
          keyName: '?interfaces.type',
          keyValue: null,
          desp: 'modem type [0: built-in modem; 1: external modem; 2: unknown modem]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745876,
          keyName: '?interfaces.enable_ssl',
          keyValue: null,
          desp: 'enable ssl [for httping way]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17600,
        },
        {
          id: 745877,
          keyName: 'interfaces.interval',
          keyValue: null,
          desp: 'detection interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745878,
          keyName: 'interfaces.up',
          keyValue: null,
          desp: 'the number of successful detections to treat the link as active',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745879,
          keyName: 'interfaces.down',
          keyValue: null,
          desp: 'the number of failure detections to treat the link as inactive',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745880,
          keyName: 'interfaces.track_ipv4',
          keyValue: null,
          desp: 'detection ipv4 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17600,
        },
        {
          id: 745881,
          keyName: 'interfaces.track_ipv6',
          keyValue: null,
          desp: 'detection ipv6 address [array of string]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17600,
        },
        {
          id: 745882,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17600,
        },
        {
          id: 745883,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error messag',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17600,
        },
      ],
    },
    get_status: {
      data: {
        id: 17601,
        title: 'get_status',
        desp: 'get mwan3 status [if this interface does not enable in mwan3, read the interface status directly instead of reading from mwan3]',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:16',
        create_time: '2024-11-19T17:55:16',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","mwan3","get_status",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"interfaces":[{"percent_v6":0,"status_v6":"offline","status_v4":"online","percent_v4":100,"interface":"wan"},{"percent_v6":0,"status_v6":"offline","status_v4":"offline","percent_v4":0,"interface":"wwan"},{"percent_v6":0,"status_v6":"offline","status_v4":"offline","percent_v4":0,"interface":"tethering"},{"percent_v6":0,"status_v6":"offline","status_v4":"online","percent_v4":0,"interface":"modem_1_1_2"},{"percent_v6":0,"status_v6":"offline","status_v4":"online","percent_v4":0,"interface":"modem_1_1_3"}]}}',
      module_name: ['mwan3'],
      params: [],
      results: [
        {
          id: 745884,
          keyName: 'interfaces',
          keyValue: null,
          desp: 'interface setting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17601,
        },
        {
          id: 745885,
          keyName: 'interfaces.interface',
          keyValue: null,
          desp: 'interface name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17601,
        },
        {
          id: 745886,
          keyName: 'interfaces.status_v4',
          keyValue: null,
          desp: 'interface ipv4 status [0: online; 1: offline; 2: error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17601,
        },
        {
          id: 745887,
          keyName: 'interfaces.percent_v4',
          keyValue: null,
          desp: 'ipv4 percentage',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17601,
        },
        {
          id: 745888,
          keyName: 'interfaces.status_v6',
          keyValue: null,
          desp: 'interface ipv6 status [0: online; 1: offline; 2: error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17601,
        },
        {
          id: 745889,
          keyName: 'interfaces.percent_v6',
          keyValue: null,
          desp: 'ipv6 percentage',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17601,
        },
        {
          id: 745890,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17601,
        },
        {
          id: 745891,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error messag',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17601,
        },
      ],
    },
  },
  {
    module_name: ['nas-web'],
    get_proto_config: {
      data: {
        id: 17602,
        title: 'get_proto_config',
        desp: 'get nas proto conf',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_proto_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"res":[{"enable":1,"share_type":1,"name":"samba","wan_access":0},{"port":6008,"name":"webdav","wan_access":0,"share_type":1,"ssl_enable":0,"enable":1},{"enable":1,"share_type":2,"name":"dlna","media_dir":"\\/disk1_part1"}]}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745892,
          keyName: '?res',
          keyValue: null,
          desp: 'all proto config array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17602,
        },
        {
          id: 745893,
          keyName: '?res.name',
          keyValue: null,
          desp: 'proto name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17602,
        },
        {
          id: 745894,
          keyName: '?res.enable',
          keyValue: null,
          desp: 'proto if enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17602,
        },
        {
          id: 745895,
          keyName: '?res.port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17602,
        },
        {
          id: 745896,
          keyName: '?res.share_type',
          keyValue: null,
          desp: 'share type.1,means can setup share user ;2,means can only setup share path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17602,
        },
        {
          id: 745897,
          keyName: '?res.wan_access',
          keyValue: null,
          desp: 'if wan access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17602,
        },
        {
          id: 745898,
          keyName: '?res.ssl_enable',
          keyValue: null,
          desp: 'webdav ssl enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17602,
        },
        {
          id: 745899,
          keyName: '?res.media_dir',
          keyValue: null,
          desp: 'dlna media dir',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17602,
        },
      ],
    },
    set_proto_config: {
      data: {
        id: 17603,
        title: 'set_proto_config',
        desp: 'set nas proto conf',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","set_proto_config",{"name":"webdav","enable":true,"port":6009,"wan_access":true}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":2}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348212,
          keyName: 'name',
          keyValue: null,
          desp: 'proto name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17603,
        },
        {
          id: 348213,
          keyName: 'enable',
          keyValue: null,
          desp: 'proto enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17603,
        },
        {
          id: 348214,
          keyName: 'port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17603,
        },
        {
          id: 348215,
          keyName: 'wan_access',
          keyValue: null,
          desp: 'if wan access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17603,
        },
        {
          id: 348216,
          keyName: '?ssl_enable',
          keyValue: null,
          desp: 'webdav ssl enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17603,
        },
        {
          id: 348217,
          keyName: '?media_dir',
          keyValue: null,
          desp: 'dlna media dir',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17603,
        },
      ],
      results: [
        {
          id: 745900,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17603,
        },
        {
          id: 745901,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result code 0:success -1:token invalid -2:share file out of limit(10) 1:accout not have that power 2:format error 3:file not exist -3:wrong file name 4:user not exist 5:password invalid 6:not support command 7:without token 8:disk write failed 9:copy task number too big 10:fork error 11:task id error 12:move task number too big 13:disk not mounted 14:system error 15:user already exist 16:share all file failed 17:all share file already exist 18:remove all share file failed 19:get all share file list failed 20:share file failed 21:share file already exist 22:delete share file failed 23:get share file list failed 30:file access error 31:file access exist 32:file access delete error 33:get file access list failed 34:file access not a dir 35:sd card not exist 36:sd card copy error 37:sd card stop error 38:sd card copy process not exist 39:file already exist 40:file is downloading 41:file delete failed 50:disk full',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17603,
        },
      ],
    },
    get_user_list: {
      data: {
        id: 17604,
        title: 'get_user_list',
        desp: 'get share user list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_user_list",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"list":[{"name":"asdfasd","password":"121312312"}]}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745902,
          keyName: 'list',
          keyValue: null,
          desp: 'user list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17604,
        },
        {
          id: 745903,
          keyName: 'list.name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17604,
        },
        {
          id: 745904,
          keyName: 'list.password',
          keyValue: null,
          desp: 'user password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17604,
        },
      ],
    },
    add_user: {
      data: {
        id: 17605,
        title: 'add_user',
        desp: 'add samba share user',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","add_user",{"name":"test","password":123456}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":2}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348218,
          keyName: 'name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17605,
        },
        {
          id: 348219,
          keyName: 'password',
          keyValue: null,
          desp: 'user password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17605,
        },
      ],
      results: [
        {
          id: 745905,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17605,
        },
        {
          id: 745906,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result_code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17605,
        },
      ],
    },
    remove_user: {
      data: {
        id: 17606,
        title: 'remove_user',
        desp: 'remove samba share user',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","remove_user",{"name":"test1"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":0}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348220,
          keyName: 'name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17606,
        },
        {
          id: 348221,
          keyName: '?all',
          keyValue: null,
          desp: 'remove all user',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17606,
        },
      ],
      results: [
        {
          id: 745907,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17606,
        },
        {
          id: 745908,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result_code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17606,
        },
      ],
    },
    set_user_pwd: {
      data: {
        id: 17607,
        title: 'set_user_pwd',
        desp: 'set samba share user pwd',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","set_user_pwd",{"name":"test","password":123456}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":2}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348222,
          keyName: 'name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17607,
        },
        {
          id: 348223,
          keyName: 'password',
          keyValue: null,
          desp: 'user password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17607,
        },
      ],
      results: [
        {
          id: 745909,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17607,
        },
        {
          id: 745910,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result_code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17607,
        },
      ],
    },
    get_disk_list: {
      data: {
        id: 17608,
        title: 'get_disk_list',
        desp: 'get nas disk info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_disk_list",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"disk":[{"part":[{"uid":"c0c7270e-711e-49a4-b6f8-766bb39348ae","free_size":57331,"disk_name":"disk1_part1","fs_type":"EXT4","total_len":58655,"label":"sda1","dev_name":"sda1"}],"sd_card":0,"part_num":1}],"disk_number":1}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745911,
          keyName: 'disk_number',
          keyValue: null,
          desp: 'disk number',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17608,
        },
        {
          id: 745912,
          keyName: 'disk',
          keyValue: null,
          desp: 'disk array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17608,
        },
        {
          id: 745913,
          keyName: 'disk.part_num',
          keyValue: null,
          desp: 'disk part number',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17608,
        },
        {
          id: 745914,
          keyName: 'disk.sd_card',
          keyValue: null,
          desp: 'disk is sd card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17608,
        },
        {
          id: 745915,
          keyName: 'disk.part',
          keyValue: null,
          desp: 'disk part array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17608,
        },
        {
          id: 745916,
          keyName: 'part.dev_name',
          keyValue: null,
          desp: 'part dev name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17608,
        },
        {
          id: 745917,
          keyName: 'part.disk_name',
          keyValue: null,
          desp: 'part disk name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17608,
        },
        {
          id: 745918,
          keyName: 'part.label',
          keyValue: null,
          desp: 'part disk label',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17608,
        },
        {
          id: 745919,
          keyName: 'part.uid',
          keyValue: null,
          desp: 'part disk luid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17608,
        },
        {
          id: 745920,
          keyName: 'part.fs_type',
          keyValue: null,
          desp: 'disk file system',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17608,
        },
        {
          id: 745921,
          keyName: 'part.total_len',
          keyValue: null,
          desp: 'disk total size',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17608,
        },
        {
          id: 745922,
          keyName: 'part.free_size',
          keyValue: null,
          desp: 'disk free size',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17608,
        },
      ],
    },
    get_disk_set: {
      data: {
        id: 17609,
        title: 'get_disk_set',
        desp: 'get nas disk info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_disk_set",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"disk":[{"part":[{"uid":"c0c7270e-711e-49a4-b6f8-766bb39348ae","free_size":57331,"disk_name":"disk1_part1","fs_type":"EXT4","total_len":58655,"label":"sda1","dev_name":"sda1"}],"sd_card":0,"part_num":1}],"disk_number":1}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745923,
          keyName: 'disk_number',
          keyValue: null,
          desp: 'disk number',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17609,
        },
        {
          id: 745924,
          keyName: 'disk',
          keyValue: null,
          desp: 'disk array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17609,
        },
        {
          id: 745925,
          keyName: 'disk.part_num',
          keyValue: null,
          desp: 'disk part number',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17609,
        },
        {
          id: 745926,
          keyName: 'disk.sd_card',
          keyValue: null,
          desp: 'disk is sd card',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17609,
        },
        {
          id: 745927,
          keyName: 'disk.part',
          keyValue: null,
          desp: 'disk part array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17609,
        },
        {
          id: 745928,
          keyName: 'part.dev_name',
          keyValue: null,
          desp: 'part dev name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17609,
        },
        {
          id: 745929,
          keyName: 'part.disk_name',
          keyValue: null,
          desp: 'part disk name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17609,
        },
        {
          id: 745930,
          keyName: 'part.label',
          keyValue: null,
          desp: 'part disk label',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17609,
        },
        {
          id: 745931,
          keyName: 'part.fs_type',
          keyValue: null,
          desp: 'disk file system',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17609,
        },
        {
          id: 745932,
          keyName: 'part.uid',
          keyValue: null,
          desp: 'part disk luid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17609,
        },
        {
          id: 745933,
          keyName: 'part.total_len',
          keyValue: null,
          desp: 'disk total size',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17609,
        },
        {
          id: 745934,
          keyName: 'part.free_size',
          keyValue: null,
          desp: 'disk free size',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17609,
        },
      ],
    },
    eject_disk: {
      data: {
        id: 17610,
        title: 'eject_disk',
        desp: 'eject one disk',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","eject_disk",{"dev_name":"sda1"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":0}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348224,
          keyName: 'dev_name',
          keyValue: null,
          desp: 'dev name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17610,
        },
      ],
      results: [
        {
          id: 745935,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17610,
        },
        {
          id: 745936,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result_code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17610,
        },
      ],
    },
    eject_disk_done: {
      data: {
        id: 17611,
        title: 'eject_disk_done',
        desp: 'eject one disk',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","eject_disk_done",{"dev_name":"sda1"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348225,
          keyName: 'dev_name',
          keyValue: null,
          desp: 'dev name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17611,
        },
      ],
      results: [
        {
          id: 745937,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17611,
        },
      ],
    },
    get_file_list: {
      data: {
        id: 17612,
        title: 'get_file_list',
        desp: 'get file list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_file_list",{"path":"/disk1_part1"}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"files":[{"d":11,"have_dir":0,"n":"\\/disk1_part1\\/etc"},{"d":11,"have_dir":1,"n":"\\/disk1_part1\\/work"},{"d":1717663322,"have_dir":1,"n":"\\/disk1_part1\\/upper"},{"d":1717646664,"have_dir":0,"n":"\\/disk1_part1\\/lost+found"}],"result_code":0}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745938,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17612,
        },
        {
          id: 745939,
          keyName: '?files',
          keyValue: null,
          desp: 'file list array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17612,
        },
        {
          id: 745940,
          keyName: '?files.n',
          keyValue: null,
          desp: 'file name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17612,
        },
        {
          id: 745941,
          keyName: '?files.d',
          keyValue: null,
          desp: 'file date',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17612,
        },
        {
          id: 745942,
          keyName: '?files.l',
          keyValue: null,
          desp: 'file length',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17612,
        },
        {
          id: 745943,
          keyName: '?files.t',
          keyValue: null,
          desp: 'file type',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17612,
        },
        {
          id: 745944,
          keyName: '?files.have_dir',
          keyValue: null,
          desp: 'if this dir have sub dir',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17612,
        },
      ],
    },
    get_share_list: {
      data: {
        id: 17613,
        title: 'get_share_list',
        desp: 'get share list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_share_list",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"share":[{"owner_readonly":0,"file_ok":1,"share_time":1719976374,"t":"d","l":4096,"disk_uid":"c0c7270e-711e-49a4-b6f8-766bb39348ae","protos":[{"public":0,"users":[{"name":"asdfasd","readonly":0}],"enable":1,"public_readonly":0,"share_name":"disk1_part1","name":"samba"}],"share_id":"329d70de47a71ef0bcfa71a4aa8a907f","d":1719906830,"n":"\\/disk1_part1"}],"result_code":0}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745945,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745946,
          keyName: 'share',
          keyValue: null,
          desp: 'share array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17613,
        },
        {
          id: 745947,
          keyName: '?share.n',
          keyValue: null,
          desp: 'share path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745948,
          keyName: '?share.t',
          keyValue: null,
          desp: 'useless',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745949,
          keyName: '?share.l',
          keyValue: null,
          desp: 'useless',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745950,
          keyName: '?share.share_id',
          keyValue: null,
          desp: 'share id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745951,
          keyName: '?share.file_ok',
          keyValue: null,
          desp: 'share file if ok',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745952,
          keyName: '?share.owner_readonly',
          keyValue: null,
          desp: 'share file owner read only',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745953,
          keyName: '?share.share_time',
          keyValue: null,
          desp: 'share file share time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745954,
          keyName: '?share.disk_uid',
          keyValue: null,
          desp: 'protos',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745955,
          keyName: '?share.protos',
          keyValue: null,
          desp: 'protos',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17613,
        },
        {
          id: 745956,
          keyName: '?protos.name',
          keyValue: null,
          desp: 'proto name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745957,
          keyName: '?protos.enable',
          keyValue: null,
          desp: 'proto share enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745958,
          keyName: '?protos.public',
          keyValue: null,
          desp: 'proto is public',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745959,
          keyName: '?protos.public_readonly',
          keyValue: null,
          desp: 'proto is public readonly',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
        {
          id: 745960,
          keyName: '?protos.share_name',
          keyValue: null,
          desp: 'proto share file name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745961,
          keyName: '?protos.users',
          keyValue: null,
          desp: 'proto user list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17613,
        },
        {
          id: 745962,
          keyName: '?users.name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17613,
        },
        {
          id: 745963,
          keyName: '?users.readonly',
          keyValue: null,
          desp: 'user is readonly',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17613,
        },
      ],
    },
    add_share: {
      data: {
        id: 17614,
        title: 'add_share',
        desp: 'add one share',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","add_share",{"file":"/disk1_part1","proto":"samba","readonly":1,"public":1,"users":{"name":"xxx","readonly":1}}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"err_msg":"Error add share","err_code":16,"result_code":16}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348226,
          keyName: 'file',
          keyValue: null,
          desp: 'share path',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17614,
        },
        {
          id: 348227,
          keyName: 'proto',
          keyValue: null,
          desp: 'share proto',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17614,
        },
        {
          id: 348228,
          keyName: 'readonly',
          keyValue: null,
          desp: 'read only',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17614,
        },
        {
          id: 348229,
          keyName: 'public',
          keyValue: null,
          desp: 'public',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17614,
        },
        {
          id: 348230,
          keyName: 'users',
          keyValue: null,
          desp: 'file share user',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17614,
        },
        {
          id: 348231,
          keyName: 'users.name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17614,
        },
        {
          id: 348232,
          keyName: 'users.readonly',
          keyValue: null,
          desp: 'user is readonly',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17614,
        },
      ],
      results: [
        {
          id: 745964,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17614,
        },
        {
          id: 745965,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17614,
        },
        {
          id: 745966,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result_code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17614,
        },
      ],
    },
    remove_share: {
      data: {
        id: 17615,
        title: 'remove_share',
        desp: 'remove one share',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","remove_share",{"share_id":"xxx"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":2}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348233,
          keyName: 'share_id',
          keyValue: null,
          desp: 'share id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17615,
        },
      ],
      results: [
        {
          id: 745967,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17615,
        },
        {
          id: 745968,
          keyName: '?result_code',
          keyValue: null,
          desp: 'Result code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17615,
        },
      ],
    },
    set_share: {
      data: {
        id: 17616,
        title: 'set_share',
        desp: 'set share',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","add_share",{"share_id":"xxx","proto":"samba","readonly":1,"public":1,"users":{"name":"xxx","readonly":1}}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":2}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348234,
          keyName: 'share_id',
          keyValue: null,
          desp: 'share id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17616,
        },
        {
          id: 348235,
          keyName: 'proto',
          keyValue: null,
          desp: 'share proto name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17616,
        },
        {
          id: 348236,
          keyName: 'readonly',
          keyValue: null,
          desp: 'read only',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17616,
        },
        {
          id: 348237,
          keyName: 'public',
          keyValue: null,
          desp: 'public',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17616,
        },
        {
          id: 348238,
          keyName: 'users',
          keyValue: null,
          desp: 'file share user',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17616,
        },
        {
          id: 348239,
          keyName: 'users.name',
          keyValue: null,
          desp: 'user name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17616,
        },
        {
          id: 348240,
          keyName: 'users.readonly',
          keyValue: null,
          desp: 'user is readonly',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17616,
        },
      ],
      results: [
        {
          id: 745969,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17616,
        },
        {
          id: 745970,
          keyName: '?result_code',
          keyValue: null,
          desp: 'result code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17616,
        },
      ],
    },
    get_status: {
      data: {
        id: 17617,
        title: 'get_status',
        desp: 'get nas service info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_status",{}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"enable":1}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745971,
          keyName: 'enable',
          keyValue: null,
          desp: 'nas ser is enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17617,
        },
      ],
    },
    start: {
      data: {
        id: 17618,
        title: 'start',
        desp: 'start nas ser',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","start"]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745972,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17618,
        },
      ],
    },
    conf_nas_wan_access: {
      data: {
        id: 17619,
        title: 'conf_nas_wan_access',
        desp: 'config nas server wan access',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","conf_nas_wan_access",{"set":"open"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348241,
          keyName: 'set',
          keyValue: null,
          desp: 'config wan access(open/close)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17619,
        },
      ],
      results: [
        {
          id: 745973,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17619,
        },
      ],
    },
    get_nas_wan_access: {
      data: {
        id: 17620,
        title: 'get_nas_wan_access',
        desp: 'config nas server wan access',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","get_nas_wan_access"]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['nas-web'],
      params: [],
      results: [
        {
          id: 745974,
          keyName: 'enable',
          keyValue: null,
          desp: 'wan access(open/close)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17620,
        },
        {
          id: 745975,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17620,
        },
      ],
    },
    disk_format: {
      data: {
        id: 17621,
        title: 'disk_format',
        desp: 'nas disk format',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:17',
        create_time: '2024-11-19T17:55:17',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","nas-web","disk_format",{"dev_name":"sda1","fs_type":"ntfs"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"result_code":0}}',
      module_name: ['nas-web'],
      params: [
        {
          id: 348242,
          keyName: 'dev_name',
          keyValue: null,
          desp: 'format dev name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17621,
        },
        {
          id: 348243,
          keyName: 'fs_type',
          keyValue: null,
          desp: 'format dev fs type',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17621,
        },
      ],
      results: [
        {
          id: 745976,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17621,
        },
      ],
    },
  },
  {
    module_name: ['netmode'],
    get_mode: {
      data: {
        id: 17622,
        title: 'get_mode',
        desp: 'Query the current network mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","netmode","get_mode"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"mode": "router"}}',
      module_name: ['netmode'],
      params: [],
      results: [
        {
          id: 745977,
          keyName: 'mode',
          keyValue: null,
          desp: 'current network mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17622,
        },
        {
          id: 745978,
          keyName: '?mask',
          keyValue: null,
          desp: 'When switching to passthrough mode, the returned mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17622,
        },
        {
          id: 745979,
          keyName: '?mac',
          keyValue: null,
          desp: 'When switching to passthrough mode, the returned mac',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17622,
        },
      ],
    },
    set_mode: {
      data: {
        id: 17623,
        title: 'set_mode',
        desp: 'set network mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","netmode","set_mode",{"mode":"router"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['netmode'],
      params: [
        {
          id: 348244,
          keyName: 'mode',
          keyValue: null,
          desp: 'Network mode, optional values: ap, router, relay, wds, passthrough',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 348245,
          keyName: '?ssid',
          keyValue: null,
          desp: 'SSID (required for relay and wds modes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 348246,
          keyName: '?identity',
          keyValue: null,
          desp: 'EAP identity (required if WPA-Enterprise encryption)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 348247,
          keyName: '?key',
          keyValue: null,
          desp: 'password (required for relay and wds modes)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 348248,
          keyName: '?mask',
          keyValue: null,
          desp: 'Client IP mask bits (required for passthrough mode)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 348249,
          keyName: '?mac',
          keyValue: null,
          desp: 'Client mac (bind mac for passthrough mode)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
      ],
      results: [
        {
          id: 745980,
          keyName: '?lanip',
          keyValue: null,
          desp: 'When switching to routing mode, the returned lan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17623,
        },
        {
          id: 745981,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code:',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17623,
        },
        {
          id: 745982,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17623,
        },
      ],
    },
  },
  {
    module_name: ['network'],
    get_arp_list: {
      data: {
        id: 17624,
        title: 'get_arp_list',
        desp: 'get ARP list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","network","get_arp_list",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"entries":[{"mac":"34:56:5B:F4:5B:54","device":"eth1.1","ip":"192.168.117.254"},{"mac":"67:5F:08:E2:4E:09","device":"br-lan","ip":"192.168.10.19"}]}}',
      module_name: ['network'],
      params: [],
      results: [
        {
          id: 745983,
          keyName: 'entries',
          keyValue: null,
          desp: 'ARP list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17624,
        },
        {
          id: 745984,
          keyName: 'entries.ip',
          keyValue: null,
          desp: 'IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17624,
        },
        {
          id: 745985,
          keyName: 'entries.mac',
          keyValue: null,
          desp: 'MAC address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17624,
        },
        {
          id: 745986,
          keyName: 'entries.device',
          keyValue: null,
          desp: 'network interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17624,
        },
      ],
    },
    check_wan_cable: {
      data: {
        id: 17625,
        title: 'check_wan_cable',
        desp: 'get wan cable connection status and whether mac clone is enable',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":124,"method":"call","params":["","network","check_wan_cable",{"secondwan":false}]}',
      out_example:
        '{"id":124,"jsonrpc":"2.0","result":{"cable_enabled":true,"cable_inserted":true,"macclone_enabled":false}}',
      module_name: ['network'],
      params: [
        {
          id: 348250,
          keyName: 'secondwan',
          keyValue: null,
          desp: 'get secondwan status',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17625,
        },
      ],
      results: [
        {
          id: 745987,
          keyName: 'cable_enabled',
          keyValue: null,
          desp: 'check whether wan cable is connected [true: wan cable is connected; false: wan cable is not connected]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17625,
        },
        {
          id: 745988,
          keyName: 'cable_inserted',
          keyValue: null,
          desp: 'check whether all cable is connected [true: have cable connection; false: no cable connection]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17625,
        },
        {
          id: 745989,
          keyName: 'macclone_enabled',
          keyValue: null,
          desp: 'whether mac clone is enabled [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17625,
        },
        {
          id: 745990,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code [-1: get information failed, wan cable is not connected]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17625,
        },
        {
          id: 745991,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17625,
        },
      ],
    },
    get_netnat_config: {
      data: {
        id: 17626,
        title: 'get_netnat_config',
        desp: 'get netnat status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","network","get_netnat_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"enable":true,"wifi_reload":false,"actype":1,"list":[1]}}',
      module_name: ['network'],
      params: [],
      results: [
        {
          id: 745992,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether netnat is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17626,
        },
        {
          id: 745993,
          keyName: 'actype',
          keyValue: null,
          desp: 'acceleration type [0: Software and Hardware Acceleration; 1: Hardware Acceleration; 2: Software Acceleration]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17626,
        },
        {
          id: 745994,
          keyName: 'list',
          keyValue: null,
          desp: 'acceleration type supported [0: Software and Hardware Acceleration; 1: Hardware Acceleration; 2: Software Acceleration]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17626,
        },
        {
          id: 745995,
          keyName: 'wifi_reload',
          keyValue: null,
          desp: 'whether to reload wifi',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17626,
        },
      ],
    },
    set_netnat_config: {
      data: {
        id: 17627,
        title: 'set_netnat_config',
        desp: 'enable/disable netnat',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","network","set_netnat_config",{"enable":false,"actype":1,"wifi_reload":false}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['network'],
      params: [
        {
          id: 348251,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether to enable netnat',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17627,
        },
        {
          id: 348252,
          keyName: 'actype',
          keyValue: null,
          desp: 'acceleration type [0: Software and Hardware Acceleration; 1: Hardware Acceleration; 2: Software Acceleration]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17627,
        },
      ],
      results: [],
    },
    get_advance_config: {
      data: {
        id: 17628,
        title: 'get_advance_config',
        desp: 'get advance config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","network","get_advance_config",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"nat_enable":0, "sip_enable":0}}',
      module_name: ['network'],
      params: [],
      results: [
        {
          id: 745996,
          keyName: 'nat_enable',
          keyValue: null,
          desp: 'fullconenat option[0:disable 1:enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17628,
        },
        {
          id: 745997,
          keyName: 'sip_enable',
          keyValue: null,
          desp: 'sip alg option[0:disable 1:enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17628,
        },
      ],
    },
    set_advance_config: {
      data: {
        id: 17629,
        title: 'set_advance_config',
        desp: 'set advance config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:18',
        create_time: '2024-11-19T17:55:18',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","network","set_advance_config",{"nat_enable":0, "sip_enable":0}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['network'],
      params: [
        {
          id: 348253,
          keyName: 'nat_enable',
          keyValue: null,
          desp: 'set fullconenat option[0:disable 1:enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17629,
        },
        {
          id: 348254,
          keyName: 'sip_enable',
          keyValue: null,
          desp: 'set sip alg option[0:disable 1:enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17629,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['ovpn-client'],
    check_config: {
      data: {
        id: 17638,
        title: 'check_config',
        desp: "check uploaded ovpn config's parameter",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","check_config",{"group_id":2312,"filename":"France-Paris_UDP53.ovpn"}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"passed": ["AirVPN_US-Dallas-Texas_Mensa_TCP-443.ovpn"], "unpassed": ["AirVPN_US-Dallas-Texas_Vulpecula_TCP-443.ovpn"], "needauth": ["France-Paris_UDP53.ovpn"], "needinfo": [], "rootcert": ["mullvad_ca.crt"]}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348268,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17638,
        },
        {
          id: 348269,
          keyName: 'filename',
          keyValue: null,
          desp: 'name of file/tarball to check',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17638,
        },
      ],
      results: [
        {
          id: 746012,
          keyName: 'needauth',
          keyValue: null,
          desp: 'files that including auth-user-pass',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17638,
        },
        {
          id: 746013,
          keyName: 'needinfo',
          keyValue: null,
          desp: 'files that including askpass',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17638,
        },
        {
          id: 746014,
          keyName: 'passed',
          keyValue: null,
          desp: 'files that w/o askpass or auth-user-pass',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17638,
        },
        {
          id: 746015,
          keyName: 'unpassed',
          keyValue: null,
          desp: 'illegal ovpn conf file',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17638,
        },
        {
          id: 746016,
          keyName: 'rootcert',
          keyValue: null,
          desp: 'root cert file',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17638,
        },
        {
          id: 746017,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing,16：decompress failure)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17638,
        },
        {
          id: 746018,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17638,
        },
      ],
    },
    confirm_config: {
      data: {
        id: 17639,
        title: 'confirm_config',
        desp: 'confirm ovpn client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","confirm_config",{"group_id":2312}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348270,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17639,
        },
      ],
      results: [
        {
          id: 746019,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing, 11: conflict between the group type and the uploaded conf file type, type is defined by Attributes: authuserpass and askpass)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17639,
        },
        {
          id: 746020,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17639,
        },
      ],
    },
    start: {
      data: {
        id: 17640,
        title: 'start',
        desp: 'start ovpn client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","start",{"group_id":3212,"client_id":1254}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348271,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17640,
        },
        {
          id: 348272,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17640,
        },
      ],
      results: [
        {
          id: 746021,
          keyName: '?err_code',
          keyValue: null,
          desp: "Error Code(10：parameter missing 11：dual vpn client conflict, as proxy mode doesn't allow dual vpn client)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17640,
        },
        {
          id: 746022,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17640,
        },
      ],
    },
    stop: {
      data: {
        id: 17641,
        title: 'stop',
        desp: 'stop ovpn client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","stop",{"group_id":3212,"client_id":1254}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348273,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17641,
        },
        {
          id: 348274,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17641,
        },
      ],
      results: [
        {
          id: 746023,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17641,
        },
        {
          id: 746024,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17641,
        },
      ],
    },
    get_config_list: {
      data: {
        id: 17642,
        title: 'get_config_list',
        desp: 'get ovpn client config of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_config_list",{"group_id":2312}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id": 1,"result":{"clients":[{"client_id":3212,"name":"AirVPN","mode":"tun","proto":"tcp","remote":["1234567.glddns.com:1194"],"random_remote":false,"verb":"3","auth":"SHA256","cipher":"AES-256-GCM","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","hmac":false,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_auth":2,"username":"glinet","password":"123456","location":"United States, Chicago; United States, New York"}]}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348275,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17642,
        },
      ],
      results: [
        {
          id: 746025,
          keyName: 'clients',
          keyValue: null,
          desp: 'clients array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17642,
        },
        {
          id: 746026,
          keyName: 'clients.client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17642,
        },
        {
          id: 746027,
          keyName: 'clients.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746028,
          keyName: 'clients.mode',
          keyValue: null,
          desp: 'tunnel mode：tun/tap-s2s',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746029,
          keyName: 'clients.proto',
          keyValue: null,
          desp: 'protocol：tcp/udp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746030,
          keyName: 'clients.remote',
          keyValue: null,
          desp: 'remote server:port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17642,
        },
        {
          id: 746031,
          keyName: 'clients.random_remote',
          keyValue: null,
          desp: 'whether to use random remote',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17642,
        },
        {
          id: 746032,
          keyName: 'clients.verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746033,
          keyName: 'clients.auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746034,
          keyName: 'clients.cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746035,
          keyName: 'clients.lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17642,
        },
        {
          id: 746036,
          keyName: 'clients.ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746037,
          keyName: 'clients.hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17642,
        },
        {
          id: 746038,
          keyName: '?clients.ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746039,
          keyName: 'clients.client_auth',
          keyValue: null,
          desp: 'client Authentication Mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17642,
        },
        {
          id: 746040,
          keyName: '?clients.cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746041,
          keyName: '?clients.key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746042,
          keyName: '?clients.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746043,
          keyName: '?clients.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746044,
          keyName: '?clients.location',
          keyValue: null,
          desp: 'server location',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
        {
          id: 746045,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17642,
        },
        {
          id: 746046,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17642,
        },
      ],
    },
    get_status: {
      data: {
        id: 17643,
        title: 'get_status',
        desp: 'get ovpn client status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"group_id":3212, "client_id":1254, "name":"mullvad_ae_all", "log":"", "status":1, "tx_bytes":56, "rx_bytes":50, "ipv4":"10.70.33.3", "ipv6":"fc00:bbbb:bb01::11", "port":1194, "domain":"ae-dxb-001.mullvad.net"}}',
      module_name: ['ovpn-client'],
      params: [],
      results: [
        {
          id: 746047,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746048,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746049,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746050,
          keyName: 'log',
          keyValue: null,
          desp: 'log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746051,
          keyName: 'status',
          keyValue: null,
          desp: 'status 0:not start 1:connected 2:connecting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746052,
          keyName: 'domain',
          keyValue: null,
          desp: 'server domain/ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746053,
          keyName: 'port',
          keyValue: null,
          desp: 'server listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746054,
          keyName: 'ipv4',
          keyValue: null,
          desp: 'tunnel ipv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746055,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'tunnel ipv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746056,
          keyName: 'tx_bytes',
          keyValue: null,
          desp: 'tx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746057,
          keyName: 'rx_bytes',
          keyValue: null,
          desp: 'rx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17643,
        },
        {
          id: 746058,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
        {
          id: 746059,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17643,
        },
      ],
    },
    remove_config: {
      data: {
        id: 17644,
        title: 'remove_config',
        desp: 'remove ovpn client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","remove_config",{"group_id":3212,"client_id":1254}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348276,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17644,
        },
        {
          id: 348277,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17644,
        },
      ],
      results: [
        {
          id: 746060,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17644,
        },
        {
          id: 746061,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17644,
        },
      ],
    },
    clear_config_list: {
      data: {
        id: 17645,
        title: 'clear_config_list',
        desp: 'remove all ovpn client config of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","clear_config_list",{"group_id":3212}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348278,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17645,
        },
      ],
      results: [
        {
          id: 746062,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing -11：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17645,
        },
        {
          id: 746063,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17645,
        },
      ],
    },
    clear_user_pass: {
      data: {
        id: 17646,
        title: 'clear_user_pass',
        desp: 'remove all ovpn client config of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","clear_user_pass",{"group_id":3212}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348279,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17646,
        },
      ],
      results: [
        {
          id: 746064,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing -11：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17646,
        },
        {
          id: 746065,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17646,
        },
      ],
    },
    add_config: {
      data: {
        id: 17647,
        title: 'add_config',
        desp: 'add ovpn client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","add_config",{"group_id":3212,"name":"AirVPN","mode":"tun","proto":"tcp","remote":"1234567.glddns.com:1194","random_remote":false,"verb":"3","auth":"SHA256","cipher":"AES-256-GCM","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","hmac":false,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_auth":2,"username":"glinet","password":"123456"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"client_id":1912}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348280,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17647,
        },
        {
          id: 348281,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348282,
          keyName: 'mode',
          keyValue: null,
          desp: 'tunnel mode：tun/tap-s2s',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348283,
          keyName: 'proto',
          keyValue: null,
          desp: 'protocol：tcp/udp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348284,
          keyName: 'remote',
          keyValue: null,
          desp: 'remote server:port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348285,
          keyName: 'random_remote',
          keyValue: null,
          desp: 'whether to use random remote',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17647,
        },
        {
          id: 348286,
          keyName: '?verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348287,
          keyName: '?auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348288,
          keyName: '?cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348289,
          keyName: '?lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17647,
        },
        {
          id: 348290,
          keyName: '?ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348291,
          keyName: '?hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17647,
        },
        {
          id: 348292,
          keyName: '?ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348293,
          keyName: 'client_auth',
          keyValue: null,
          desp: 'client Authentication Mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17647,
        },
        {
          id: 348294,
          keyName: '?cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348295,
          keyName: '?key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348296,
          keyName: '?username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
        {
          id: 348297,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
      ],
      results: [
        {
          id: 746066,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17647,
        },
        {
          id: 746067,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17647,
        },
        {
          id: 746068,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17647,
        },
      ],
    },
    set_config: {
      data: {
        id: 17648,
        title: 'set_config',
        desp: 'modify ovpn client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","set_config",{"group_id":3212,"client_id":1254,"name":"AirVPN","mode":"tun","proto":"tcp","remote":"1234567.glddns.com:1194","random_remote":false,"verb":"3","auth":"SHA256","cipher":"AES-256-GCM","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","hmac":false,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_auth":2,"username":"glinet","password":"123456"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348298,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17648,
        },
        {
          id: 348299,
          keyName: 'client_id',
          keyValue: null,
          desp: 'cliend id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17648,
        },
        {
          id: 348300,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348301,
          keyName: '?mode',
          keyValue: null,
          desp: 'tunnel mode：tun/tap-s2s',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348302,
          keyName: '?proto',
          keyValue: null,
          desp: 'protocol：tcp/udp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348303,
          keyName: '?remote',
          keyValue: null,
          desp: 'remote server:port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348304,
          keyName: '?random_remote',
          keyValue: null,
          desp: 'whether to use random remote',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17648,
        },
        {
          id: 348305,
          keyName: '?verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348306,
          keyName: '?auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348307,
          keyName: '?cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348308,
          keyName: '?lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17648,
        },
        {
          id: 348309,
          keyName: '?ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348310,
          keyName: '?hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17648,
        },
        {
          id: 348311,
          keyName: '?ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348312,
          keyName: '?client_auth',
          keyValue: null,
          desp: 'client authentication mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17648,
        },
        {
          id: 348313,
          keyName: '?cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348314,
          keyName: '?key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348315,
          keyName: '?username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
        {
          id: 348316,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
      ],
      results: [
        {
          id: 746069,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17648,
        },
        {
          id: 746070,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17648,
        },
      ],
    },
    get_recommend_config: {
      data: {
        id: 17649,
        title: 'get_recommend_config',
        desp: 'get recommend config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_recommend_config",{"group_id": 2312, "country_id":[2,28], "proto": 1, "servers":[{"country_name":"Germany","city_name":"Frankfurt","hostname":["dk205.nordvpn.com","cz150.nordvpn.com"]}]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348317,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17649,
        },
        {
          id: 348318,
          keyName: '?country_id',
          keyValue: null,
          desp: 'country id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17649,
        },
        {
          id: 348319,
          keyName: 'proto',
          keyValue: null,
          desp: 'protocol: 0:tcp&udp 1:tcp 2:udp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17649,
        },
        {
          id: 348320,
          keyName: '?servers',
          keyValue: null,
          desp: 'server info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17649,
        },
      ],
      results: [
        {
          id: 746071,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：uci config missing 12：group missing 13：password missing 14：country info empty 15：unknown service provider 16: too much config to load)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17649,
        },
        {
          id: 746072,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17649,
        },
      ],
    },
    get_third_config: {
      data: {
        id: 17650,
        title: 'get_third_config',
        desp: "get third provider's ovpn client config",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_third_config",{"group_id":2312,"username":"glinet","password":"123456"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"provider":"nordvpn","server_info":""}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348321,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17650,
        },
        {
          id: 348322,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17650,
        },
        {
          id: 348323,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17650,
        },
      ],
      results: [
        {
          id: 746073,
          keyName: '?provider',
          keyValue: null,
          desp: 'provider',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17650,
        },
        {
          id: 746074,
          keyName: '?server_info',
          keyValue: null,
          desp: 'server info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17650,
        },
        {
          id: 746075,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：uci config missing 12：group missing 13：password missing 14：country info empty 15：unknown service provider)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17650,
        },
        {
          id: 746076,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17650,
        },
      ],
    },
    add_group: {
      data: {
        id: 17651,
        title: 'add_group',
        desp: 'add ovpn client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","add_group",{"group_name":"mullvad"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348324,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17651,
        },
      ],
      results: [
        {
          id: 746077,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：group name empty)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17651,
        },
        {
          id: 746078,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17651,
        },
      ],
    },
    remove_group: {
      data: {
        id: 17652,
        title: 'remove_group',
        desp: 'remove ovpn client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","remove_group",{"group_id":3212}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348325,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17652,
        },
      ],
      results: [
        {
          id: 746079,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17652,
        },
        {
          id: 746080,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17652,
        },
      ],
    },
    set_group: {
      data: {
        id: 17653,
        title: 'set_group',
        desp: 'modify ovpn client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","set_group",{"group_id":3212,"group_name":"mullvad","username":"glinet","password":"123456","auth_type":1}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348326,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17653,
        },
        {
          id: 348327,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17653,
        },
        {
          id: 348328,
          keyName: '?username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17653,
        },
        {
          id: 348329,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17653,
        },
        {
          id: 348330,
          keyName: '?askpass',
          keyValue: null,
          desp: 'askpass',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17653,
        },
        {
          id: 348331,
          keyName: '?auth_type',
          keyValue: null,
          desp: 'group auth type(0/1/2), added from sdk 4.0.1. 0: no ask-user-pass 1: ask-user-pass 2. reserved',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17653,
        },
      ],
      results: [
        {
          id: 746081,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17653,
        },
        {
          id: 746082,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17653,
        },
      ],
    },
    get_group_list: {
      data: {
        id: 17654,
        title: 'get_group_list',
        desp: 'get ovpn client group list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_group_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"groups": [{"group_id":3212,"group_type":1,"group_name":"mullvad","askpass_exist":false,"auth_type":1,"client_count":20,"procedure":1},{"group_id":3213,"group_type": 1,"group_name":"azirevpn","client_count":25,"procedure":0}]}}',
      module_name: ['ovpn-client'],
      params: [],
      results: [
        {
          id: 746083,
          keyName: 'groups',
          keyValue: null,
          desp: 'group array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17654,
        },
        {
          id: 746084,
          keyName: 'groups.group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746085,
          keyName: 'groups.group_type',
          keyValue: null,
          desp: 'group type 1:preconfigured group 2:manually added group 3:group added by app',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746086,
          keyName: 'groups.group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17654,
        },
        {
          id: 746087,
          keyName: 'groups.askpass_exist',
          keyValue: null,
          desp: 'if askpass exist',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17654,
        },
        {
          id: 746088,
          keyName: '?groups.askpass',
          keyValue: null,
          desp: 'askpass content',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17654,
        },
        {
          id: 746089,
          keyName: 'groups.auth_type',
          keyValue: null,
          desp: 'auth type 0: no ask-user-pass 1: ask-user-pass 2. reserved',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746090,
          keyName: 'groups.client_count',
          keyValue: null,
          desp: 'number of client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746091,
          keyName: '?groups.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17654,
        },
        {
          id: 746092,
          keyName: '?groups.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17654,
        },
        {
          id: 746093,
          keyName: '?groups.procedure',
          keyValue: null,
          desp: 'procedure 0:directly download 1:step by step download',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746094,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17654,
        },
        {
          id: 746095,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17654,
        },
      ],
    },
    get_all_config_list: {
      data: {
        id: 17655,
        title: 'get_all_config_list',
        desp: 'get ovpn client config of all group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_all_config_list",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id": 1,"result":{"config_list":[{"group_id":2312,"group_name":"mullvad-ae-all","group_type":2,"auth_type":1,"username":"test","password":"123456","clients":[{"client_id":3212,"name":"AirVPN","mode":"tun","proto":"tcp","remote":["1234567.glddns.com:1194"],"random_remote":false,"verb":"3","auth":"SHA256","cipher":"AES-256-GCM","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","hmac":false,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_auth":2,"username":"glinet","password":"123456","location":"United States, Chicago; United States, New York"}]}]}}',
      module_name: ['ovpn-client'],
      params: [],
      results: [
        {
          id: 746096,
          keyName: 'config_list',
          keyValue: null,
          desp: 'config list array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17655,
        },
        {
          id: 746097,
          keyName: 'config_list.group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746098,
          keyName: 'config_list.group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746099,
          keyName: 'config_list.group_type',
          keyValue: null,
          desp: 'group type 1:preconfigured group 2:manually added group 3:group added by app',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746100,
          keyName: 'config_list.auth_type',
          keyValue: null,
          desp: 'auth type 0: no ask-user-pass 1: ask-user-pass 2. reserved',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746101,
          keyName: '?config_list.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746102,
          keyName: '?config_list.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746103,
          keyName: 'config_list.clients',
          keyValue: null,
          desp: 'clients array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17655,
        },
        {
          id: 746104,
          keyName: 'config_list.clients.client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746105,
          keyName: 'config_list.clients.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746106,
          keyName: 'config_list.clients.mode',
          keyValue: null,
          desp: 'tunnel mode: tun/tap-s2s',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746107,
          keyName: 'config_list.clients.proto',
          keyValue: null,
          desp: 'protocol：tcp/udp',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746108,
          keyName: 'config_list.clients.remote',
          keyValue: null,
          desp: 'remote server:port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746109,
          keyName: 'config_list.clients.random_remote',
          keyValue: null,
          desp: 'whether to use random remote',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17655,
        },
        {
          id: 746110,
          keyName: 'config_list.clients.verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746111,
          keyName: 'config_list.clients.auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746112,
          keyName: 'config_list.clients.cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746113,
          keyName: 'config_list.clients.lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17655,
        },
        {
          id: 746114,
          keyName: 'config_list.clients.ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746115,
          keyName: 'config_list.clients.hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17655,
        },
        {
          id: 746116,
          keyName: '?config_list.clients.ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746117,
          keyName: 'config_list.clients.client_auth',
          keyValue: null,
          desp: 'client authentication mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746118,
          keyName: '?config_list.clients.cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746119,
          keyName: '?config_list.clients.key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746120,
          keyName: '?config_list.clients.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746121,
          keyName: '?config_list.clients.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746122,
          keyName: '?config_list.clients.location',
          keyValue: null,
          desp: 'server location',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
        {
          id: 746123,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17655,
        },
        {
          id: 746124,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17655,
        },
      ],
    },
    add_route: {
      data: {
        id: 17656,
        title: 'add_route',
        desp: 'add ovpn client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","add_route",{"group_id":3213,"client_id":5715,"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348332,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 348333,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 348334,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 348335,
          keyName: 'dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17656,
        },
        {
          id: 348336,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17656,
        },
        {
          id: 348337,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 348338,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 348339,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17656,
        },
      ],
      results: [
        {
          id: 746125,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17656,
        },
        {
          id: 746126,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17656,
        },
      ],
    },
    set_route: {
      data: {
        id: 17657,
        title: 'set_route',
        desp: 'set ovpn client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","set_route",{"group_id":3213,"client_id":5715,"route_flag":4,"rule_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348340,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348341,
          keyName: 'client_id',
          keyValue: null,
          desp: 'cliend id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348342,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348343,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348344,
          keyName: '?dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17657,
        },
        {
          id: 348345,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17657,
        },
        {
          id: 348346,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348347,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 348348,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17657,
        },
      ],
      results: [
        {
          id: 746127,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17657,
        },
        {
          id: 746128,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17657,
        },
      ],
    },
    get_route_list: {
      data: {
        id: 17658,
        title: 'get_route_list',
        desp: 'get ovpn client custom route list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_route_list",{"group_id":3213,"client_id":5715}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ipv4_route_rules":[{"rule_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"ipv6_route_rules":[{"rule_id":6515,"dest":"ff00::/8","gateway":"ff00::1","metric":20,"mtu":1500}]}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348349,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 348350,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
      ],
      results: [
        {
          id: 746129,
          keyName: 'ipv4_route_rules',
          keyValue: null,
          desp: 'ipv4 route rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17658,
        },
        {
          id: 746130,
          keyName: 'ipv4_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746131,
          keyName: 'ipv4_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746132,
          keyName: '?ipv4_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746133,
          keyName: '?ipv4_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 746134,
          keyName: '?ipv4_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 746135,
          keyName: '?ipv4_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746136,
          keyName: 'ipv6_route_rules',
          keyValue: null,
          desp: 'ipv6 route rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17658,
        },
        {
          id: 746137,
          keyName: 'ipv6_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746138,
          keyName: 'ipv6_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746139,
          keyName: '?ipv6_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746140,
          keyName: '?ipv6_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 746141,
          keyName: '?ipv6_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 746142,
          keyName: '?ipv6_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
        {
          id: 746143,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17658,
        },
        {
          id: 746144,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17658,
        },
      ],
    },
    remove_route: {
      data: {
        id: 17659,
        title: 'remove_route',
        desp: 'remove ovpn client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","remove_route",{"group_id":3213,"client_id":5715,"route_flag":4,"rule_id":6512}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348351,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17659,
        },
        {
          id: 348352,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17659,
        },
        {
          id: 348353,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17659,
        },
        {
          id: 348354,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17659,
        },
      ],
      results: [
        {
          id: 746145,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17659,
        },
        {
          id: 746146,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17659,
        },
      ],
    },
    set_setting: {
      data: {
        id: 17660,
        title: 'set_setting',
        desp: 'set ovpn client setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","set_setting",{"group_id":3213,"client_id":5715,"local_access":true,"masq":true,"default_metric":30,"mtu":1460}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348355,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17660,
        },
        {
          id: 348356,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17660,
        },
        {
          id: 348357,
          keyName: '?local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17660,
        },
        {
          id: 348358,
          keyName: '?masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17660,
        },
        {
          id: 348359,
          keyName: '?default_metric',
          keyValue: null,
          desp: 'default metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17660,
        },
        {
          id: 348360,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17660,
        },
      ],
      results: [
        {
          id: 746147,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17660,
        },
        {
          id: 746148,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17660,
        },
      ],
    },
    get_setting: {
      data: {
        id: 17661,
        title: 'get_setting',
        desp: 'get ovpn client setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-client","get_setting",{"group_id":3213,"client_id":5715}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"local_access":true,"masq":true,"default_metric":30,"mtu":1460}}',
      module_name: ['ovpn-client'],
      params: [
        {
          id: 348361,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17661,
        },
        {
          id: 348362,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17661,
        },
      ],
      results: [
        {
          id: 746149,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17661,
        },
        {
          id: 746150,
          keyName: 'masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17661,
        },
        {
          id: 746151,
          keyName: 'default_metric',
          keyValue: null,
          desp: 'default metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17661,
        },
        {
          id: 746152,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17661,
        },
        {
          id: 746153,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17661,
        },
        {
          id: 746154,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17661,
        },
      ],
    },
  },
  {
    module_name: ['ovpn-server'],
    start: {
      data: {
        id: 17663,
        title: 'start',
        desp: 'start ovpn server',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","start",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746157,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(1：VPN conflict 2：openvpn package missing 3：cert missing 4：config missing 5：init script missing 6：uci config missing 7：server already started 8：port conflict)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17663,
        },
        {
          id: 746158,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17663,
        },
      ],
    },
    stop: {
      data: {
        id: 17664,
        title: 'stop',
        desp: 'Stop ovpn server',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","stop",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746159,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17664,
        },
        {
          id: 746160,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17664,
        },
      ],
    },
    get_status: {
      data: {
        id: 17665,
        title: 'get_status',
        desp: 'Get ovpn server status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"status":1,"initialization":true,"log":"","tunnel_ip":"10.8.0.2/32","rx_bytes":57,"tx_bytes":60}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746161,
          keyName: 'status',
          keyValue: null,
          desp: 'status 0: not started 1:started',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17665,
        },
        {
          id: 746162,
          keyName: 'initialization',
          keyValue: null,
          desp: 'whether initialized',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17665,
        },
        {
          id: 746163,
          keyName: 'log',
          keyValue: null,
          desp: 'log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17665,
        },
        {
          id: 746164,
          keyName: 'tunnel_ip',
          keyValue: null,
          desp: 'tunnel ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17665,
        },
        {
          id: 746165,
          keyName: 'rx_bytes',
          keyValue: null,
          desp: 'rx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17665,
        },
        {
          id: 746166,
          keyName: 'tx_bytes',
          keyValue: null,
          desp: 'tx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17665,
        },
        {
          id: 746167,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17665,
        },
        {
          id: 746168,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17665,
        },
      ],
    },
    get_config: {
      data: {
        id: 17666,
        title: 'get_config',
        desp: 'Get openvpn configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","get_config",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"initialization":true,"local_access":false,"auth":"SHA256","proto":"tcp","port":1194,"subnetv4":"10.8.0.0","ipv6_enable":true,"subnetv6":"fd00:db8:0:123::/64","mask":"255.255.255.0","cipher":"AES-256-GCM","mode":"tun","start":"10.8.0.2","end":"10.8.0.100","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","dh":"-----BEGIN DH PARAMETERS----- MIGHAoGBALUmuxsYkB+OLETWb+fz2WhAwa6PUMNzweXEA44rZ8Yv3PqfUIb/rPiW ZUwIq+ouAF1kMPnRYYhsqg5d4OeMv8R6SPlQUckpZrBELsJro9qGRf2nda9v5KAI 8DaorlIhKHpEoJ9xBz8h/DtQ85PX3UT96RZXA/SAyVAhdDpHkJ5rAgEC -----END DH PARAMETERS-----","hmac":true,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_to_client":false,"verb":"3","access_scope":1,"client_auth":1,"cert":"nil","key":"nil","tap_address":"10.8.0.1","tap_mask":"255.255.255.255"}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746169,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746170,
          keyName: 'mode',
          keyValue: null,
          desp: 'tunnel mode: tun/tap',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746171,
          keyName: 'subnetv4',
          keyValue: null,
          desp: 'IPv4 subnet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746172,
          keyName: 'mask',
          keyValue: null,
          desp: 'mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746173,
          keyName: '?ipv6_enable',
          keyValue: null,
          desp: 'enable ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746174,
          keyName: '?subnetv6',
          keyValue: null,
          desp: 'IPv6 subnet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746175,
          keyName: 'proto',
          keyValue: null,
          desp: 'protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746176,
          keyName: 'port',
          keyValue: null,
          desp: 'port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17666,
        },
        {
          id: 746177,
          keyName: '?auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746178,
          keyName: '?cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746179,
          keyName: '?start',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746180,
          keyName: '?end',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746181,
          keyName: '?lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746182,
          keyName: '?ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746183,
          keyName: '?dh',
          keyValue: null,
          desp: 'Diffie Hellman',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746184,
          keyName: '?hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746185,
          keyName: '?ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746186,
          keyName: '?client_to_client',
          keyValue: null,
          desp: 'client to client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746187,
          keyName: '?verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746188,
          keyName: '?access_scope',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17666,
        },
        {
          id: 746189,
          keyName: '?client_auth',
          keyValue: null,
          desp: 'client authentication mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17666,
        },
        {
          id: 746190,
          keyName: '?cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746191,
          keyName: '?key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746192,
          keyName: 'initialization',
          keyValue: null,
          desp: 'whether initialized',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17666,
        },
        {
          id: 746193,
          keyName: '?tap_address',
          keyValue: null,
          desp: 'tap address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746194,
          keyName: '?tap_mask',
          keyValue: null,
          desp: 'tap mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
        {
          id: 746195,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：uci config missing 11：get IPv6 subnet failure 12：get TLS authentication key failure)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17666,
        },
        {
          id: 746196,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17666,
        },
      ],
    },
    set_config: {
      data: {
        id: 17667,
        title: 'set_config',
        desp: 'Set ovpn server config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","set_config",{"auth":"SHA256","proto":"tcp","port":1194,"subnetv4":"10.8.0.0","ipv6_enable":true,"subnetv6":"fd00:db8:0:123::/64","mask":"255.255.255.0","cipher":"AES-256-GCM","mode":"tun","start":"10.8.0.2","end":"10.8.0.100","lzo":false,"ca":"-----BEGIN CERTIFICATE----- MIIDCzCCAfOgAwIBAgIUequqVhT2jU3wWJF988KVcIUyUtwwDQYJKoZIhvcNAQEF BQAwFTETMBEGA1UEAwwKT3BlblZQTiBDQTAeFw0yMTA2MTkwMjA4MzNaFw0zMTA2 MTcwMjA4MzNaMBUxEzARBgNVBAMMCk9wZW5WUE4gQ0EwggEiMA0GCSqGSIb3DQEB AQUAA4IBDwAwggEKAoIBAQCjLr7B1mc04E/yHqR8hv7Qng5WuaZVGYDfUoxxly0c 8qOj6LqkL5UwjtcQV2rFgucwCsTYW8/dRY/Fd6cRllNdvRuA1nuMi/JhECkmf9AB ckdXlyXiObeYNL1MofcOsjRkB1oxokOO7BN2uJ2sQqekBSc7DN+8b9w5R+gaVXY3 082bVHvIKPiwYWzpNbO3MfdBsmh9oL8CryAfDAv8aTaAeCRoHNy5hnzqWoHfv6xm MsuVfwb9Vw5MegJ011x+VMF/++o95IcL/UsMSCrhjstyaf94ucPwIi7NuD2lor6e RP0eqKryGui1r2coZweZjGuYqOnTwHZhJcjpgSK1RdbhAgMBAAGjUzBRMB0GA1Ud DgQWBBRUf/PRJrXI4eHeTBBldnTeJnrefTAfBgNVHSMEGDAWgBRUf/PRJrXI4eHe TBBldnTeJnrefTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCS bAc7oMhLnAnHMPaFhXVDmvsgX7rK2BEKk/qqlHR2qAd7eSK3cteYX+Kayq+j8RmO PPsk4hXQNo+6tcaZSi05ACVYcCOkNw5dOZ8DDIo5swydamAZewp4ExsZQP4pdr40 8ikNle6Amt4psgxT0AVH56g4YO7qqdg5RMY14grIsBTL21j5OhdnwORPxstC2icW S5vzouDaIZ85IkiLaBku4fw8hBPkSmLRBexzeYwx/CoOs6olOEaKYoLy5TYFT+Ed 4Tvd7d0sw8vh1l1DiNtb5jGw7BsX4S8rzuB6o0GpxtxJprlyOPqqsyxwFNwhyAVk TFYWeM/vOcydA3zBBJbH -----END CERTIFICATE-----","dh":"-----BEGIN DH PARAMETERS----- MIGHAoGBALUmuxsYkB+OLETWb+fz2WhAwa6PUMNzweXEA44rZ8Yv3PqfUIb/rPiW ZUwIq+ouAF1kMPnRYYhsqg5d4OeMv8R6SPlQUckpZrBELsJro9qGRf2nda9v5KAI 8DaorlIhKHpEoJ9xBz8h/DtQ85PX3UT96RZXA/SAyVAhdDpHkJ5rAgEC -----END DH PARAMETERS-----","hmac":true,"ta":"-----BEGIN OpenVPN Static key V1----- 66301913fa0fa22457019b1a52e26aef 058c0405905f7e415615cc576bf1ca56 a0d12e27f181044c7ce4035afa5a7e30 1e02284208762d1ef8cd94b1989b8940 b534c469920a3012b440a4abad67af32 a7d80e0fc9447bd82b0d2ef2098a99c2 e7decaa1c5442b5ab6c0bbd413652814 c260fd76318d3abc6a65552fda44cb00 066420d3232f423f2810c861e0c3429f f566d0737d8e63c86dbf5bea5693dd51 1002a5e1e3aa95eddd388550e0022b04 8299cac19864821e3369a17e02cf02ef 0c41460146edba8748e9bccdd57cf8ac 1558f8d9a5b3430bf2229cad92625910 e09dce6311e834c2ca8c004f3a18c7d2 97188c096342674ff89c4bebda1e04db -----END OpenVPN Static key V1-----","client_to_client":false,"verb":"3","access_scope":1,"client_auth":1,"cert":"nil","key":"nil","tap_address":"10.8.0.1","tap_mask":"255.255.255.255"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348365,
          keyName: 'mode',
          keyValue: null,
          desp: 'tunnel mode: tun/tap',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348366,
          keyName: 'subnetv4',
          keyValue: null,
          desp: 'IPv4 subnet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348367,
          keyName: 'mask',
          keyValue: null,
          desp: 'mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348368,
          keyName: '?ipv6_enable',
          keyValue: null,
          desp: 'enable ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17667,
        },
        {
          id: 348369,
          keyName: '?subnetv6',
          keyValue: null,
          desp: 'IPv6 subnet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348370,
          keyName: 'proto',
          keyValue: null,
          desp: 'protocol',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348371,
          keyName: 'port',
          keyValue: null,
          desp: 'port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17667,
        },
        {
          id: 348372,
          keyName: '?auth',
          keyValue: null,
          desp: 'auth',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348373,
          keyName: '?cipher',
          keyValue: null,
          desp: 'cipher',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348374,
          keyName: '?start',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348375,
          keyName: '?end',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348376,
          keyName: '?lzo',
          keyValue: null,
          desp: 'lzo',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17667,
        },
        {
          id: 348377,
          keyName: '?ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348378,
          keyName: '?dh',
          keyValue: null,
          desp: 'Diffie Hellman',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348379,
          keyName: '?hmac',
          keyValue: null,
          desp: 'whether to enable TLS authentication',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17667,
        },
        {
          id: 348380,
          keyName: '?ta',
          keyValue: null,
          desp: 'TLS authentication key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348381,
          keyName: '?client_to_client',
          keyValue: null,
          desp: 'client to client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17667,
        },
        {
          id: 348382,
          keyName: '?verb',
          keyValue: null,
          desp: 'verbose level',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348383,
          keyName: '?access_scope',
          keyValue: null,
          desp: 'obsolete',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17667,
        },
        {
          id: 348384,
          keyName: '?client_auth',
          keyValue: null,
          desp: 'client authentication mode 1:only certificate 2:onely username/password 3: username/password and certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17667,
        },
        {
          id: 348385,
          keyName: '?cert',
          keyValue: null,
          desp: 'cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348386,
          keyName: '?key',
          keyValue: null,
          desp: 'key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348387,
          keyName: '?tap_address',
          keyValue: null,
          desp: 'tap address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
        {
          id: 348388,
          keyName: '?tap_mask',
          keyValue: null,
          desp: 'tap mask',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
      ],
      results: [
        {
          id: 746197,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(11：uci config missing 12：illegal subnet 13：illegal mask 14：subnet mask unmatch 15：illegal port 16：illegal IPv6 address 17：no internet 18：ovpn config missing 19：IPv6 missing 20：port occupied)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17667,
        },
        {
          id: 746198,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17667,
        },
      ],
    },
    generate_certificate: {
      data: {
        id: 17668,
        title: 'generate_certificate',
        desp: 'Generate ovpn cert',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","generate_certificate",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348389,
          keyName: '?ca',
          keyValue: null,
          desp: 'root cert',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17668,
        },
        {
          id: 348390,
          keyName: '?dh',
          keyValue: null,
          desp: 'Diffie Hellman',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17668,
        },
      ],
      results: [
        {
          id: 746199,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(19：no internet 20：openssl missing 21：certificate generation failure)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17668,
        },
        {
          id: 746200,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17668,
        },
      ],
    },
    export_config: {
      data: {
        id: 17669,
        title: 'export_config',
        desp: 'Export ovpn configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","export_config",{"ddns":false}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348391,
          keyName: 'ddns',
          keyValue: null,
          desp: 'enable ddns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17669,
        },
      ],
      results: [
        {
          id: 746201,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(-10：parameter missing -11：no internet)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17669,
        },
        {
          id: 746202,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17669,
        },
      ],
    },
    add_user: {
      data: {
        id: 17670,
        title: 'add_user',
        desp: 'add ovpn user',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","add_user",{"username":"glinet","password":"123456"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348392,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17670,
        },
        {
          id: 348393,
          keyName: 'password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17670,
        },
      ],
      results: [
        {
          id: 746203,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17670,
        },
        {
          id: 746204,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17670,
        },
      ],
    },
    remove_user: {
      data: {
        id: 17671,
        title: 'remove_user',
        desp: 'remove ovpn user',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","remove_user",{"username":"glinet","password":"123456"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348394,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17671,
        },
        {
          id: 348395,
          keyName: 'password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17671,
        },
      ],
      results: [
        {
          id: 746205,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17671,
        },
        {
          id: 746206,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17671,
        },
      ],
    },
    get_user_list: {
      data: {
        id: 17672,
        title: 'get_user_list',
        desp: 'get ovpn user list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","get_user_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"user_list":[{"username":"test1","password":"11111111"},{"username":"test2","password":"22222222"}]}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746207,
          keyName: 'user_list',
          keyValue: null,
          desp: 'user list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17672,
        },
        {
          id: 746208,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17672,
        },
        {
          id: 746209,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17672,
        },
      ],
    },
    add_route: {
      data: {
        id: 17673,
        title: 'add_route',
        desp: 'add ovpn server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","add_route",{"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348396,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17673,
        },
        {
          id: 348397,
          keyName: 'dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17673,
        },
        {
          id: 348398,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17673,
        },
        {
          id: 348399,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17673,
        },
        {
          id: 348400,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17673,
        },
        {
          id: 348401,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17673,
        },
      ],
      results: [
        {
          id: 746210,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17673,
        },
        {
          id: 746211,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17673,
        },
      ],
    },
    set_route: {
      data: {
        id: 17674,
        title: 'set_route',
        desp: 'set ovpn server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","set_route",{"rule_id":6512,"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348402,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17674,
        },
        {
          id: 348403,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17674,
        },
        {
          id: 348404,
          keyName: '?dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17674,
        },
        {
          id: 348405,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17674,
        },
        {
          id: 348406,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17674,
        },
        {
          id: 348407,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17674,
        },
        {
          id: 348408,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17674,
        },
      ],
      results: [
        {
          id: 746212,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17674,
        },
        {
          id: 746213,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17674,
        },
      ],
    },
    get_route_list: {
      data: {
        id: 17675,
        title: 'get_route_list',
        desp: 'get ovpn server custom route list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","get_route_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ipv4_route_rules":[{"rule_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"ipv6_route_rules":[{"rule_id":6515,"dest":"ff00::/8","gateway":"ff00::1","metric":20,"mtu":1500}]}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746214,
          keyName: 'ipv4_route_rules',
          keyValue: null,
          desp: 'ipv4 rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17675,
        },
        {
          id: 746215,
          keyName: 'ipv4_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746216,
          keyName: 'ipv4_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746217,
          keyName: '?ipv4_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746218,
          keyName: '?ipv4_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746219,
          keyName: '?ipv4_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746220,
          keyName: '?ipv4_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746221,
          keyName: 'ipv6_route_rules',
          keyValue: null,
          desp: 'ipv6 rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17675,
        },
        {
          id: 746222,
          keyName: 'ipv6_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746223,
          keyName: 'ipv6_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746224,
          keyName: '?ipv6_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746225,
          keyName: '?ipv6_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746226,
          keyName: '?ipv6_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746227,
          keyName: '?ipv6_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
        {
          id: 746228,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17675,
        },
        {
          id: 746229,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17675,
        },
      ],
    },
    remove_route: {
      data: {
        id: 17676,
        title: 'remove_route',
        desp: 'remove ovpn server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","remove_route",{"rule_id":6512,"route_flag":4}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348409,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17676,
        },
        {
          id: 348410,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17676,
        },
      ],
      results: [
        {
          id: 746230,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17676,
        },
        {
          id: 746231,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17676,
        },
      ],
    },
    set_setting: {
      data: {
        id: 17677,
        title: 'set_setting',
        desp: 'set ovpn server setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","set_setting",{"local_access":true,"masq":true,"mtu":1460}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ovpn-server'],
      params: [
        {
          id: 348411,
          keyName: '?local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17677,
        },
        {
          id: 348412,
          keyName: '?masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17677,
        },
        {
          id: 348413,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17677,
        },
      ],
      results: [
        {
          id: 746232,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17677,
        },
        {
          id: 746233,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17677,
        },
      ],
    },
    get_setting: {
      data: {
        id: 17678,
        title: 'get_setting',
        desp: 'get ovpn server setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn-server","get_setting",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"local_access":true,"masq":true,"mtu":1460}}',
      module_name: ['ovpn-server'],
      params: [],
      results: [
        {
          id: 746234,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17678,
        },
        {
          id: 746235,
          keyName: 'masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17678,
        },
        {
          id: 746236,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17678,
        },
        {
          id: 746237,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17678,
        },
        {
          id: 746238,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17678,
        },
      ],
    },
  },
  {
    module_name: ['ovpn_client'],
    set_config_name: {
      data: {
        id: 17662,
        title: 'set_config_name',
        desp: "Modify client's name",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:19',
        create_time: '2024-11-19T17:55:19',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","ovpn_client","set_config_name",{"group_id":80744, "client_id":1, "name":"client1"}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{}}',
      module_name: ['ovpn_client'],
      params: [
        {
          id: 348363,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id of client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17662,
        },
        {
          id: 348364,
          keyName: 'client_id',
          keyValue: null,
          desp: 'client id of client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17662,
        },
      ],
      results: [
        {
          id: 746155,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -10:"parameter missing"',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17662,
        },
        {
          id: 746156,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17662,
        },
      ],
    },
  },
  {
    module_name: ['parental-control'],
    get_app_list: {
      data: {
        id: 17679,
        title: 'get_app_list',
        desp: 'Get a list of recognized applications.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","get_app_list"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"apps":[{"id":8001,"name":"baidu","type":8},{"id":1002,"name":"facebook","type":1}]}}',
      module_name: ['parental-control'],
      params: [],
      results: [
        {
          id: 746239,
          keyName: 'apps',
          keyValue: null,
          desp: 'List of recognized applications.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17679,
        },
        {
          id: 746240,
          keyName: 'apps.id',
          keyValue: null,
          desp: 'Application ID, globally unique, application ID starts from 1001, 0-1000 is a special ID, reserved for use, among which 1-8 is a type ID, if this ID is set, it means all applications under this type.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17679,
        },
        {
          id: 746241,
          keyName: 'apps.name',
          keyValue: null,
          desp: 'Application name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17679,
        },
        {
          id: 746242,
          keyName: 'apps.type',
          keyValue: null,
          desp: 'Application type (1: social, 2: game, 3: video, 4: shopping, 5: music, 6: recruitment, 7: download, 8: portal).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17679,
        },
      ],
    },
    add_group: {
      data: {
        id: 17680,
        title: 'add_group',
        desp: 'Add device group.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","add_group",{"name":"group1","macs":["98:6B:46:F0:9B:A4","98:6B:46:F0:9B:A5"],"default_rule":"cfga067b","schedules":[{"week":1,"begin":"12:00","end":"13:00","rule":"cfga067c"},{"date":2,"begin":"17:00","end":"18:00","rule":"cfga067c"}]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"id":"cfga048"}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348414,
          keyName: 'name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
        {
          id: 348415,
          keyName: 'default_rule',
          keyValue: null,
          desp: 'The default ruleset ID used by the group. The ruleset ID must correspond to the ruleset ID returned in the rules parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
        {
          id: 348416,
          keyName: 'macs',
          keyValue: null,
          desp: 'The device MAC address list contained in the group, which is a string type.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17680,
        },
        {
          id: 348417,
          keyName: '?schedules',
          keyValue: null,
          desp: 'The list of schedules contained in the group. If there is a schedule setting for the corresponding group, enter this parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17680,
        },
        {
          id: 348418,
          keyName: '?schedules.week',
          keyValue: null,
          desp: 'The day of the week for the schedule, the allowable range is 0-6, corresponding from Sunday to Saturday.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17680,
        },
        {
          id: 348419,
          keyName: '?schedules.begin',
          keyValue: null,
          desp: 'The start time of the schedule, the format is hh:mm, the start time must be before the end time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
        {
          id: 348420,
          keyName: '?schedules.end',
          keyValue: null,
          desp: 'The end time of the schedule, the format is hh:mm, the end time must be after the start time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
        {
          id: 348421,
          keyName: '?schedules.rule',
          keyValue: null,
          desp: 'The ID of the ruleset to be used by this schedule. The ID of the ruleset must correspond to the ID of the ruleset entered in the rules parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
      ],
      results: [
        {
          id: 746243,
          keyName: 'id',
          keyValue: null,
          desp: 'The ID of the new group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
        {
          id: 746244,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameters, -2: passed shedules but missing required parameters)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17680,
        },
        {
          id: 746245,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17680,
        },
      ],
    },
    remove_group: {
      data: {
        id: 17681,
        title: 'remove_group',
        desp: 'Remove a device group.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","remove_group",{"id":"cfga01234b"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348422,
          keyName: 'id',
          keyValue: null,
          desp: 'The ID of the group to be deleted. The ID of the group can be obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17681,
        },
      ],
      results: [
        {
          id: 746246,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17681,
        },
        {
          id: 746247,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17681,
        },
      ],
    },
    set_group: {
      data: {
        id: 17682,
        title: 'set_group',
        desp: 'Modify device group configuration.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","set_group",{"id":"cfga01234b","name":"group1","macs":["98:6B:46:F0:9B:A4","98:6B:46:F0:9B:A5"],"default_rule":"cfga067b","schedules":[{"week":[1,3,5],"begin":"12:00","end":"13:00","rule":"cfga067c"},{"date":2,"begin":"17:00","end":"18:00","rule":"cfga067c"}]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348423,
          keyName: 'id',
          keyValue: null,
          desp: 'The group ID that needs to be set, and the group ID can be obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
        {
          id: 348424,
          keyName: 'name',
          keyValue: null,
          desp: "group's name",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
        {
          id: 348425,
          keyName: 'default_rule',
          keyValue: null,
          desp: 'The default ruleset ID used by the group. The ruleset ID must correspond to the ruleset ID returned in the rules.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
        {
          id: 348426,
          keyName: 'macs',
          keyValue: null,
          desp: 'The device MAC address list contained in the group, which is a string type.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17682,
        },
        {
          id: 348427,
          keyName: '?schedules',
          keyValue: null,
          desp: 'The list of schedules contained in the group. If there is a schedule setting for the corresponding group, enter this parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17682,
        },
        {
          id: 348428,
          keyName: '?schedules.week',
          keyValue: null,
          desp: 'The day of the week for the schedule, the allowable range is 0-6, corresponding from Sunday to Saturday.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17682,
        },
        {
          id: 348429,
          keyName: '?schedules.begin',
          keyValue: null,
          desp: 'The start time of the schedule, the format is hh:mm, the start time must be before the end time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
        {
          id: 348430,
          keyName: '?schedules.end',
          keyValue: null,
          desp: 'The end time of the schedule, the format is hh:mm, the end time must be after the start time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
        {
          id: 348431,
          keyName: '?schedules.rule',
          keyValue: null,
          desp: 'The ID of the ruleset to be used by this schedule. The ID of the ruleset must correspond to the ID of the ruleset entered in the rules parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
      ],
      results: [
        {
          id: 746248,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameters, -2: passed shedules but missing required parameters)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17682,
        },
        {
          id: 746249,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17682,
        },
      ],
    },
    add_rule: {
      data: {
        id: 17683,
        title: 'add_rule',
        desp: 'Add a ruleset.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","add_rule",{"name":"rule1","color":"#aabbccddee","apps":[1001,2002],"blacklist":["[tcp;;;www.google.com;;]"]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348432,
          keyName: 'name',
          keyValue: null,
          desp: 'The name of the ruleset, globally unique, used to distinguish different rulesets.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17683,
        },
        {
          id: 348433,
          keyName: 'color',
          keyValue: null,
          desp: 'The label color of the ruleset, which is used for displaying UI.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17683,
        },
        {
          id: 348434,
          keyName: 'apps',
          keyValue: null,
          desp: 'The ID or application type of the application included in the ruleset, which is an integer type, and the corresponding relationship between the application and the ID is returned through the get_app_list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17683,
        },
        {
          id: 348435,
          keyName: '?blacklist',
          keyValue: null,
          desp: 'blacklist The blacklist list of the ruleset, which is a string type. This list follows the application feature description syntax. For the application feature description syntax, please refer to doc.gl-inet.com',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17683,
        },
      ],
      results: [
        {
          id: 746250,
          keyName: 'id',
          keyValue: null,
          desp: 'ID of the new ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17683,
        },
        {
          id: 746251,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter, -2: domain name in blacklist is illegal)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17683,
        },
        {
          id: 746252,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17683,
        },
      ],
    },
    remove_rule: {
      data: {
        id: 17684,
        title: 'remove_rule',
        desp: 'remove a ruleset.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","remove_rule",{"id":"cfga067b"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348436,
          keyName: 'id',
          keyValue: null,
          desp: 'The ID of the rule to be removed. The ID of the rule can be obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17684,
        },
      ],
      results: [
        {
          id: 746253,
          keyName: '?err_code',
          keyValue: null,
          desp: 'err_code Error code (-1: missing required parameter, -2: deleted rule is being used as default rule, -3: deleted rule is being used as temporary rule)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17684,
        },
        {
          id: 746254,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17684,
        },
      ],
    },
    set_rule: {
      data: {
        id: 17685,
        title: 'set_rule',
        desp: 'Set the ruleset。',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","set_rule",{"id":"cfga067b","name":"rule1","color":"#aabbccddee","apps":[1001,2002],"blacklist":["[tcp;;;www.google.com;;]"]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348437,
          keyName: 'id',
          keyValue: null,
          desp: 'The rule ID that needs to be set, and the rule ID can be obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17685,
        },
        {
          id: 348438,
          keyName: 'color',
          keyValue: null,
          desp: 'The label color of the ruleset, used by the UI.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17685,
        },
        {
          id: 348439,
          keyName: 'name',
          keyValue: null,
          desp: 'The name of the ruleset, globally unique, used to distinguish different rulesets.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17685,
        },
        {
          id: 348440,
          keyName: 'apps',
          keyValue: null,
          desp: 'The ID or application type of the application included in the ruleset, which is an integer type, and the corresponding relationship between the application and the ID is returned through the get_app_list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17685,
        },
        {
          id: 348441,
          keyName: '?blacklist',
          keyValue: null,
          desp: 'The exception list of the ruleset, which is a string type. This list is exceptions relative to the apps parameter. A ruleset can add up to 32 exception features. It follows the application feature description syntax. For the application feature description syntax, please refer to doc.gl-inet.com',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17685,
        },
        {
          id: 348442,
          keyName: 'manual',
          keyValue: null,
          desp: 'Whether input domain list manually (0: get domain list by url, 1: input domain list manually)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17685,
        },
        {
          id: 348443,
          keyName: 'url',
          keyValue: null,
          desp: 'url to get domain list from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17685,
        },
      ],
      results: [
        {
          id: 746255,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter, -2: domain name in blacklist is illegal)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17685,
        },
        {
          id: 746256,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17685,
        },
      ],
    },
    get_config: {
      data: {
        id: 17686,
        title: 'get_config',
        desp: 'Get parental control configuration.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","get_config"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"enable":true,"drop_anonymous":false,"auto_update":false,"rules":[{"id":"cfga067b","name":"rule1","color":"#aabbccddee","apps":[1001,2002],"blacklist":["[tcp;;;www.google.com;;]"]},{"id":"cfga067c","name":"rule2","color":"#aabbccddee","apps":[3003,4004],"blacklist":["[tcp;;;www.google.com;;]"]}],"groups":[{"name":"group1","macs":["98:6B:46:F0:9B:A4","98:6B:46:F0:9B:A5"],"default_rule":"cfga067a","schedules":[{"week":1,"begin":"12:00","end":"13:00","rule":"cfga067c","id":"cfga066c"},{"date":2,"begin":"14:00","end":"15:00","rule":"cfga067c","id":"cfga076c"}]}]}}',
      module_name: ['parental-control'],
      params: [],
      results: [
        {
          id: 746257,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable or not.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746258,
          keyName: 'drop_anonymous',
          keyValue: null,
          desp: 'Whether to prohibit anonymous device access.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746259,
          keyName: 'auto_update',
          keyValue: null,
          desp: 'Whether to automatically update the feature library.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746260,
          keyName: 'enable_app',
          keyValue: null,
          desp: 'Whether to enable the app feature library.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746261,
          keyName: '?rules',
          keyValue: null,
          desp: 'List of rulesets, return if ruleset are not empty.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746262,
          keyName: '?rules.id',
          keyValue: null,
          desp: 'Ruleset ID, globally unique, used to distinguish different rulesets.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746263,
          keyName: '?rules.preset',
          keyValue: null,
          desp: 'Whether it is a preset ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746264,
          keyName: '?rules.name',
          keyValue: null,
          desp: 'The name of the ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746265,
          keyName: '?rules.color',
          keyValue: null,
          desp: 'Label color of ruleset, used by UI.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746266,
          keyName: '?rules.apps',
          keyValue: null,
          desp: 'A list of application IDs contained in the ruleset, which is an integer type. The correspondence between applications and IDs is returned through the get_app_list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746267,
          keyName: '?rules.blacklist',
          keyValue: null,
          desp: 'The exception list of the ruleset, which is a string type. This list is an exception relative to the apps parameter, and follows the application feature description syntax. For the application feature description syntax, please refer to doc.gl-inet.com.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746268,
          keyName: 'manual',
          keyValue: null,
          desp: 'Whether input blacklist manually (0: get blacklist by url, 1: input blacklist manually)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17686,
        },
        {
          id: 746269,
          keyName: 'url',
          keyValue: null,
          desp: 'Url to get blacklist from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746270,
          keyName: 'url_success',
          keyValue: null,
          desp: 'Number of successful url blacklist detections',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746271,
          keyName: '?groups',
          keyValue: null,
          desp: 'Device group list, if the group list is not empty, it will be returned.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746272,
          keyName: '?groups.id',
          keyValue: null,
          desp: 'Group ID, globally unique, used to distinguish different device groups.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746273,
          keyName: '?groups.name',
          keyValue: null,
          desp: "Group's name.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746274,
          keyName: '?groups.default_rule',
          keyValue: null,
          desp: 'The default ruleset ID used by the group. The ruleset ID must correspond to the ruleset ID returned in the rules parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746275,
          keyName: '?groups.macs',
          keyValue: null,
          desp: 'A list of device MAC addresses contained in the group, which is a string type.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746276,
          keyName: '?groups.schedules',
          keyValue: null,
          desp: 'The list of schedules contained in the group. If there is a schedule setting for the corresponding group, this parameter will be returned.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17686,
        },
        {
          id: 746277,
          keyName: '?groups.schedules.id',
          keyValue: null,
          desp: "Schedule's ID.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17686,
        },
        {
          id: 746278,
          keyName: '?groups.schedules.week',
          keyValue: null,
          desp: 'The day of the week, the allowable range is 0-6, corresponding to Saturday to Sunday.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17686,
        },
        {
          id: 746279,
          keyName: '?groups.schedules.begin',
          keyValue: null,
          desp: 'The start time of the schedule, the format is hh:mm, the start time must be before the end time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746280,
          keyName: '?groups.schedules.end',
          keyValue: null,
          desp: 'The end time of the schedule, the format is hh:mm, the end time must be after the start time.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
        {
          id: 746281,
          keyName: '?groups.schedules.rule',
          keyValue: null,
          desp: 'The ID of the ruleset to be used by this schedule. The ID of the ruleset must correspond to the ID of the ruleset returned in the rules parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17686,
        },
      ],
    },
    set_config: {
      data: {
        id: 17687,
        title: 'set_config',
        desp: 'Set the base configuration.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","set_config",{"enable":true,"drop_anonymous":false,"auto_update":false}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348444,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17687,
        },
        {
          id: 348445,
          keyName: 'drop_anonymous',
          keyValue: null,
          desp: 'Whether to prohibit anonymous devices from accessing.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17687,
        },
        {
          id: 348446,
          keyName: 'auto_update',
          keyValue: null,
          desp: 'Whether to automatically update the feature library.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17687,
        },
      ],
      results: [
        {
          id: 746282,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17687,
        },
        {
          id: 746283,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17687,
        },
      ],
    },
    set_brief: {
      data: {
        id: 17688,
        title: 'set_brief',
        desp: 'Set temporary ruleset.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","set_brief",{"enable":true,"manual_stop":false,"time":"18:00","rule_id":"cfg0036","group_id":"cfg2560"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348447,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17688,
        },
        {
          id: 348448,
          keyName: '?manual_stop',
          keyValue: null,
          desp: 'Whether need manual stop.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17688,
        },
        {
          id: 348449,
          keyName: '?time',
          keyValue: null,
          desp: 'The duration of the temporary ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17688,
        },
        {
          id: 348450,
          keyName: '?rule_id',
          keyValue: null,
          desp: 'The ruleset ID of the temporary ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17688,
        },
        {
          id: 348451,
          keyName: 'group_id',
          keyValue: null,
          desp: 'The group ID that needs to be set, and the group ID can be obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17688,
        },
      ],
      results: [
        {
          id: 746284,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17688,
        },
        {
          id: 746285,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17688,
        },
      ],
    },
    get_brief: {
      data: {
        id: 17689,
        title: 'get_brief',
        desp: 'Get temporary ruleset configuration.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","get_brief"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"enable":true,"manual_stop":false,"time":"18:00","rule_id":"cfg0036","group_id":"cfg2560"}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348452,
          keyName: 'group_id',
          keyValue: null,
          desp: 'The group ID to be obtained. The group ID is obtained through get_config.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17689,
        },
      ],
      results: [
        {
          id: 746286,
          keyName: 'enable',
          keyValue: null,
          desp: 'Whether to enable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17689,
        },
        {
          id: 746287,
          keyName: '?manual_stop',
          keyValue: null,
          desp: 'Whether need manual stop.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17689,
        },
        {
          id: 746288,
          keyName: '?time',
          keyValue: null,
          desp: 'The duration of the temporary ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17689,
        },
        {
          id: 746289,
          keyName: '?rule_id',
          keyValue: null,
          desp: 'The ruleset ID of the temporary ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17689,
        },
        {
          id: 746290,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17689,
        },
        {
          id: 746291,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17689,
        },
      ],
    },
    get_status: {
      data: {
        id: 17690,
        title: 'get_status',
        desp: 'Get temporary ruleset status.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","get_status"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"groups":[{"id":"group6075409","rule":"drop","brief":false}],"time_valid":true}}',
      module_name: ['parental-control'],
      params: [],
      results: [
        {
          id: 746292,
          keyName: 'time_valid',
          keyValue: null,
          desp: 'Whether the system time has been synchronized (0: the time is not synchronized, 1: the time is synchronized)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17690,
        },
        {
          id: 746293,
          keyName: 'groups',
          keyValue: null,
          desp: 'List of user groups.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17690,
        },
        {
          id: 746294,
          keyName: 'groups.id',
          keyValue: null,
          desp: "Group's ID.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17690,
        },
        {
          id: 746295,
          keyName: 'groups.rule',
          keyValue: null,
          desp: 'The ID of the ruleset currently in use.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17690,
        },
        {
          id: 746296,
          keyName: '?groups.brief',
          keyValue: null,
          desp: 'Whether temporary ruleset are being used.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17690,
        },
        {
          id: 746297,
          keyName: '?schedule_id',
          keyValue: null,
          desp: 'The ID of the schedule being used, if not returned, it means that the currently used ruleset is the default ruleset or a temporary ruleset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17690,
        },
        {
          id: 746298,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17690,
        },
        {
          id: 746299,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17690,
        },
      ],
    },
    update: {
      data: {
        id: 17691,
        title: 'update',
        desp: 'Manually update the feature database.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","update"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [],
      results: [],
    },
    set_mode: {
      data: {
        id: 17692,
        title: 'set_mode',
        desp: 'Set the parental control mode.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","set_mode",{"mode":2}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348453,
          keyName: 'mode',
          keyValue: null,
          desp: 'Which parental control mode to work, [0：init; 1：free; 2: bark]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17692,
        },
      ],
      results: [
        {
          id: 746300,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code (-1: missing required parameter)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17692,
        },
        {
          id: 746301,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17692,
        },
      ],
    },
    get_mode: {
      data: {
        id: 17693,
        title: 'get_mode',
        desp: 'Get the parental control mode.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","get_mode"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"mode":2}}',
      module_name: ['parental-control'],
      params: [],
      results: [
        {
          id: 746302,
          keyName: 'mode',
          keyValue: null,
          desp: 'Working in which parental control mode, [0：init; 1：free; 2: bark]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17693,
        },
        {
          id: 746303,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17693,
        },
        {
          id: 746304,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17693,
        },
      ],
    },
    check_blacklist_online: {
      data: {
        id: 17694,
        title: 'check_blacklist_online',
        desp: 'check online blacklist',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:20',
        create_time: '2024-11-19T17:55:20',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","parental-control","check_blacklist_online",{"url":"http://192.168.8.106:8080/url.txt"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"success":"6","failed":1}}',
      module_name: ['parental-control'],
      params: [
        {
          id: 348454,
          keyName: 'url',
          keyValue: null,
          desp: 'Url to get blacklist from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17694,
        },
      ],
      results: [
        {
          id: 746305,
          keyName: '?success',
          keyValue: null,
          desp: 'Success count',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17694,
        },
        {
          id: 746306,
          keyName: '?failed',
          keyValue: null,
          desp: 'Failed count',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17694,
        },
        {
          id: 746307,
          keyName: '?invalid_lines',
          keyValue: null,
          desp: 'The number of failed lines detected in the Url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17694,
        },
        {
          id: 746308,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17694,
        },
        {
          id: 746309,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17694,
        },
      ],
    },
  },
  {
    module_name: ['plugins'],
    update_repository: {
      data: {
        id: 17695,
        title: 'update_repository',
        desp: 'update software repository',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","update_repository",{}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['plugins'],
      params: [],
      results: [
        {
          id: 746310,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:opkg resource temporarily unavailable,-2:network unreachable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17695,
        },
        {
          id: 746311,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17695,
        },
      ],
    },
    get_repository_status: {
      data: {
        id: 17696,
        title: 'get_repository_status',
        desp: 'get software repository status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","plugins","get_repository_status",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"time_current":1720063036,"count_reserve":0,"count_updatable":11,"count_installed":416,"time_last_update":1720062428,"count_all":9460,"status":2,"count_not_installed":9033}}',
      module_name: ['plugins'],
      params: [],
      results: [
        {
          id: 746312,
          keyName: 'status',
          keyValue: null,
          desp: 'repository status[0: no update; 1: Updating; 2: already updated]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746313,
          keyName: 'time_last_update',
          keyValue: null,
          desp: 'the time of the last update, 0 means the repository has not been update',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746314,
          keyName: 'time_current',
          keyValue: null,
          desp: 'current time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746315,
          keyName: '?count_all',
          keyValue: null,
          desp: 'total number of software packages {p.s. the count value is not returned during the update process}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746316,
          keyName: '?count_installed',
          keyValue: null,
          desp: 'number of packages installed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746317,
          keyName: '?count_not_installed',
          keyValue: null,
          desp: 'number of packages not installed',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746318,
          keyName: '?count_updatable',
          keyValue: null,
          desp: 'number of packages that can be updated',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746319,
          keyName: '?count_reserve',
          keyValue: null,
          desp: 'number of packages reserved by user,returned after a reserved configuration upgrade',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746320,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-7:datebase error',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17696,
        },
        {
          id: 746321,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17696,
        },
      ],
    },
    get_config: {
      data: {
        id: 17697,
        title: 'get_config',
        desp: 'get the configuration of the software source',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","get_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"source":[{"url":"https:\\/\\/fw.gl-inet.cn\\/releases\\/v21.02.3\\/kmod-4.2.1\\/aarch64_cortex-a53\\/mediatek\\/mt7981","name":"glinet_core","system":true},{"url":"https:\\/\\/fw.gl-inet.cn\\/releases\\/v21.02.3\\/packages-4.0\\/aarch64_cortex-a53\\/glinet","name":"glinet_gli_pub","system":true},{"url":"https:\\/\\/fw.gl-inet.cn\\/releases\\/v21.02.3\\/packages-4.0\\/aarch64_cortex-a53\\/packages","name":"glinet_gli_packages","system":true}]}}',
      module_name: ['plugins'],
      params: [],
      results: [
        {
          id: 746322,
          keyName: 'source',
          keyValue: null,
          desp: 'software source information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17697,
        },
        {
          id: 746323,
          keyName: 'source.name',
          keyValue: null,
          desp: 'software source name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17697,
        },
        {
          id: 746324,
          keyName: 'source.url',
          keyValue: null,
          desp: 'software source url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17697,
        },
        {
          id: 746325,
          keyName: 'source.system',
          keyValue: null,
          desp: 'Whether it is the software source url that comes with the system',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17697,
        },
      ],
    },
    set_config: {
      data: {
        id: 17698,
        title: 'set_config',
        desp: 'set the configuration of the software source',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","set_config",{"source":[{"url":"https://fw.gl-inet.com/releases/v21.02.3/kmod-4.0/mips_24kc/ath79","name":"glinet_core","system":false}]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['plugins'],
      params: [
        {
          id: 348455,
          keyName: 'source',
          keyValue: null,
          desp: 'software source information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17698,
        },
        {
          id: 348456,
          keyName: 'source.name',
          keyValue: null,
          desp: 'software source name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17698,
        },
        {
          id: 348457,
          keyName: 'source.url',
          keyValue: null,
          desp: 'software source url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17698,
        },
      ],
      results: [],
    },
    get_list: {
      data: {
        id: 17699,
        title: 'get_list',
        desp: 'get a list of software packages',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","get_list",{"status":4,"limit":8,"page":1}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"packages":[{"version":"12","status":0,"name":"464xlat","uninstallable":true,"size":5144},{"version":"26","status":0,"name":"6in4","uninstallable":true,"size":2515},{"version":"10","status":0,"name":"6rd","uninstallable":true,"size":3858},{"version":"13","status":0,"name":"6to4","uninstallable":true,"size":1851},{"status":1,"version":"1","uninstallable":true,"name":"8021xd"},{"version":"20210116.0-2","status":0,"name":"UDPspeeder","uninstallable":true,"size":78562},{"version":"2.2.53-1","status":0,"name":"acl","uninstallable":true,"size":20865},{"version":"3.0.1-1","status":0,"name":"acme","uninstallable":true,"size":52112}]}}',
      module_name: ['plugins'],
      params: [
        {
          id: 348458,
          keyName: 'status',
          keyValue: null,
          desp: 'get a list of sogtware packages in a specified state[0: not installed; 1: installed; 2: updatable; 3: user retention; 4: all]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 348459,
          keyName: '?search_condition',
          keyValue: null,
          desp: "search criteria, used when searching for software packages, e.g.:for *test* of the regular expression, there is no need to add the '*' symbol when passing in the parameters",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
        {
          id: 348460,
          keyName: '?search_initials',
          keyValue: null,
          desp: "search criteria, used when searching for software packages, e.g.:for a* of the regular expression, there is no need to add the '*' symbol when passing in the parameters.Used to filter packages starting with an initial letter, only one of these two search criteria can be used",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
        {
          id: 348461,
          keyName: 'limit',
          keyValue: null,
          desp: 'display maximum number per page.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 348462,
          keyName: 'page',
          keyValue: null,
          desp: 'number of pages, set to 1 when searching, and set to the specified page when turning pages.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
      ],
      results: [
        {
          id: 746326,
          keyName: 'packages',
          keyValue: null,
          desp: 'software package information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17699,
        },
        {
          id: 746327,
          keyName: 'packages.name',
          keyValue: null,
          desp: 'software package name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
        {
          id: 746328,
          keyName: 'packages.status',
          keyValue: null,
          desp: 'software package status[0: not installed; 1: installed; 2: updatable; 3: user retention]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 746329,
          keyName: 'packages.uninstallable',
          keyValue: null,
          desp: 'whether to allow uninstallation[true: allow; false:not allowed] {p.s.:packages that are not allowed to be uninstalled will affect system operation}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17699,
        },
        {
          id: 746330,
          keyName: '?packages.version',
          keyValue: null,
          desp: 'package version, not returned when the repository is not updated and the package status is user retention.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
        {
          id: 746331,
          keyName: '?packages.new_version',
          keyValue: null,
          desp: 'the new package version, returned when the package status is updatable.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
        {
          id: 746332,
          keyName: '?packages.size',
          keyValue: null,
          desp: 'The size of the package, returned after updating the software repository.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 746333,
          keyName: '?count_search',
          keyValue: null,
          desp: 'the number of software packages that meet the search criteria,, returned when searching.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 746334,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-7:database error',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17699,
        },
        {
          id: 746335,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17699,
        },
      ],
    },
    get_package_info: {
      data: {
        id: 17700,
        title: 'get_package_info',
        desp: 'get details for a single package',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","get_package_info",{"name":"kmod-usb-serial-pl2303"}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"info":"Package: kmod-usb-serial-pl2303\\nVersion: 5.4.211-1\\nDepends: kernel (= 5.4.211-1-86cd10224392f0f1f47de97edd009387), kmod-usb-serial\\nStatus: unknown ok not-installed\\nSection: kernel\\nArchitecture: aarch64_cortex-a53\\nSize: 7479\\nFilename: kmod-usb-serial-pl2303_5.4.211-1_aarch64_cortex-a53.ipk\\nDescription: Kernel support for Prolific PL2303 USB-to-Serial converters\\n\\n"}}',
      module_name: ['plugins'],
      params: [
        {
          id: 348463,
          keyName: 'name',
          keyValue: null,
          desp: 'The name of software.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17700,
        },
      ],
      results: [
        {
          id: 746336,
          keyName: 'info',
          keyValue: null,
          desp: 'opkg command execution result',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17700,
        },
        {
          id: 746337,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-2:network unreachable,-3:flash not enough storage space.-6:opkg stderr.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17700,
        },
        {
          id: 746338,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17700,
        },
      ],
    },
    install_package: {
      data: {
        id: 17701,
        title: 'install_package',
        desp: 'install software package',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","install_package",{"name":["kmod-usb-serial-pl2303"]}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"info":"Installing kmod-usb-serial-pl2303 (5.4.211-1) to root...\\nDownloading https:\\/\\/fw.gl-inet.cn\\/releases\\/v21.02.3\\/kmod-4.2.1\\/aarch64_cortex-a53\\/mediatek\\/mt7981\\/kmod-usb-serial-pl2303_5.4.211-1_aarch64_cortex-a53.ipk\\nInstalling kmod-usb-serial (5.4.211-1) to root...\\nDownloading https:\\/\\/fw.gl-inet.cn\\/releases\\/v21.02.3\\/kmod-4.2.1\\/aarch64_cortex-a53\\/mediatek\\/mt7981\\/kmod-usb-serial_5.4.211-1_aarch64_cortex-a53.ipk\\nConfiguring kmod-usb-serial.\\nConfiguring kmod-usb-serial-pl2303.\\nUpdating database.\\nDatabase update completed.\\n"}}',
      module_name: ['plugins'],
      params: [
        {
          id: 348464,
          keyName: 'name',
          keyValue: null,
          desp: 'the name of the installed package,bulk install is available when installing user retention packages',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17701,
        },
      ],
      results: [
        {
          id: 746339,
          keyName: 'info',
          keyValue: null,
          desp: 'opkg command execution result',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17701,
        },
        {
          id: 746340,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:opkg resource temporarily unavailable,-2:network unreachable,-3:flash not enough storage space.-6:opkg stderr.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17701,
        },
        {
          id: 746341,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17701,
        },
      ],
    },
    remove_package: {
      data: {
        id: 17702,
        title: 'remove_package',
        desp: 'uninstall software package',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","plugins","remove_package",{"name":"kmod-usb-serial-pl2303","force":false}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"info":"Removing package kmod-usb-serial-pl2303 from root...\\nUpdating database.\\nDatabase update completed.\\n"}}',
      module_name: ['plugins'],
      params: [
        {
          id: 348465,
          keyName: 'name',
          keyValue: null,
          desp: 'software package name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17702,
        },
        {
          id: 348466,
          keyName: 'force',
          keyValue: null,
          desp: 'whether to uninstall the software package',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17702,
        },
      ],
      results: [
        {
          id: 746342,
          keyName: 'info',
          keyValue: null,
          desp: 'opkg command execution result',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17702,
        },
        {
          id: 746343,
          keyName: '?err_code',
          keyValue: null,
          desp: "Error code,-1:opkg resource temporarily unavailable,-4:parameter error,-5:can't uninstall.-6:opkg stderr.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17702,
        },
        {
          id: 746344,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17702,
        },
      ],
    },
  },
  {
    module_name: ['qos'],
    set_channel_bandwidth_ratio: {
      data: {
        id: 17703,
        title: 'set_channel_bandwidth_ratio',
        desp: 'Configure priority channel bandwidth ratio',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","set_channel_bandwidth_ratio",{"sync_ratio":true,"upload":[{"min":"90","priority":"1","max":"70"},{"min":"70","priority":"2","max":"50"},{"min":"45","priority":"3","max":"30"},{"min":"25","priority":"4","max":"15"}]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348467,
          keyName: 'sync_ratio',
          keyValue: null,
          desp: 'sync upload bandwidth ratio to download bandwidth ratio',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17703,
        },
        {
          id: 348468,
          keyName: 'upload',
          keyValue: null,
          desp: 'upload bandwidth configuration',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17703,
        },
        {
          id: 348469,
          keyName: 'upload.priority',
          keyValue: null,
          desp: 'upload bandwidth priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 348470,
          keyName: 'upload.min',
          keyValue: null,
          desp: 'The minimum upload bandwidth corresponding to the priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 348471,
          keyName: 'upload.max',
          keyValue: null,
          desp: 'The maximum upload bandwidth corresponding to the priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 348472,
          keyName: 'download',
          keyValue: null,
          desp: 'download bandwidth configuration[only needed when sync_ratio is false]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17703,
        },
        {
          id: 348473,
          keyName: 'download.priority',
          keyValue: null,
          desp: 'download bandwidth priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 348474,
          keyName: 'download.min',
          keyValue: null,
          desp: 'The minimum download bandwidth corresponding to the priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 348475,
          keyName: 'download.max',
          keyValue: null,
          desp: 'The maximum download bandwidth corresponding to the priority',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
      ],
      results: [
        {
          id: 746345,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17703,
        },
        {
          id: 746346,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17703,
        },
      ],
    },
    get_channel_bandwidth_ratio: {
      data: {
        id: 17704,
        title: 'get_channel_bandwidth_ratio',
        desp: 'get priority channel bandwidth ratio',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","get_channel_bandwidth_ratio",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"upload":[],"sync_ratio":false,"download":[]}}',
      module_name: ['qos'],
      params: [],
      results: [
        {
          id: 746347,
          keyName: 'sync_ratio',
          keyValue: null,
          desp: 'sync upload bandwidth ratio to download bandwidth ratio',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17704,
        },
        {
          id: 746348,
          keyName: 'upload',
          keyValue: null,
          desp: 'upload bandwidth configuration.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17704,
        },
        {
          id: 746349,
          keyName: 'upload.priority',
          keyValue: null,
          desp: 'upload bandwidth priority [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746350,
          keyName: 'upload.min',
          keyValue: null,
          desp: 'The minimum upload bandwidth corresponding to the priority.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746351,
          keyName: 'upload.max',
          keyValue: null,
          desp: 'The maximum upload bandwidth corresponding to the priority..',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746352,
          keyName: 'download',
          keyValue: null,
          desp: 'download bandwidth configuration.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17704,
        },
        {
          id: 746353,
          keyName: 'download.priority',
          keyValue: null,
          desp: 'download bandwidth priority [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746354,
          keyName: 'download.min',
          keyValue: null,
          desp: 'The minimum download bandwidth corresponding to the priority..',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746355,
          keyName: 'download.max',
          keyValue: null,
          desp: 'The maximum download bandwidth corresponding to the priority..',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746356,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17704,
        },
        {
          id: 746357,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17704,
        },
      ],
    },
    add_device_group: {
      data: {
        id: 17705,
        title: 'add_device_group',
        desp: 'add client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","add_device_group",{"group_name":"test3", "priority":3, "clients":["11:22:33:44:55:66", "44:55:66:77:88:99"]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348476,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17705,
        },
        {
          id: 348477,
          keyName: 'priority',
          keyValue: null,
          desp: 'group priority [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17705,
        },
        {
          id: 348478,
          keyName: 'clients',
          keyValue: null,
          desp: 'list of clients.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17705,
        },
      ],
      results: [
        {
          id: 746358,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17705,
        },
        {
          id: 746359,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17705,
        },
      ],
    },
    delete_device_group: {
      data: {
        id: 17706,
        title: 'delete_device_group',
        desp: 'delete client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","delete_device_group",{"group_id":"2"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348479,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17706,
        },
      ],
      results: [
        {
          id: 746360,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17706,
        },
        {
          id: 746361,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17706,
        },
      ],
    },
    modify_device_group: {
      data: {
        id: 17707,
        title: 'modify_device_group',
        desp: 'Modify client group information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","modify_device_group",{"group_id":3,"group_name":"test4","priority":2,"clients":["11:22:33:44:55:66","44:55:66:77:88:99"]}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348480,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17707,
        },
        {
          id: 348481,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17707,
        },
        {
          id: 348482,
          keyName: 'priority',
          keyValue: null,
          desp: 'group priority[1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17707,
        },
        {
          id: 348483,
          keyName: 'clients',
          keyValue: null,
          desp: 'list of clients.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17707,
        },
      ],
      results: [
        {
          id: 746362,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17707,
        },
        {
          id: 746363,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17707,
        },
      ],
    },
    get_device_group: {
      data: {
        id: 17708,
        title: 'get_device_group',
        desp: 'get client group information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","get_device_group",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"group":[{"name":"test3","priority":"3","clients":["11:22:33:44:55:66","44:55:66:77:88:99"],"group_id":"1"}]}}',
      module_name: ['qos'],
      params: [],
      results: [
        {
          id: 746364,
          keyName: 'default_priority',
          keyValue: null,
          desp: 'default priority for other clients [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17708,
        },
        {
          id: 746365,
          keyName: 'groups',
          keyValue: null,
          desp: 'client group information',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17708,
        },
        {
          id: 746366,
          keyName: 'groups.name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17708,
        },
        {
          id: 746367,
          keyName: 'groups.group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17708,
        },
        {
          id: 746368,
          keyName: 'groups.priority',
          keyValue: null,
          desp: 'group priority [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17708,
        },
        {
          id: 746369,
          keyName: 'groups.clients',
          keyValue: null,
          desp: 'list of clients',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17708,
        },
        {
          id: 746370,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17708,
        },
        {
          id: 746371,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17708,
        },
      ],
    },
    set_default_priority: {
      data: {
        id: 17709,
        title: 'set_default_priority',
        desp: 'set the priority of other clients',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","set_default_priority",{"priority":3}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348484,
          keyName: 'priority',
          keyValue: null,
          desp: 'Priority of other clients [1: highest; 2: high; 3: middle; 4: low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17709,
        },
      ],
      results: [
        {
          id: 746372,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17709,
        },
        {
          id: 746373,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17709,
        },
      ],
    },
    get_client_list: {
      data: {
        id: 17710,
        title: 'get_client_list',
        desp: 'get client list {p.s:called when clicking to add client speed limit rule}',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","get_client_list",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"clients":[{"mac":"B6:B0:AC:3A:DA:0B","download":1,"upload":1}]}}',
      module_name: ['qos'],
      params: [],
      results: [
        {
          id: 746374,
          keyName: 'clients',
          keyValue: null,
          desp: 'list of clients.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17710,
        },
        {
          id: 746375,
          keyName: 'clients.mac',
          keyValue: null,
          desp: 'client mac address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17710,
        },
        {
          id: 746376,
          keyName: '?clients.upload',
          keyValue: null,
          desp: 'client upload rate(Unit: KB/s).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17710,
        },
        {
          id: 746377,
          keyName: '?clients.download',
          keyValue: null,
          desp: 'client download rate(Unit: KB/s).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17710,
        },
        {
          id: 746378,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17710,
        },
        {
          id: 746379,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17710,
        },
      ],
    },
    set_speed_limit_rule: {
      data: {
        id: 17711,
        title: 'set_speed_limit_rule',
        desp: 'set the speed limiting rules for client device',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","set_speed_limit_rule",{"mac":"18:c0:4d:dc:4f:cc","download":10,"upload":2}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348485,
          keyName: 'mac',
          keyValue: null,
          desp: 'client mac address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17711,
        },
        {
          id: 348486,
          keyName: 'upload',
          keyValue: null,
          desp: 'upload rate(Unit: KB/s){p.s:When it is 0, no speed limit}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17711,
        },
        {
          id: 348487,
          keyName: 'download',
          keyValue: null,
          desp: 'download rate(Unit: KB/s){p.s:When it is 0, no speed limit}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17711,
        },
      ],
      results: [
        {
          id: 746380,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17711,
        },
        {
          id: 746381,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17711,
        },
      ],
    },
    remove_speed_limit_rule: {
      data: {
        id: 17712,
        title: 'remove_speed_limit_rule',
        desp: 'remove the client device speed limit rule',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","remove_speed_limit_rule",{"mac":"18:c0:4d:dc:4f:cc"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348488,
          keyName: 'mac',
          keyValue: null,
          desp: 'client mac address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17712,
        },
      ],
      results: [
        {
          id: 746382,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid user,-5:No parameter found.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17712,
        },
        {
          id: 746383,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17712,
        },
      ],
    },
    set_config: {
      data: {
        id: 17713,
        title: 'set_config',
        desp: 'set qos config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","set_config",{"enable":true, "mode":1}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348489,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether to enable qos function [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17713,
        },
        {
          id: 348490,
          keyName: 'mode',
          keyValue: null,
          desp: 'qos startup mode [0: smart traffic manage; 1: munual traffic manage; 2: client speed limit]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17713,
        },
      ],
      results: [
        {
          id: 746384,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17713,
        },
        {
          id: 746385,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17713,
        },
      ],
    },
    get_config: {
      data: {
        id: 17714,
        title: 'get_config',
        desp: 'get qos config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","get_config",{}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"enable":true,"mode":"1"}}',
      module_name: ['qos'],
      params: [],
      results: [
        {
          id: 746386,
          keyName: 'enable',
          keyValue: null,
          desp: 'whether enable qos function is enable[true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17714,
        },
        {
          id: 746387,
          keyName: 'mode',
          keyValue: null,
          desp: 'qos startup mode [0: smart traffic manage; 1: munual traffic manage; 2: client speed limit]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17714,
        },
        {
          id: 746388,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17714,
        },
        {
          id: 746389,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17714,
        },
      ],
    },
    get_bandwidth_config: {
      data: {
        id: 17715,
        title: 'get_bandwidth_config',
        desp: 'get wan bandwidth and default priority',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","id":1,"params":["","qos","get_bandwidth_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"band_cfg":[{"enable":false,"download":"512","upload":"1024","interface":"wan"},{"enable":false,"download":"512","upload":"1024","interface":"wwan"}]}}',
      module_name: ['qos'],
      params: [],
      results: [
        {
          id: 746390,
          keyName: 'band_cfg',
          keyValue: null,
          desp: 'wan interfaces bandwidth config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17715,
        },
        {
          id: 746391,
          keyName: 'band_cfg.interface',
          keyValue: null,
          desp: 'wan interface name[wan; wwan; thetering; modem]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17715,
        },
        {
          id: 746392,
          keyName: 'band_cfg.enable',
          keyValue: null,
          desp: 'whether enable interface band limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17715,
        },
        {
          id: 746393,
          keyName: 'band_cfg.download',
          keyValue: null,
          desp: 'interface download limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17715,
        },
        {
          id: 746394,
          keyName: 'band_cfg.upload',
          keyValue: null,
          desp: 'interface upload limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17715,
        },
        {
          id: 746395,
          keyName: 'packet_priority',
          keyValue: null,
          desp: 'ACK/SYN/ICMP packets forward first, only return in mode 2(munual traffic manage mode) [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17715,
        },
        {
          id: 746396,
          keyName: 'work_mode',
          keyValue: null,
          desp: 'set diff serv mode, only return in mode 1(smart traffic manage) [0: normal; 1: voice; 2: av]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17715,
        },
        {
          id: 746397,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17715,
        },
        {
          id: 746398,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17715,
        },
      ],
    },
    set_bandwidth_config: {
      data: {
        id: 17716,
        title: 'set_bandwidth_config',
        desp: 'set wan bandwidth and default priority',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","qos","set_bandwidth_config",{"band_cfg":[{"enable":false,"download":512,"upload":1024,"interface":"wan"},{"enable":false,"download":512,"upload":1024,"interface":"wwan"}]}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348491,
          keyName: 'band_cfg',
          keyValue: null,
          desp: 'wan interfaces bandwidth config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17716,
        },
        {
          id: 348492,
          keyName: 'band_cfg.interface',
          keyValue: null,
          desp: 'wan interface name[wan; wwan; thetering; modem]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17716,
        },
        {
          id: 348493,
          keyName: 'band_cfg.enable',
          keyValue: null,
          desp: 'whether to enable interface band limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17716,
        },
        {
          id: 348494,
          keyName: 'band_cfg.download',
          keyValue: null,
          desp: 'interface download limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17716,
        },
        {
          id: 348495,
          keyName: 'band_cfg.upload',
          keyValue: null,
          desp: 'interface upload limit',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17716,
        },
      ],
      results: [
        {
          id: 746399,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17716,
        },
        {
          id: 746400,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17716,
        },
      ],
    },
    set_work_mode: {
      data: {
        id: 17717,
        title: 'set_work_mode',
        desp: 'set qos work mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","qos","set_work_mode",{"work_mode":1}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348496,
          keyName: 'work_mode',
          keyValue: null,
          desp: 'set diff serv mode, only avaliable in mode 0(smart traffic manage) [0: normal; 1: voice; 2: av]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17717,
        },
      ],
      results: [
        {
          id: 746401,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17717,
        },
        {
          id: 746402,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17717,
        },
      ],
    },
    set_packet_priority: {
      data: {
        id: 17718,
        title: 'set_packet_priority',
        desp: 'set ACK/SYN/ICMP packets forward first',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:21',
        create_time: '2024-11-19T17:55:21',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","qos","set_packet_priority",{"packet_priority":true}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['qos'],
      params: [
        {
          id: 348497,
          keyName: 'packet_priority',
          keyValue: null,
          desp: 'ACK/SYN/ICMP packets forward first, only avaliable in mode 1(munual traffic manage mode) [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17718,
        },
      ],
      results: [
        {
          id: 746403,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:Invalid parameter',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17718,
        },
        {
          id: 746404,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17718,
        },
      ],
    },
  },
  {
    module_name: ['repeater'],
    set_config: {
      data: {
        id: 17469,
        title: 'set_config',
        desp: 'Setup config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","set_config", {"auto": true, "lock_band": "2g"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [
        {
          id: 348889,
          keyName: 'auto',
          keyValue: null,
          desp: "Setup the enable swith to other saved networks (with this option enabled, router will try to connect to other saved network when the current WiFi doesn't have the Internet access)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17469,
        },
        {
          id: 348890,
          keyName: '?lock_band',
          keyValue: null,
          desp: 'Setup the repeater band (2g or 5g, null refers to auto)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17469,
        },
      ],
      results: [],
    },
    get_config: {
      data: {
        id: 17470,
        title: 'get_config',
        desp: 'Get the confirguations',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","get_config"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"auto": true, "lock_band": "2g"}}',
      module_name: ['repeater'],
      params: [],
      results: [
        {
          id: 747246,
          keyName: 'dfs_support',
          keyValue: null,
          desp: 'Get whether DFS is supported or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17470,
        },
        {
          id: 747247,
          keyName: 'auto',
          keyValue: null,
          desp: 'Get whether it is supported to switch to other saved networks or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17470,
        },
        {
          id: 747248,
          keyName: 'lock_band',
          keyValue: null,
          desp: 'Get the repeater band (2g or 5g, null refers to auto)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17470,
        },
        {
          id: 747249,
          keyName: 'macaddr',
          keyValue: null,
          desp: 'Get the default macaddr',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17470,
        },
      ],
    },
    connect: {
      data: {
        id: 17471,
        title: 'connect',
        desp: 'Connect an AP',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","connect",{"ssid":"test","key":"goodlife"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [
        {
          id: 348891,
          keyName: 'ssid',
          keyValue: null,
          desp: 'SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348892,
          keyName: '?identity',
          keyValue: null,
          desp: 'Setup the EAP identity (required when connect to WPA Enterprise)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348893,
          keyName: '?key',
          keyValue: null,
          desp: 'Set up the password (required when connect to excrypted WiFi)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348894,
          keyName: '?remember',
          keyValue: 'false',
          desp: 'Setup whether save the network or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17471,
        },
        {
          id: 348895,
          keyName: '?bssid',
          keyValue: null,
          desp: 'Setup whether lock the BSSID or not (null refers to not lock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348896,
          keyName: '?manual',
          keyValue: null,
          desp: 'Setup connect by manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17471,
        },
        {
          id: 348897,
          keyName: '?protocol',
          keyValue: 'dhcp',
          desp: 'Setup the Internet connection [DHCP ; static]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348898,
          keyName: '?ip',
          keyValue: null,
          desp: 'Setup the IP address (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348899,
          keyName: '?netmask',
          keyValue: null,
          desp: 'Setup the netmask (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348900,
          keyName: '?gateway',
          keyValue: null,
          desp: 'Setup the gateway (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348901,
          keyName: '?dns',
          keyValue: null,
          desp: 'Setup the DNS (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17471,
        },
        {
          id: 348902,
          keyName: '?mtu',
          keyValue: null,
          desp: 'Setup the MTU of the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
        {
          id: 348903,
          keyName: '?ttl',
          keyValue: null,
          desp: 'Setup the TTL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
        {
          id: 348904,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'Setup the HL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
        {
          id: 348905,
          keyName: '?portal',
          keyValue: "'manual'",
          desp: "Setup how to connect a WiFi with portal('manual' or 'auto')",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348906,
          keyName: 'disguise',
          keyValue: null,
          desp: 'Setup enabling disguises',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17471,
        },
        {
          id: 348907,
          keyName: '?macaddr',
          keyValue: null,
          desp: 'Setup macaddr and mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17471,
        },
        {
          id: 348908,
          keyName: '?macaddr.mode',
          keyValue: null,
          desp: "macaddr mode: ['default'; 'clone'; 'random']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348909,
          keyName: '?macaddr.macaddr',
          keyValue: null,
          desp: "macaddr value: required if macaddr.mode != 'default'",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348910,
          keyName: '?macaddr.update',
          keyValue: null,
          desp: "random macaddr update policy: ['none'; 'reboot'; 'time']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17471,
        },
        {
          id: 348911,
          keyName: '?macaddr.period',
          keyValue: null,
          desp: "required if macaddr.update is 'time', the value must be great than 0, the time unit is hour",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
        {
          id: 348912,
          keyName: '?auto_portal',
          keyValue: null,
          desp: 'Setup whether to enter the portal authentication mode automatically',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17471,
        },
      ],
      results: [
        {
          id: 747250,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
        {
          id: 747251,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17471,
        },
      ],
    },
    get_saved_ap_list: {
      data: {
        id: 17472,
        title: 'get_saved_ap_list',
        desp: 'Get the saved networks data',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","get_saved_ap_list"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"res": [{"ssid":"test", "key": "12132432423"}, {"ssid":"x", "key": "sefrsedtfsde"}]}}',
      module_name: ['repeater'],
      params: [],
      results: [
        {
          id: 747252,
          keyName: 'res',
          keyValue: null,
          desp: 'Get the list of saved networks',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17472,
        },
        {
          id: 747253,
          keyName: 'res.ssid',
          keyValue: null,
          desp: 'SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747254,
          keyName: '?res.bssid',
          keyValue: null,
          desp: 'Get whether the BSSID is locked or not (null refers to not locked)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747255,
          keyName: '?res.identity',
          keyValue: null,
          desp: 'Get the EAP identify (required for EAP enterprise)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747256,
          keyName: '?res.key',
          keyValue: null,
          desp: 'Get the password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747257,
          keyName: '?res.protocol',
          keyValue: 'dhcp',
          desp: 'Get the Internet connection type [DHCP ; static]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747258,
          keyName: '?res.ip',
          keyValue: null,
          desp: 'Get the IP address (static IP)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747259,
          keyName: '?res.netmask',
          keyValue: null,
          desp: 'Get the netmask (static IP)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747260,
          keyName: '?res.gateway',
          keyValue: null,
          desp: 'Get the gateway (static IP)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747261,
          keyName: '?res.dns',
          keyValue: null,
          desp: 'Get the DNS (static IP)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17472,
        },
        {
          id: 747262,
          keyName: '?res.mtu',
          keyValue: null,
          desp: 'Get the MTU of the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17472,
        },
        {
          id: 747263,
          keyName: '?res.ttl',
          keyValue: null,
          desp: 'Get the TTL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17472,
        },
        {
          id: 747264,
          keyName: '?res.ttl_ipv6',
          keyValue: null,
          desp: 'Get the HL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17472,
        },
        {
          id: 747265,
          keyName: '?res.manual',
          keyValue: null,
          desp: 'Get whether it is added by manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17472,
        },
        {
          id: 747266,
          keyName: '?macaddr',
          keyValue: null,
          desp: 'Setup macaddr and mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17472,
        },
        {
          id: 747267,
          keyName: '?macaddr.mode',
          keyValue: null,
          desp: "macaddr mode: ['default'; 'clone'; 'random']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747268,
          keyName: '?macaddr.macaddr',
          keyValue: null,
          desp: 'macaddr value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747269,
          keyName: '?macaddr.update',
          keyValue: null,
          desp: "random macaddr update policy: ['none'; 'reboot'; 'time']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17472,
        },
        {
          id: 747270,
          keyName: '?macaddr.period',
          keyValue: null,
          desp: "required if macaddr.update is 'time', the value must be great than 0, the time unit is hour",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17472,
        },
        {
          id: 747271,
          keyName: '?res.auto_portal',
          keyValue: null,
          desp: 'Get Whether to enter the portal authentication mode automatically',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17472,
        },
      ],
    },
    remove_saved_ap: {
      data: {
        id: 17473,
        title: 'remove_saved_ap',
        desp: 'Remove the saved network',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","remove_saved_ap",{"ssid":"test"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [
        {
          id: 348913,
          keyName: 'ssid',
          keyValue: null,
          desp: 'SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17473,
        },
      ],
      results: [],
    },
    disconnect: {
      data: {
        id: 17474,
        title: 'disconnect',
        desp: 'Disconnect the connected WiFi',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","disconnect"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [],
      results: [],
    },
    get_status: {
      data: {
        id: 17475,
        title: 'get_status',
        desp: 'Get the connection status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","get_status"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"state": 3, "ssid": "test", "bssid": "11:22:33:44:55:66", "channel": 12, "signal": 20, "ipv4": {"ip":"192.168.8.12/24", "gateway": "192.168.1.1"}, "ipv6": {"ip": ["fd4d:7210:ad91:10::/64"], "dns": ["fd5c:d00d:fa8e::/64"], "gateway":"fd5c:d00d:fa8e::/64"}}}',
      module_name: ['repeater'],
      params: [],
      results: [
        {
          id: 747272,
          keyName: 'state',
          keyValue: null,
          desp: 'Status [0: not used; 1: connecting; 2: connected; 3: connect failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17475,
        },
        {
          id: 747273,
          keyName: '?fail_type',
          keyValue: null,
          desp: 'Get the failed type [not-found; key]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747274,
          keyName: 'eap',
          keyValue: null,
          desp: 'Get whether it is EAP enterprise encryption',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747275,
          keyName: '?device',
          keyValue: null,
          desp: 'Get the WiFi device name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747276,
          keyName: '?bssid',
          keyValue: null,
          desp: 'Get the connected WiFi BSSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747277,
          keyName: '?channel',
          keyValue: null,
          desp: 'Get the connected WiFi channel',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17475,
        },
        {
          id: 747278,
          keyName: '?signal',
          keyValue: null,
          desp: 'Get the connected WiFi signal strength(dBm)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17475,
        },
        {
          id: 747279,
          keyName: '?ipv4',
          keyValue: null,
          desp: 'Get the IPv4 info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17475,
        },
        {
          id: 747280,
          keyName: 'ipv4.ip',
          keyValue: null,
          desp: 'Get the IPv4 address (CIDR)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747281,
          keyName: 'ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17475,
        },
        {
          id: 747282,
          keyName: 'ipv4.gateway',
          keyValue: null,
          desp: 'Get the IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747283,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'Get the IPv6 info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17475,
        },
        {
          id: 747284,
          keyName: 'ipv6.ip',
          keyValue: null,
          desp: 'Get the IPv6 address (CIDR)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17475,
        },
        {
          id: 747285,
          keyName: 'ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17475,
        },
        {
          id: 747286,
          keyName: 'ipv6.gateway',
          keyValue: null,
          desp: 'Get the IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747287,
          keyName: 'portal',
          keyValue: null,
          desp: 'Whether portal is detected',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747288,
          keyName: 'portal_url',
          keyValue: null,
          desp: 'Get the portal url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747289,
          keyName: 'bare_mode',
          keyValue: null,
          desp: 'Get the bare status',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747290,
          keyName: 'config',
          keyValue: null,
          desp: 'Current profile',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17475,
        },
        {
          id: 747291,
          keyName: 'config.ssid',
          keyValue: null,
          desp: 'SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747292,
          keyName: 'config.identity',
          keyValue: null,
          desp: 'The EAP identity (required when connect to WPA Enterprise)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747293,
          keyName: 'config.key',
          keyValue: null,
          desp: 'The password (required when connect to excrypted WiFi)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747294,
          keyName: 'config.remember',
          keyValue: null,
          desp: 'Whether save the network or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747295,
          keyName: 'config.bssid',
          keyValue: null,
          desp: 'Whether lock the BSSID or not (null refers to not lock)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747296,
          keyName: 'config.manual',
          keyValue: null,
          desp: 'Connect by manual',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747297,
          keyName: 'config.protocol',
          keyValue: 'dhcp',
          desp: 'Internet connection [DHCP ; static]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747298,
          keyName: 'config.ip',
          keyValue: null,
          desp: 'IP address (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747299,
          keyName: 'config.netmask',
          keyValue: null,
          desp: 'Netmask (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747300,
          keyName: 'config.gateway',
          keyValue: null,
          desp: 'Gateway (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747301,
          keyName: 'config.dns',
          keyValue: null,
          desp: 'DNS (required when set as static)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17475,
        },
        {
          id: 747302,
          keyName: 'config.portal',
          keyValue: "'manual'",
          desp: "How to connect a WiFi with portal('manual' or 'auto')",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747303,
          keyName: 'config.disguise',
          keyValue: null,
          desp: 'Enabling disguises',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
        {
          id: 747304,
          keyName: 'config.macaddr',
          keyValue: null,
          desp: 'macaddr and mode',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17475,
        },
        {
          id: 747305,
          keyName: 'config.macaddr.mode',
          keyValue: null,
          desp: "macaddr mode: ['default'; 'clone'; 'random']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747306,
          keyName: 'config.macaddr.macaddr',
          keyValue: null,
          desp: 'macaddr value',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747307,
          keyName: 'config.macaddr.update',
          keyValue: null,
          desp: "random macaddr update policy: ['none'; 'reboot'; 'time']",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17475,
        },
        {
          id: 747308,
          keyName: 'config.macaddr.period',
          keyValue: null,
          desp: "required if macaddr.update is 'time', the value must be great than 0, the time unit is hour",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17475,
        },
        {
          id: 747309,
          keyName: 'config.auto_portal',
          keyValue: null,
          desp: 'Whether to enter the portal authentication mode automatically',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17475,
        },
      ],
    },
    scan: {
      data: {
        id: 17476,
        title: 'scan',
        desp: 'Scan the APs',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","scan"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"res": [{"ssid":"GL-AR750S-4e2-5G","band":"5g","encryption":{"enabled":true,"description":"WPA2 PSK (CCMP)","auth_suites":["PSK"],"wpa":2,"pair_ciphers":["CCMP"], "uci": "psk2"},"bssid":"94:83:C4:0C:54:E3","channel":36,"signal":-60}]}}',
      module_name: ['repeater'],
      params: [
        {
          id: 348914,
          keyName: 'refresh',
          keyValue: null,
          desp: 'Perform a real scan, even if the scan interval has not expired',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17476,
        },
      ],
      results: [
        {
          id: 747310,
          keyName: 'res',
          keyValue: null,
          desp: 'Get the AP list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17476,
        },
        {
          id: 747311,
          keyName: 'res.ssid',
          keyValue: null,
          desp: 'SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17476,
        },
        {
          id: 747312,
          keyName: 'res.bssid',
          keyValue: null,
          desp: 'BSSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17476,
        },
        {
          id: 747313,
          keyName: 'res.signal',
          keyValue: null,
          desp: 'Get the signal strength',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17476,
        },
        {
          id: 747314,
          keyName: 'res.channel',
          keyValue: null,
          desp: 'Get the channel',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17476,
        },
        {
          id: 747315,
          keyName: 'res.dfs',
          keyValue: null,
          desp: 'Channel is dfs',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17476,
        },
        {
          id: 747316,
          keyName: 'res.band',
          keyValue: null,
          desp: 'Get the band (2g or 5g)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17476,
        },
        {
          id: 747317,
          keyName: 'res.saved',
          keyValue: null,
          desp: 'Get whether to save it or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17476,
        },
        {
          id: 747318,
          keyName: 'res.device',
          keyValue: null,
          desp: "Get the WiFi device (refer to 'wifi-device' in /etc/config/wireless)",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17476,
        },
        {
          id: 747319,
          keyName: 'res.encryption',
          keyValue: null,
          desp: 'Get the security info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17476,
        },
        {
          id: 747320,
          keyName: 'res.encryption.enabled',
          keyValue: null,
          desp: 'Get whether it is encrypted',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17476,
        },
        {
          id: 747321,
          keyName: 'res.encryption.description',
          keyValue: null,
          desp: 'Security description',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17476,
        },
        {
          id: 747322,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code: -1: in dfs cac state',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17476,
        },
        {
          id: 747323,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17476,
        },
      ],
    },
    enter_bare_mode: {
      data: {
        id: 17477,
        title: 'enter_bare_mode',
        desp: 'Enter bare mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","enter_bare_mode"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [],
      results: [],
    },
    exit_bare_mode: {
      data: {
        id: 17478,
        title: 'exit_bare_mode',
        desp: 'Exit bare mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:31',
        create_time: '2024-11-19T17:55:31',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","repeater","exit_bare_mode"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['repeater'],
      params: [],
      results: [],
    },
  },
  {
    module_name: ['rs485'],
    get_config: {
      data: {
        id: 17719,
        title: 'get_config',
        desp: 'get rs485 config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","rs485","get_config",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"device":"/dev/ttyS0","speed":9600,"mode":"8e1","timeout":500}}',
      module_name: ['rs485'],
      params: [],
      results: [
        {
          id: 746456,
          keyName: 'device',
          keyValue: null,
          desp: 'device port number',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17719,
        },
        {
          id: 746457,
          keyName: 'speed',
          keyValue: null,
          desp: 'speed [rangs: 0-115200]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17719,
        },
        {
          id: 746458,
          keyName: 'mode',
          keyValue: null,
          desp: 'mode [5/6/7/8][n/e/o/m/s][1/2] n: none e: even parity o: odd parity m:mark s:space',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17719,
        },
        {
          id: 746459,
          keyName: 'timeout',
          keyValue: null,
          desp: 'expire time: 0-65535ms',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17719,
        },
      ],
    },
    set_config: {
      data: {
        id: 17720,
        title: 'set_config',
        desp: 'set rs485 config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","set_config",{"device":"/dev/ttyS0","speed":9600,"mode":"8e1","timeout":500}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":[]}',
      module_name: ['rs485'],
      params: [
        {
          id: 348514,
          keyName: 'speed',
          keyValue: null,
          desp: 'Serial port baud rate :0-115200',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17720,
        },
        {
          id: 348515,
          keyName: 'timeout',
          keyValue: null,
          desp: 'overtime time :0-65535(ms)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17720,
        },
        {
          id: 348516,
          keyName: 'device',
          keyValue: null,
          desp: 'Device node name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17720,
        },
        {
          id: 348517,
          keyName: 'mode',
          keyValue: null,
          desp: 'Data bit,parity,stop bit. [5/6/7/8][n/e/o/m/s][1/2] n:none e:even parity o:odd parity m:mark s:space',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17720,
        },
      ],
      results: [],
    },
    read_modbus_data: {
      data: {
        id: 17721,
        title: 'read_modbus_data',
        desp: 'read modbus data',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","read_modbus_data",{"device_id":"16","func_code":"03","reg_addr_h":"00","reg_addr_l":"00","reg_len":"02"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":["2023-07-30 18:27:44.436 Command ==>16 03 00000002 C72C","2023-07-30 18:27:44.470 Response ==>16 03 0402D8013A 9D32"]}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348518,
          keyName: 'device_id',
          keyValue: null,
          desp: 'rs485 device id:1-247',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
        {
          id: 348519,
          keyName: 'func_code',
          keyValue: null,
          desp: 'func code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
        {
          id: 348520,
          keyName: 'reg_addr_h',
          keyValue: null,
          desp: 'RS485 terminal device register address high 8 bits',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
        {
          id: 348521,
          keyName: 'reg_addr_l',
          keyValue: null,
          desp: 'RS485 terminal device register address low 8 bits',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
        {
          id: 348522,
          keyName: 'reg_len',
          keyValue: null,
          desp: 'Number of registers,16 bits for one',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
      ],
      results: [
        {
          id: 746460,
          keyName: 'log',
          keyValue: null,
          desp: 'rs485 debug log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17721,
        },
        {
          id: 746461,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: device busy; -2: read timeout; -3: no data read]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17721,
        },
        {
          id: 746462,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17721,
        },
      ],
    },
    write_modbus_data: {
      data: {
        id: 17722,
        title: 'write_modbus_data',
        desp: 'write modbus data',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","write_modbus_data",{"device_id":"01","func_code":"04","reg_addr_h":"00","reg_addr_l":"00","reg_len":"02","data_w":"0000"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":["2023-07-31 06:59:56.156 Command ==>01 05 00000000 CDCA","2023-07-31 06:59:56.156 Response ==>nodata"]}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348523,
          keyName: 'device_id',
          keyValue: null,
          desp: 'rs485 device id:1-247',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
        {
          id: 348524,
          keyName: 'func_code',
          keyValue: null,
          desp: 'func code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
        {
          id: 348525,
          keyName: 'reg_addr_h',
          keyValue: null,
          desp: 'RS485 terminal device register address high 8 bits',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
        {
          id: 348526,
          keyName: 'reg_addr_l',
          keyValue: null,
          desp: 'RS485 terminal device register address low 8 bits',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
        {
          id: 348527,
          keyName: 'reg_len',
          keyValue: null,
          desp: 'Number of registers,16 bits for one',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
        {
          id: 348528,
          keyName: 'data_w',
          keyValue: null,
          desp: 'Data in hexadecimal format',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
      ],
      results: [
        {
          id: 746463,
          keyName: 'log',
          keyValue: null,
          desp: 'rs485 debug log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17722,
        },
        {
          id: 746464,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: device busy; -2: read timeout; -3: no data read; -4: write data too long; -5: data format error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17722,
        },
        {
          id: 746465,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17722,
        },
      ],
    },
    terminal: {
      data: {
        id: 17723,
        title: 'terminal',
        desp: 'terminal tool for reading and writing data',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","terminal",{"is_modbus":true,"type":"hex","data":"16040000000272EC"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":["2023-07-30 18:28:39.962 Command ==>16 04 00000002 72EC","2023-07-30 18:28:39.992 Response ==>16 04 0402D9013C 4D47"]}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348529,
          keyName: 'is_modbus',
          keyValue: null,
          desp: 'modbus data format[true/false]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17723,
        },
        {
          id: 348530,
          keyName: 'data',
          keyValue: null,
          desp: 'Data to be sent',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17723,
        },
        {
          id: 348531,
          keyName: 'type',
          keyValue: null,
          desp: 'command type[hex/str]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17723,
        },
      ],
      results: [
        {
          id: 746466,
          keyName: 'log',
          keyValue: null,
          desp: 'terminal debug log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17723,
        },
        {
          id: 746467,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-5: data format error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17723,
        },
        {
          id: 746468,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17723,
        },
      ],
    },
    set_forward_config: {
      data: {
        id: 17724,
        title: 'set_forward_config',
        desp: 'set network forward config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","set_forward_config",{"enable":true,"protocol":"mqtt","type":"str","address": "broker.emqx.io","port":1883, "enable_tls":true,"encry_mode":1, "cacrt": "-----BEGIN CERTIFICATE-----\\n......\\n-----END CERTIFICATE-----\\n","clicrt":"-----BEGIN CERTIFICATE-----\\n......\\n-----END CERTIFICATE-----\\n","clikey":"-----BEGIN RSA PRIVATE KEY-----\\n......\\n-----ENDRSA PRIVATE KEY-----\\n","username":"test","password":"123456","publish":"/glinet/rs485/data","subscribe":"/glinet/rs485/cmd","clientid":"glinetx300b","qos": 0,"interval":60}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":[]}',
      module_name: ['rs485'],
      params: [
        {
          id: 348532,
          keyName: 'enable',
          keyValue: null,
          desp: 'enable netwotk forward[true/false]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17724,
        },
        {
          id: 348533,
          keyName: 'protocol',
          keyValue: null,
          desp: 'network protocl[socket/mqtt]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348534,
          keyName: 'type',
          keyValue: null,
          desp: 'parse method[hex/str]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348535,
          keyName: '?address',
          keyValue: null,
          desp: 'server address(only needed when work in tcpc/mqtt mode)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348536,
          keyName: 'port',
          keyValue: null,
          desp: 'socket/mqtt server port[1-65535]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
        {
          id: 348537,
          keyName: '?enable_tls',
          keyValue: null,
          desp: 'enable mqtt tls encryption',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17724,
        },
        {
          id: 348538,
          keyName: '?encry_mode',
          keyValue: null,
          desp: 'encryption mode [0:one way; 1: two way]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
        {
          id: 348539,
          keyName: '?cacrt',
          keyValue: null,
          desp: 'ca certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348540,
          keyName: '?clicrt',
          keyValue: null,
          desp: 'client certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348541,
          keyName: '?clikey',
          keyValue: null,
          desp: 'client key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348542,
          keyName: '?key_password',
          keyValue: null,
          desp: 'private key password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348543,
          keyName: '?username',
          keyValue: null,
          desp: 'mqtt username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348544,
          keyName: '?password',
          keyValue: null,
          desp: 'mqtt password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348545,
          keyName: '?subscribe',
          keyValue: null,
          desp: 'subscribe topics',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348546,
          keyName: '?publish',
          keyValue: null,
          desp: 'publish topics',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348547,
          keyName: '?clientid',
          keyValue: null,
          desp: 'mqtt clientid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348548,
          keyName: '?qos',
          keyValue: null,
          desp: 'mqtt qos [0/1/2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
        {
          id: 348549,
          keyName: '?interval',
          keyValue: null,
          desp: 'mqtt heartbeat package inteval 0-65',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
        {
          id: 348550,
          keyName: '?mode',
          keyValue: null,
          desp: '[tcps/tcpc/udp] as server or client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
        {
          id: 348551,
          keyName: '?timeout',
          keyValue: null,
          desp: 'no communication within this time will disconnect :0-86400(s)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
      ],
      results: [
        {
          id: 746469,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-6: ERR_PARAMETER; -20: ERR_PORT]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17724,
        },
        {
          id: 746470,
          keyName: '?err_msg',
          keyValue: null,
          desp: '[ca missing; port:80 is in using, suggest use 32768]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17724,
        },
      ],
    },
    get_forward_config: {
      data: {
        id: 17725,
        title: 'get_forward_config',
        desp: 'get network forward config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","get_forward_config",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"enable":false,"type":"hex","protocol":"socket","socket_cfg":{"port":502,"mode":"tcps","timeout":60,"address":"0.0.0.0"},"mqtt_cfg":{"enable_tls":false,"clicrt":"-----BEGIN CERTIFICATE-----\\n......\\n-----END CERTIFICATE-----\\n","clikey":"-----BEGIN RSA PRIVATE KEY-----\\n......\\n-----END RSA PRIVATE KEY-----\\n","address":"broker.emqx.io","publish":"\\/glinet\\/rs485\\/data","password":"","username":"","port":1883,"cacrt":"-----BEGIN CERTIFICATE-----\\n......\\n-----END CERTIFICATE-----\\n","subscribe":"\\/glinet\\/rs485\\/cmd","interval":60,"clientid":"glinetx300b","qos":0,"encry_mode":0}}}',
      module_name: ['rs485'],
      params: [],
      results: [
        {
          id: 746471,
          keyName: 'enable',
          keyValue: null,
          desp: 'enable netwotk forward[true/false]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17725,
        },
        {
          id: 746472,
          keyName: 'protocol',
          keyValue: null,
          desp: 'network protocl[socket/mqtt]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746473,
          keyName: 'type',
          keyValue: null,
          desp: 'parse method[hex/str]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746474,
          keyName: '?mqtt_cfg',
          keyValue: null,
          desp: 'mqtt config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17725,
        },
        {
          id: 746475,
          keyName: '?mqtt_cfg.address',
          keyValue: null,
          desp: 'server address(only needed when work in tcpc/mqtt mode)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746476,
          keyName: '?mqtt_cfg.port',
          keyValue: null,
          desp: 'socket/mqtt server port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
        {
          id: 746477,
          keyName: '?mqtt_cfg.enable_tls',
          keyValue: null,
          desp: 'enable mqtt tls encryption',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17725,
        },
        {
          id: 746478,
          keyName: '?mqtt_cfg.encry_mode',
          keyValue: null,
          desp: 'encryption mode [0:one way; 1: two way]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
        {
          id: 746479,
          keyName: '?mqtt_cfg.cacrt',
          keyValue: null,
          desp: 'ca certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746480,
          keyName: '?mqtt_cfg.clicrt',
          keyValue: null,
          desp: 'client certificate',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746481,
          keyName: '?mqtt_cfg.clikey',
          keyValue: null,
          desp: 'client key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746482,
          keyName: '?mqtt_cfg.username',
          keyValue: null,
          desp: 'mqtt username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746483,
          keyName: '?mqtt_cfg.password',
          keyValue: null,
          desp: 'mqtt password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746484,
          keyName: '?mqtt_cfg.key_password',
          keyValue: null,
          desp: 'private key password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746485,
          keyName: '?mqtt_cfg.subscribe',
          keyValue: null,
          desp: 'subscribe topics',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746486,
          keyName: '?mqtt_cfg.publish',
          keyValue: null,
          desp: 'publish topics',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746487,
          keyName: '?mqtt_cfg.clientid',
          keyValue: null,
          desp: 'mqtt clientid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746488,
          keyName: '?mqtt_cfg.qos',
          keyValue: null,
          desp: 'mqtt qos [0/1/2]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
        {
          id: 746489,
          keyName: '?mqtt_cfg.interval',
          keyValue: null,
          desp: 'mqtt heartbeat package inteval 0-65',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
        {
          id: 746490,
          keyName: '?socket_cfg',
          keyValue: null,
          desp: 'socket config',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17725,
        },
        {
          id: 746491,
          keyName: '?socket_cfg.address',
          keyValue: null,
          desp: 'server address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746492,
          keyName: '?socket_cfg.mode',
          keyValue: null,
          desp: '[tcps/tcpc/udp] as server or client',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17725,
        },
        {
          id: 746493,
          keyName: '?socket_cfg.port',
          keyValue: null,
          desp: 'socket port 0-65536',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
        {
          id: 746494,
          keyName: '?socket_cfg.timeout',
          keyValue: null,
          desp: 'no communication within this time will disconnect :0-86400(s)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17725,
        },
      ],
    },
    get_forward_log: {
      data: {
        id: 17726,
        title: 'get_forward_log',
        desp: 'get forward log',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","get_forward_log",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":"2023-07-30 20:43:59.595 Received from MQTT (\\/glinet\\/rs485\\/cmd) ==> 16040000000272EC\\n2023-07-30 20:43:59.607 Commanded to Serial Port ==> 16040000000272EC\\n2023-07-30 20:43:59.650 Responded from Serial Port ==> 16040402B7011C2D42\\n2023-07-30 20:43:59.663 Published to MQTT (\\/glinet\\/rs485\\/data) ==> 16040402B7011C2D42\\n"}}',
      module_name: ['rs485'],
      params: [],
      results: [
        {
          id: 746495,
          keyName: 'log',
          keyValue: null,
          desp: 'forward log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17726,
        },
      ],
    },
    get_connect_status: {
      data: {
        id: 17727,
        title: 'get_connect_status',
        desp: 'get network connection status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","get_connect_status",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"status_s":false,"status_m":false}}',
      module_name: ['rs485'],
      params: [],
      results: [
        {
          id: 746496,
          keyName: 'status_s',
          keyValue: null,
          desp: 'return rs485 socket connection status.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17727,
        },
        {
          id: 746497,
          keyName: 'status_m',
          keyValue: null,
          desp: 'return rs485 mqtt connection status.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17727,
        },
      ],
    },
    get_tcp_clients: {
      data: {
        id: 17728,
        title: 'get_tcp_clients',
        desp: 'get tcp client list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","get_tcp_clients",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"tcp_clients":[{"port":50995,"address":"192.168.8.106"},{"port":50995,"address":"192.168.8.106"}]}}',
      module_name: ['rs485'],
      params: [],
      results: [
        {
          id: 746498,
          keyName: '?tcp_clients',
          keyValue: null,
          desp: 'tcp client list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17728,
        },
        {
          id: 746499,
          keyName: '?tcp_clients.address',
          keyValue: null,
          desp: 'client IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17728,
        },
        {
          id: 746500,
          keyName: '?tcp_clients.port',
          keyValue: null,
          desp: 'client port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17728,
        },
      ],
    },
    debug_socket: {
      data: {
        id: 17729,
        title: 'debug_socket',
        desp: 'test forward message to socket',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","debug_socket",{"address":"192.168.8.106", "port":502,"type":"hex","data":"16040000000272EC"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":"2023-07-30 18:24:38.067 Sent to 192.168.8.106:59920 ==> 16 04 04 02 EE 01 3B BD 4B"}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348552,
          keyName: 'address',
          keyValue: null,
          desp: 'target IP address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17729,
        },
        {
          id: 348553,
          keyName: 'port',
          keyValue: null,
          desp: 'target port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17729,
        },
        {
          id: 348554,
          keyName: 'type',
          keyValue: null,
          desp: 'command type[hex/str]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17729,
        },
        {
          id: 348555,
          keyName: 'data',
          keyValue: null,
          desp: 'debug data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17729,
        },
      ],
      results: [
        {
          id: 746501,
          keyName: 'log',
          keyValue: null,
          desp: 'debug log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17729,
        },
      ],
    },
    debug_mqtt: {
      data: {
        id: 17730,
        title: 'debug_mqtt',
        desp: 'test forward message to mqtt',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","debug_mqtt",{"topic":"/glinet/rs485/data","type":"hex","data":"16040000000272EC"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"log":"2023-07-30 20:34:34.241 Published to \\/glinet\\/rs485\\/data ==> 16 04 04 02 C3 01 1C 6D 58"}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348556,
          keyName: 'topic',
          keyValue: null,
          desp: 'topic to publish',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17730,
        },
        {
          id: 348557,
          keyName: 'type',
          keyValue: null,
          desp: 'command type[hex/str]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17730,
        },
        {
          id: 348558,
          keyName: 'data',
          keyValue: null,
          desp: 'debug data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17730,
        },
      ],
      results: [
        {
          id: 746502,
          keyName: 'log',
          keyValue: null,
          desp: 'debug log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17730,
        },
      ],
    },
    glcould_tool: {
      data: {
        id: 17731,
        title: 'glcould_tool',
        desp: 'glcloud tool for rs485',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","rs485","glcould_tool",{"cmd":"010300000002C408"}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"data":"010304020100FD6BCA"}}',
      module_name: ['rs485'],
      params: [
        {
          id: 348559,
          keyName: 'cmd',
          keyValue: null,
          desp: 'rs485 cmd',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17731,
        },
      ],
      results: [
        {
          id: 746503,
          keyName: 'data',
          keyValue: null,
          desp: 'rs485 device return data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17731,
        },
        {
          id: 746504,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: device busy; -3: no data read; -5: data format error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17731,
        },
        {
          id: 746505,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17731,
        },
      ],
    },
  },
  {
    module_name: ['rtty'],
    get_config: {
      data: {
        id: 17732,
        title: 'get_config',
        desp: 'get current settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","rtty","get_config"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ssh_enabled": true, "web_enabled": true}}',
      module_name: ['rtty'],
      params: [],
      results: [
        {
          id: 746506,
          keyName: 'ssh_enabled',
          keyValue: null,
          desp: 'whether ssh is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17732,
        },
        {
          id: 746507,
          keyName: 'web_enabled',
          keyValue: null,
          desp: 'whether web is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17732,
        },
      ],
    },
    set_config: {
      data: {
        id: 17733,
        title: 'set_config',
        desp: 'set rtty configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","rtty","set_config", {"ssh_enable": true, "web_enable": true}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ssh_enabled": true, "web_enabled": true}}',
      module_name: ['rtty'],
      params: [
        {
          id: 348560,
          keyName: 'ssh_enable',
          keyValue: null,
          desp: 'whether to enable ssh',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17733,
        },
        {
          id: 348561,
          keyName: 'web_enable',
          keyValue: null,
          desp: 'whether to enable web',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17733,
        },
      ],
      results: [
        {
          id: 746508,
          keyName: 'ssh_enabled',
          keyValue: null,
          desp: 'whether ssh is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17733,
        },
        {
          id: 746509,
          keyName: 'web_enabled',
          keyValue: null,
          desp: 'whether web is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17733,
        },
      ],
    },
    run: {
      data: {
        id: 17734,
        title: 'run',
        desp: 'enable rtty',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","rtty","run", {"token":"sfsedtretger124233as", "host": "192.168.3.1", "port":5912, "ssl": true}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['rtty'],
      params: [
        {
          id: 348562,
          keyName: 'token',
          keyValue: null,
          desp: 'token',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17734,
        },
        {
          id: 348563,
          keyName: 'host',
          keyValue: null,
          desp: 'server address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17734,
        },
        {
          id: 348564,
          keyName: 'port',
          keyValue: null,
          desp: 'server port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17734,
        },
        {
          id: 348565,
          keyName: 'ssl',
          keyValue: null,
          desp: 'whether to enable ssl on the server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17734,
        },
      ],
      results: [
        {
          id: 746510,
          keyName: 'err_code',
          keyValue: null,
          desp: 'error code [1: the device has no valid DDNS ID; 2: rtty failed to connect to server]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17734,
        },
        {
          id: 746511,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17734,
        },
      ],
    },
    stop: {
      data: {
        id: 17735,
        title: 'stop',
        desp: 'disable rtty',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:22',
        create_time: '2024-11-19T17:55:22',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","rtty","stop"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['rtty'],
      params: [],
      results: [],
    },
  },
  {
    module_name: ['s2s'],
    enable_echo_server: {
      data: {
        id: 17736,
        title: 'enable_echo_server',
        desp: 'enable echo listening server for testing',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","s2s","enable_echo_server",{"port":"51820"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['s2s'],
      params: [
        {
          id: 348566,
          keyName: 'port',
          keyValue: null,
          desp: 'Set the server listening port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17736,
        },
      ],
      results: [
        {
          id: 746512,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,1:Parameter error,2:File does not exist,3:uci Initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17736,
        },
        {
          id: 746513,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17736,
        },
      ],
    },
    generate_wg_genkey: {
      data: {
        id: 17737,
        title: 'generate_wg_genkey',
        desp: 'Generate a new private key and return its public key.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","s2s","generate_wg_genkey",{}],"id":1}',
      out_example:
        '{"id": 1,"jsonrpc": "2.0","result": {"public_key": "RYqIcKGF2Zs1obKDOqmxXH/WsnYn4/OwnExQXBgN7xE="}}',
      module_name: ['s2s'],
      params: [],
      results: [
        {
          id: 746514,
          keyName: 'public_key',
          keyValue: null,
          desp: 'Public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17737,
        },
        {
          id: 746515,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,3:uci Initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17737,
        },
        {
          id: 746516,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17737,
        },
      ],
    },
    set_config: {
      data: {
        id: 17738,
        title: 'set_config',
        desp: 'Push the complete WireGuard settings file.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc": "2.0","method": "call","params": ["","s2s","set_config",{"lan_ip": "192.168.9.1","interface": {"mtu": "1560","listen_port": "51820","address": ["10.0.0.1","0:0:0:0:0:ffff:a00:1"]},"peer": [{"public_key": "4Mss1+aEQMh4z8Ykgs/pwazmgjhWEzil9QreL2HZoEc=","allowed_ips": ["192.168.8.0/24","192.168.9.0/24"]},{"public_key": "6I13DX9LcF5ON15vYOfceSk3PzS2JjLyG0BbkspzDXc=","allowed_ips": ["192.168.10.0/24","0:0:0:0:0:ffff:c0a8:a00"]}]}],"id": 1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['s2s'],
      params: [
        {
          id: 348567,
          keyName: '?lan_ip',
          keyValue: null,
          desp: 'Lan ip.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348568,
          keyName: '?restart',
          keyValue: null,
          desp: 'Whether to restart the WireGuard service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17738,
        },
        {
          id: 348569,
          keyName: 'interface',
          keyValue: null,
          desp: 'WireGuard interface information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17738,
        },
        {
          id: 348570,
          keyName: '?interface.private_key',
          keyValue: null,
          desp: 'Private key.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348571,
          keyName: 'interface.address',
          keyValue: null,
          desp: 'Address.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17738,
        },
        {
          id: 348572,
          keyName: '?interface.listen_port',
          keyValue: null,
          desp: 'Listening port.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348573,
          keyName: '?interface.mtu',
          keyValue: null,
          desp: 'Mtu.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348574,
          keyName: '?interface.metric',
          keyValue: null,
          desp: 'Metric.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348575,
          keyName: '?interface.fwmark',
          keyValue: null,
          desp: 'Fwmark.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348576,
          keyName: 'peer',
          keyValue: null,
          desp: 'Peer information of WireGuard.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17738,
        },
        {
          id: 348577,
          keyName: 'peer.public_key',
          keyValue: null,
          desp: 'Public key.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348578,
          keyName: 'peer.allowed_ips',
          keyValue: null,
          desp: 'Encryption Key Routing.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17738,
        },
        {
          id: 348579,
          keyName: '?peer.endpoint',
          keyValue: null,
          desp: 'Endpoint.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348580,
          keyName: '?peer.keepalive',
          keyValue: null,
          desp: 'Keepalive interval(0 is disabled).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
        {
          id: 348581,
          keyName: '?peer.preshared_key',
          keyValue: null,
          desp: 'Pre-shared key.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
      ],
      results: [
        {
          id: 746517,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,1:Parameter error,2:File does not exist,3:uci Initialization error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17738,
        },
        {
          id: 746518,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17738,
        },
      ],
    },
    remove_config: {
      data: {
        id: 17739,
        title: 'remove_config',
        desp: 'Delete the WireGuard configuration',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","s2s","remove_config",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['s2s'],
      params: [],
      results: [
        {
          id: 746519,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17739,
        },
        {
          id: 746520,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17739,
        },
      ],
    },
    start_wg: {
      data: {
        id: 17740,
        title: 'start_wg',
        desp: 'Start the WireGuard service',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","s2s","start_wg",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['s2s'],
      params: [],
      results: [
        {
          id: 746521,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17740,
        },
        {
          id: 746522,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17740,
        },
      ],
    },
    stop_wg: {
      data: {
        id: 17741,
        title: 'stop_wg',
        desp: 'Stop the WireGuard service',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","s2s","stop_wg",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['s2s'],
      params: [],
      results: [
        {
          id: 746523,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17741,
        },
        {
          id: 746524,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17741,
        },
      ],
    },
    get_status: {
      data: {
        id: 17742,
        title: 'get_status',
        desp: 'Get WireGuard service status.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","s2s","get_status",{}],"id":1}',
      out_example: '{"id": 1,"jsonrpc": "2.0","result": {"status": ""}}',
      module_name: ['s2s'],
      params: [],
      results: [
        {
          id: 746525,
          keyName: 'status',
          keyValue: null,
          desp: 'Show the WireGuard Status',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17742,
        },
        {
          id: 746526,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17742,
        },
        {
          id: 746527,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17742,
        },
      ],
    },
  },
  {
    module_name: ['sms-forward'],
    get_config: {
      data: {
        id: 17743,
        title: 'get_config',
        desp: 'Get sms-forward settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","sms-forward","get_config",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"phone":{"enable":true,"phone_numbers":[{"country_code":"86","phone_number":"14785296323"},{"country_code":"83","phone_number":"12345677412"}]},"email":{"password":"1234567abC","emails":["12345678963@gmail.com","12345678941@gmail.com"],"subject":"GL-X750","encryption":1,"enable":true,"smtp":"smtp.gmail.com:465","account":"12396325841@gmail.com"}}}',
      module_name: ['sms-forward'],
      params: [],
      results: [
        {
          id: 746528,
          keyName: 'phone',
          keyValue: null,
          desp: 'Mobile phone number related settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17743,
        },
        {
          id: 746529,
          keyName: 'phone.enable',
          keyValue: null,
          desp: 'Enable phone number forwarding',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17743,
        },
        {
          id: 746530,
          keyName: 'phone.phone_numbers',
          keyValue: null,
          desp: 'Target mobile number list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17743,
        },
        {
          id: 746531,
          keyName: 'phone.phone_numbers.country_code',
          keyValue: null,
          desp: 'Country code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746532,
          keyName: 'phone.phone_numbers.phone_number',
          keyValue: null,
          desp: 'Phone number.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746533,
          keyName: 'email',
          keyValue: null,
          desp: 'Mailbox related settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17743,
        },
        {
          id: 746534,
          keyName: 'email.enable',
          keyValue: null,
          desp: 'Enable mailbox forwarding',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17743,
        },
        {
          id: 746535,
          keyName: 'email.emails',
          keyValue: null,
          desp: 'Target email list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17743,
        },
        {
          id: 746536,
          keyName: 'email.account',
          keyValue: null,
          desp: 'This server email account name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746537,
          keyName: 'email.password',
          keyValue: null,
          desp: 'This server email account password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746538,
          keyName: 'email.encryption',
          keyValue: null,
          desp: 'Encryption[0: none , 1: ssl, 2: startTLS ].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17743,
        },
        {
          id: 746539,
          keyName: 'email.smtp',
          keyValue: null,
          desp: 'Smtp.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746540,
          keyName: 'email.subject',
          keyValue: null,
          desp: 'This server email subject.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
        {
          id: 746541,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17743,
        },
        {
          id: 746542,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error messag',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17743,
        },
      ],
    },
    set_phone_number: {
      data: {
        id: 17744,
        title: 'set_phone_number',
        desp: 'set sms-forward phone number',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","sms-forward","set_phone_number",{"enable":true,"phone_numbers":[{"country_code":"86","phone_number":"14785296323"},{"country_code":"83","phone_number":"12345677412"}]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['sms-forward'],
      params: [
        {
          id: 348582,
          keyName: 'enable',
          keyValue: null,
          desp: 'Enable phone number forwarding',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17744,
        },
        {
          id: 348583,
          keyName: 'phone_numbers',
          keyValue: null,
          desp: 'Target mobile number list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17744,
        },
        {
          id: 348584,
          keyName: 'phone_numbers.country_code',
          keyValue: null,
          desp: 'Country code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17744,
        },
        {
          id: 348585,
          keyName: 'phone_numbers.phone_number',
          keyValue: null,
          desp: 'Phone number.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17744,
        },
      ],
      results: [
        {
          id: 746543,
          keyName: '?err_code',
          keyValue: null,
          desp: "Error code,-1:Forward file don't exist.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17744,
        },
        {
          id: 746544,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17744,
        },
      ],
    },
    set_email: {
      data: {
        id: 17745,
        title: 'set_email',
        desp: 'set sms-forward email',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:23',
        create_time: '2024-11-19T17:55:23',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","sms-forward","set_email",{"enable":true,"emails":["12345678963@gmail.com","12345678941@gmail.com"],"account":"12396325841@gmail.com","password":"1234567abC","encryption":1,"smtp":"smtp.gmail.com:465","subject":"GL-X750"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['sms-forward'],
      params: [
        {
          id: 348586,
          keyName: 'enable',
          keyValue: null,
          desp: 'Enable mailbox forwarding',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17745,
        },
        {
          id: 348587,
          keyName: 'emails',
          keyValue: null,
          desp: 'Target email list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17745,
        },
        {
          id: 348588,
          keyName: 'account',
          keyValue: null,
          desp: 'This server email account name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17745,
        },
        {
          id: 348589,
          keyName: 'password',
          keyValue: null,
          desp: 'This server email account password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17745,
        },
        {
          id: 348590,
          keyName: 'subject',
          keyValue: null,
          desp: 'This server email subject.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17745,
        },
        {
          id: 348591,
          keyName: 'encryption',
          keyValue: null,
          desp: 'Encryption[0: none , 1: ssl, 2: startTLS ].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17745,
        },
        {
          id: 348592,
          keyName: 'smtp',
          keyValue: null,
          desp: 'Smtp.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17745,
        },
      ],
      results: [
        {
          id: 746545,
          keyName: '?err_code',
          keyValue: null,
          desp: "Error code,-1:Forward file don't exist, -2:ssmtp don't exist.",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17745,
        },
        {
          id: 746546,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17745,
        },
      ],
    },
  },
  {
    module_name: ['switch-button'],
    get_funcs: {
      data: {
        id: 17746,
        title: 'get_funcs',
        desp: 'Get function list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","switch-button","get_funcs"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"funcs": ["wireguard", "openvpn", "adguardhome"]}}',
      module_name: ['switch-button'],
      params: [],
      results: [
        {
          id: 746547,
          keyName: 'funcs',
          keyValue: null,
          desp: 'Function list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17746,
        },
      ],
    },
    get_config: {
      data: {
        id: 17747,
        title: 'get_config',
        desp: 'Get the current settings function',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","switch-button","get_config"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"func": "none"}}',
      module_name: ['switch-button'],
      params: [],
      results: [
        {
          id: 746548,
          keyName: 'func',
          keyValue: null,
          desp: 'Current settings function, "none" means not set',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17747,
        },
      ],
    },
    check_sync_status: {
      data: {
        id: 17748,
        title: 'check_sync_status',
        desp: 'check if the button status is synchronized with the web status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","switch-button","check_sync_status",{"func":"openvpn"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"sync_status": 1}}',
      module_name: ['switch-button'],
      params: [
        {
          id: 348593,
          keyName: 'func',
          keyValue: null,
          desp: 'Function to be set(Optional values are obtained from the get_funcs interface),Currently optional openvpn,wireguard,adguardhome',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17748,
        },
      ],
      results: [
        {
          id: 746549,
          keyName: 'sync_status',
          keyValue: null,
          desp: 'The button status and the web status synchronized status,1 means is synchronized',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17748,
        },
      ],
    },
    set_config: {
      data: {
        id: 17749,
        title: 'set_config',
        desp: 'Get the current settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","switch-button","set_config",{"func":"openvpn","sync":true}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"func": "openvpn"}}',
      module_name: ['switch-button'],
      params: [
        {
          id: 348594,
          keyName: 'func',
          keyValue: null,
          desp: 'Function to be set(Optional values are obtained from the get_funcs interface),Currently optional openvpn,wireguard,adguardhome',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17749,
        },
        {
          id: 348595,
          keyName: 'sync',
          keyValue: null,
          desp: 'web confirm func status whether to switch the switch status',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17749,
        },
      ],
      results: [
        {
          id: 746550,
          keyName: 'func',
          keyValue: null,
          desp: 'Currently settings',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17749,
        },
      ],
    },
  },
  {
    module_name: ['system'],
    get_status: {
      data: {
        id: 17750,
        title: 'get_status',
        desp: 'Get the basic status of system, network, services, etc.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_status"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"network":[{"online":false,"up":false,"interface":"wan"},{"online":false,"up":false,"interface":"wwan"},{"online":false,"up":false,"interface":"tethering"},{"online":false,"up":false,"interface":"modem_1_1_2"}],"wifi":[{"guest":false,"ssid":"GL-XE300-49a","up":true,"channel":0,"band":"2G","name":"default_radio0","passwd":"goodlife"},{"guest":true,"ssid":"GL-XE300-49a-Guest","up":false,"channel":0,"band":"2G","name":"guest2g","passwd":"goodlife"}],"service":[{"name":"wgclient","status":0},{"name":"wgserver","status":0},{"name":"ovpnclient","status":0},{"name":"ovpnserver","status":0},{"name":"tor","status":0}],"client":[{"wireless_total":0,"cable_total":1}],"system":{"lan_ip":"192.168.8.1","lan_netmask":"255.255.255.0","guest_ip":"192.168.9.1","guest_netmask":"255.255.255.0","flash_total":106278912,"memory_total":126943232,"memory_free":78471168,"memory_buff_cache":69005248,"ipv6_enabled":false,"ddns_enabled":false,"netnat_enabled":true,"uptime":111,"load_average":[2.01,0.89,0.33],"flash_free":105918464,"flash_app":1025,"mode":0,"mcu":{"charge_cnt":49,"temperature":27.6,"charge_percent":100,"charging_status":1},"cpu":{"temperature":82},"timestamp":1613402877}}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746551,
          keyName: 'system',
          keyValue: null,
          desp: 'Basic status information of the system.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17750,
        },
        {
          id: 746552,
          keyName: 'system.mode',
          keyValue: null,
          desp: 'Working mode of the system [0: router mode; 1: WDS mode; 2: relay (extender) mode; 3: mesh mode; 4: access point mode; 5: unknown; 6: passthrough mode] , default is 0.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746553,
          keyName: 'system.timestamp',
          keyValue: null,
          desp: 'System timestamp (Unit: Seconds).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746554,
          keyName: 'system.tzoffset',
          keyValue: null,
          desp: 'System time-zone offset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746555,
          keyName: 'system.uptime',
          keyValue: null,
          desp: 'System uptime (Unit: Seconds).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746556,
          keyName: 'system.load_average',
          keyValue: null,
          desp: 'CPU load averages in system. it returns an array, the array is fixed with 3 numbers that represent the average load of 1, 5, and 15 minutes in sequence.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17750,
        },
        {
          id: 746557,
          keyName: 'system.memory_total',
          keyValue: null,
          desp: 'Total memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746558,
          keyName: 'system.memory_free',
          keyValue: null,
          desp: 'Free memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746559,
          keyName: 'system.memory_buff_cache',
          keyValue: null,
          desp: 'Buffered memory and cached memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746560,
          keyName: 'system.flash_total',
          keyValue: null,
          desp: 'Total flash storage space in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746561,
          keyName: 'system.flash_free',
          keyValue: null,
          desp: 'Available flash storage space in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746562,
          keyName: 'system.flash_app',
          keyValue: null,
          desp: 'The flash storage space used by the application in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746563,
          keyName: 'system.lan_ip',
          keyValue: null,
          desp: 'LAN IP.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746564,
          keyName: 'system.lan_netmask',
          keyValue: null,
          desp: 'Subnet mask of LAN.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746565,
          keyName: 'system.guest_ip',
          keyValue: null,
          desp: 'GUEST IP.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746566,
          keyName: 'system.guest_netmask',
          keyValue: null,
          desp: 'Subnet mask of Guest.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746567,
          keyName: 'system.ipv6_enabled',
          keyValue: null,
          desp: 'Enabled status of IPv6 service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746568,
          keyName: 'system.ddns_enabled',
          keyValue: null,
          desp: 'Enabled status of DDNS service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746569,
          keyName: 'system.netnat_enabled',
          keyValue: null,
          desp: 'Enabled status of hardware acceleration service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746570,
          keyName: '?system.mcu',
          keyValue: null,
          desp: 'Status of mcu in the system.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17750,
        },
        {
          id: 746571,
          keyName: '?system.mcu.temperature',
          keyValue: null,
          desp: 'Battery temperature.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746572,
          keyName: '?system.mcu.charge_percent',
          keyValue: null,
          desp: 'Battery percentage.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746573,
          keyName: '?system.mcu.charging_status',
          keyValue: null,
          desp: 'Battery charging status[0: not charged; 1: charging].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746574,
          keyName: '?system.mcu.charge_cnt',
          keyValue: null,
          desp: 'Total of battery charge cycles.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746575,
          keyName: '?system.mcu.abnormal',
          keyValue: null,
          desp: 'Battery is abnormal or not inserted.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746576,
          keyName: '?system.cpu.temperature',
          keyValue: null,
          desp: 'CPU temperature.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746577,
          keyName: 'network',
          keyValue: null,
          desp: 'Status of network interfaces in the system.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17750,
        },
        {
          id: 746578,
          keyName: 'network.interface',
          keyValue: null,
          desp: 'Network interface name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746579,
          keyName: 'network.up',
          keyValue: null,
          desp: 'Up status of the network interface',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746580,
          keyName: 'network.online',
          keyValue: null,
          desp: 'Whether the network interface has access to the Internet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746581,
          keyName: 'service',
          keyValue: null,
          desp: 'Working status of system services, including VPN, AdguardHome, etc.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17750,
        },
        {
          id: 746582,
          keyName: 'service.name',
          keyValue: null,
          desp: 'Service name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746583,
          keyName: 'service.status',
          keyValue: null,
          desp: 'Enabled status of the service [0: Disabled; 1: Connected/Running; 2: Enabled but Connecting].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746584,
          keyName: '?service.group_id',
          keyValue: null,
          desp: 'The group_id of the group to which the currently used OpenVPN or WireGuard client configuration file belongs.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746585,
          keyName: '?service.client_id',
          keyValue: null,
          desp: 'The client_id of the currently used OpenVPN client configuration file.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746586,
          keyName: '?service.peer_id',
          keyValue: null,
          desp: 'The peer_id of the currently used WireGuard client configuration file.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746587,
          keyName: 'wifi',
          keyValue: null,
          desp: 'Basic Wi-Fi status of the system.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17750,
        },
        {
          id: 746588,
          keyName: 'wifi.ssid',
          keyValue: null,
          desp: 'SSID of the Wi-Fi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746589,
          keyName: 'wifi.name',
          keyValue: null,
          desp: 'Interface name of the Wi-Fi, as a unique identifier for the Wi-Fi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746590,
          keyName: 'wifi.band',
          keyValue: null,
          desp: 'Band of the Wi-Fi [2G: 2.4GHz; 5G: 5GHz; MLO: MLD].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746591,
          keyName: 'wifi.mld',
          keyValue: null,
          desp: 'Whether the Wi-Fi is mlo wifi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746592,
          keyName: 'wifi.channel',
          keyValue: null,
          desp: 'Channel of the Wi-Fi (0 is auto).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746593,
          keyName: 'wifi.guest',
          keyValue: null,
          desp: 'Whether the Wi-Fi belongs to the guest network.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746594,
          keyName: 'wifi.up',
          keyValue: null,
          desp: 'Enabled status of the Wi-Fi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17750,
        },
        {
          id: 746595,
          keyName: '?wifi.passwd',
          keyValue: null,
          desp: 'Password of the Wi-Fi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
        {
          id: 746596,
          keyName: 'client',
          keyValue: null,
          desp: 'Total number of online clients.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17750,
        },
        {
          id: 746597,
          keyName: 'client.cable_total',
          keyValue: null,
          desp: 'The total number of wired clients online.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746598,
          keyName: 'client.wireless_total',
          keyValue: null,
          desp: 'The total number of wireless clients online.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746599,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get information].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17750,
        },
        {
          id: 746600,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17750,
        },
      ],
    },
    get_info: {
      data: {
        id: 17751,
        title: 'get_info',
        desp: 'Get the basic information of the device, including model, firmware version, hardware version, etc.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_info"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"mac":"94:83:C4:0C:74:9A","hardware_version":"","software_feature":{"ids_ips":false,"ipv6":true,"adguard":false,"tor":false,"sms_forward":false,"vpn":true,"bark":true},"vendor":"GL.iNet","hardware_feature":{"switch_button":"","radio":"radio0","lan":"eth0","nand":true,"usb":"1-1.3","usb_reset":"/sys/class/gpio0/usb_power/value,1","usb3":"2-1","modem_reset":"2","build_in_modem":"1-1.2","microsd":"1-1.1","wan":"eth1","mcu":true,"fan":true,"submodel":"BLE","bluetooth":true,"gps":false,"rs485":false,"nowds":false,"reset_button":"gpio-3","slot":"dual"},"country_code":"","sn_bak":"705e8c25242eddd6","board_info":{"architecture":"ARMv7 Processor rev 4 (v7l)","hostname":"GL-AXT1800","kernel_version":"4.4.60","openwrt_version":"OpenWrt 21.02-SNAPSHOT r16273+114-378769b555","model":"GL Technologies, Inc. AXT1800"},"firmware_date":"2022-02-16 5:42:18","model":"xe300","ddns":"evc749a","sn":"4078493df9a88098","firmware_type":"alpha4","firmware_version":"4.0.0","cpu_num":4,"hidden_features":["ap","wds"]}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746601,
          keyName: '?hardware_version',
          keyValue: null,
          desp: 'The hardware version of the device [not yet]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746602,
          keyName: 'firmware_version',
          keyValue: null,
          desp: 'The firmware version of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746603,
          keyName: 'firmware_type',
          keyValue: null,
          desp: 'The type of firmware version of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746604,
          keyName: 'firmware_date',
          keyValue: null,
          desp: 'Compilation date of firmware of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746605,
          keyName: 'vendor',
          keyValue: null,
          desp: 'Device vendor.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746606,
          keyName: 'mac',
          keyValue: null,
          desp: 'The MAC of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746607,
          keyName: '?ddns',
          keyValue: null,
          desp: 'ddns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746608,
          keyName: 'model',
          keyValue: null,
          desp: 'The Model of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746609,
          keyName: 'submodel',
          keyValue: null,
          desp: 'The Submodel of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746610,
          keyName: '?sn',
          keyValue: null,
          desp: 'sn',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746611,
          keyName: '?sn_bak',
          keyValue: null,
          desp: 'Back SN of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746612,
          keyName: '?country_code',
          keyValue: null,
          desp: 'Country/Region code of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746613,
          keyName: '?hardware_feature',
          keyValue: null,
          desp: 'Hardware information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17751,
        },
        {
          id: 746614,
          keyName: '?hardware_feature.wan',
          keyValue: null,
          desp: 'The device name of the WAN port in the OS.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746615,
          keyName: '?hardware_feature.lan',
          keyValue: null,
          desp: 'The device name of the LAN port in the OS.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746616,
          keyName: '?hardware_feature.build_in_modem',
          keyValue: null,
          desp: 'The PCIe path (Format: domain:bus:slot.func) or the USB path (Format: bus-port.port.port) for the built-in cellular modem',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746617,
          keyName: '?hardware_feature.usb',
          keyValue: null,
          desp: 'The USB path (Format: bus-port.port) for the USB port.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746618,
          keyName: '?hardware_feature.usb_reset',
          keyValue: null,
          desp: 'The GPIO path and level validity of usb port.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746619,
          keyName: '?hardware_feature.usb3',
          keyValue: null,
          desp: 'If the device supports USB3.0. empty means not supported.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746620,
          keyName: '?hardware_feature.radio',
          keyValue: null,
          desp: 'Wireless radio device name (Can be used to determine whether to support repeater).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746621,
          keyName: '?hardware_feature.reset_button',
          keyValue: null,
          desp: 'reset button.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746622,
          keyName: '?hardware_feature.switch_button',
          keyValue: null,
          desp: 'switch button.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746623,
          keyName: '?hardware_feature.microsd',
          keyValue: null,
          desp: 'The USB path (Format: bus-port.port) for the micro SD card.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746624,
          keyName: '?hardware_feature.modem_reset',
          keyValue: null,
          desp: 'The device supports that what type of module reset(0:Not support;1:Only support software reset;2:Support software and hardware reset).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17751,
        },
        {
          id: 746625,
          keyName: '?hardware_feature.mcu',
          keyValue: null,
          desp: 'Whether the device to support detecting battery power and temperature through MCU.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746626,
          keyName: '?hardware_feature.fan',
          keyValue: null,
          desp: 'Whether the device to support detecting fan status and temperature.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746627,
          keyName: '?hardware_feature.nand',
          keyValue: null,
          desp: 'Whether the device to support NAND.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746628,
          keyName: '?hardware_feature.hwnat',
          keyValue: null,
          desp: 'Whether the device to support hardware acceleration.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746629,
          keyName: '?hardware_feature.nowds',
          keyValue: null,
          desp: 'Whether the device does not support WDS mode (true means WDS is not supported).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746630,
          keyName: '?hardware_feature.slot',
          keyValue: null,
          desp: 'Indicates whether two cards or one card are supported, the value could be "single" or "dual".',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746631,
          keyName: '?hardware_feature.esim_support',
          keyValue: null,
          desp: 'Whether esim exist on the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746632,
          keyName: '?software_feature',
          keyValue: null,
          desp: 'Software information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17751,
        },
        {
          id: 746633,
          keyName: '?software_feature.ipv6',
          keyValue: null,
          desp: 'Whether the device support IPv6 service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746634,
          keyName: '?software_feature.vpn',
          keyValue: null,
          desp: 'Whether the device support VPN service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746635,
          keyName: '?software_feature.adguard',
          keyValue: null,
          desp: 'Whether the device support AdGuard Home service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746636,
          keyName: '?software_feature.tor',
          keyValue: null,
          desp: 'Whether the device support Tor service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746637,
          keyName: '?software_feature.ids_ips',
          keyValue: null,
          desp: 'Whether the device support IDS/IPS service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746638,
          keyName: '?software_feature.sms_forward',
          keyValue: null,
          desp: 'Whether the device support SMS forward service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746639,
          keyName: '?software_feature.repeater_eap',
          keyValue: null,
          desp: 'Whether the device support repeat Wi-Fi encrypted with EAP.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746640,
          keyName: '?software_feature.nas',
          keyValue: null,
          desp: 'Whether the device support network storage service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746641,
          keyName: '?software_feature.passthrough',
          keyValue: null,
          desp: 'Whether the device support passthrough service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746642,
          keyName: '?software_feature.secondwan',
          keyValue: null,
          desp: 'Whether the device support secondwan service.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746643,
          keyName: '?software_feature.bark',
          keyValue: null,
          desp: 'Whether the device support bark router client.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746644,
          keyName: '?software_feature.mlo',
          keyValue: null,
          desp: 'Whether the device support wifi7 MLO.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746645,
          keyName: '?software_feature.cellular_upgrade',
          keyValue: null,
          desp: 'Whether the device support cellular upgrade',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746646,
          keyName: 'bluetooth',
          keyValue: null,
          desp: 'Whether the device to support bluetooth.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746647,
          keyName: 'gps',
          keyValue: null,
          desp: 'Whether the device to support gps.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746648,
          keyName: 'rs485',
          keyValue: null,
          desp: 'Whether the device to support rs485.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17751,
        },
        {
          id: 746649,
          keyName: 'board_info',
          keyValue: null,
          desp: 'Board information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17751,
        },
        {
          id: 746650,
          keyName: 'board_info.architecture',
          keyValue: null,
          desp: 'CPU architecture.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746651,
          keyName: 'board_info.hostname',
          keyValue: null,
          desp: 'hostname',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746652,
          keyName: 'board_info.kernel_version',
          keyValue: null,
          desp: 'Linux kernel version.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746653,
          keyName: 'board_info.openwrt_version',
          keyValue: null,
          desp: 'OpenWrt version.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746654,
          keyName: 'board_info.model',
          keyValue: null,
          desp: 'OpenWrt board model.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
        {
          id: 746655,
          keyName: 'cpu_num',
          keyValue: null,
          desp: 'Number of the CPU cores.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17751,
        },
        {
          id: 746656,
          keyName: 'hidden_features',
          keyValue: null,
          desp: 'List of features hidden on the page',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17751,
        },
        {
          id: 746657,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get information].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17751,
        },
        {
          id: 746658,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17751,
        },
      ],
    },
    disk_info: {
      data: {
        id: 17752,
        title: 'disk_info',
        desp: 'Get disk information.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","disk_info"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"root": {"total": 1231, "free": 100, "used": 1131}, "tmp": {"total": 1231, "free": 100, "used": 1131}}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746659,
          keyName: 'root',
          keyValue: null,
          desp: 'the root file system information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17752,
        },
        {
          id: 746660,
          keyName: 'root.total',
          keyValue: null,
          desp: 'Total size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
        {
          id: 746661,
          keyName: 'root.free',
          keyValue: null,
          desp: 'Free size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
        {
          id: 746662,
          keyName: 'root.used',
          keyValue: null,
          desp: 'Used size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
        {
          id: 746663,
          keyName: 'tmp',
          keyValue: null,
          desp: 'The tmp file system information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17752,
        },
        {
          id: 746664,
          keyName: 'tmp.total',
          keyValue: null,
          desp: 'Total size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
        {
          id: 746665,
          keyName: 'tmp.free',
          keyValue: null,
          desp: 'Free size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
        {
          id: 746666,
          keyName: 'tmp.used',
          keyValue: null,
          desp: 'Free size of the root file system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17752,
        },
      ],
    },
    get_timezone_config: {
      data: {
        id: 17753,
        title: 'get_timezone_config',
        desp: 'Get the time zone information of the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_timezone_config"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"zonename":"Asia\\/Shanghai","tzoffset":"+0800","autotimezone_enabled":true,"localtime":1643200134,"timezone":"CST-8"}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746667,
          keyName: 'zonename',
          keyValue: null,
          desp: 'Time zone name of the device (It will return null when use UTC).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17753,
        },
        {
          id: 746668,
          keyName: 'timezone',
          keyValue: null,
          desp: 'Time zone of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17753,
        },
        {
          id: 746669,
          keyName: 'tzoffset',
          keyValue: null,
          desp: 'System time-zone offset.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17753,
        },
        {
          id: 746670,
          keyName: 'localtime',
          keyValue: null,
          desp: 'The timestamp of the device (Unit: Seconds).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17753,
        },
        {
          id: 746671,
          keyName: 'auto_timezone_enabled',
          keyValue: null,
          desp: 'Whether the device is enabled for automatic time zone.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17753,
        },
        {
          id: 746672,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get information].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17753,
        },
        {
          id: 746673,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17753,
        },
      ],
    },
    set_timezone_config: {
      data: {
        id: 17754,
        title: 'set_timezone_config',
        desp: 'Set the time zone information for the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","system","set_timezone_config",{"zonename":"","timezone":"UTC","localtime": 1653622981}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['system'],
      params: [
        {
          id: 348596,
          keyName: 'zonename',
          keyValue: null,
          desp: 'Time zone name of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17754,
        },
        {
          id: 348597,
          keyName: 'timezone',
          keyValue: null,
          desp: 'Time zone of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17754,
        },
        {
          id: 348598,
          keyName: 'localtime',
          keyValue: null,
          desp: 'The timestamp of the device (Unit: Seconds).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17754,
        },
      ],
      results: [
        {
          id: 746674,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Invalid parameters].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17754,
        },
        {
          id: 746675,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17754,
        },
      ],
    },
    reset_firmware: {
      data: {
        id: 17755,
        title: 'reset_firmware',
        desp: 'Reset the device to recover the factory status.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","reset_firmware"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['system'],
      params: [],
      results: [],
    },
    set_password: {
      data: {
        id: 17756,
        title: 'set_password',
        desp: 'Set administrator password for the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","set_password",{"username":"admin","old_password":"123","new_password":"456"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['system'],
      params: [
        {
          id: 348599,
          keyName: 'username',
          keyValue: null,
          desp: 'Username.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17756,
        },
        {
          id: 348600,
          keyName: '?old_password',
          keyValue: null,
          desp: 'Old password, which is the password currently in use.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17756,
        },
        {
          id: 348601,
          keyName: 'new_password',
          keyValue: null,
          desp: 'New password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17756,
        },
      ],
      results: [
        {
          id: 746676,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code [-1: No permission; -2: Command not found, -3: Other unknown error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17756,
        },
        {
          id: 746677,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17756,
        },
      ],
    },
    reboot: {
      data: {
        id: 17757,
        title: 'reboot',
        desp: 'Reboot the device',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","reboot"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['system'],
      params: [
        {
          id: 348602,
          keyName: 'delay',
          keyValue: '1',
          desp: 'Delayed reboot time (Unit: Seconds).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17757,
        },
      ],
      results: [],
    },
    get_unixtime: {
      data: {
        id: 17758,
        title: 'get_unixtime',
        desp: 'Get Unix timestamp.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_unixtime"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"time": 1629106981}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746678,
          keyName: 'time',
          keyValue: null,
          desp: 'Unix timestamp of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17758,
        },
      ],
    },
    get_httpd_mem_status: {
      data: {
        id: 17759,
        title: 'get_httpd_mem_status',
        desp: 'Get the memory usage of the http server. You can use the interface to monitor whether there are memory leaks in other APIs.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_httpd_mem_status"]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"memory_used": 11952}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746679,
          keyName: 'memory_used',
          keyValue: null,
          desp: 'Memory usage of the device (Unit: KB).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17759,
        },
        {
          id: 746680,
          keyName: 'err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get memory usage information or nginx service is not running].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17759,
        },
        {
          id: 746681,
          keyName: 'err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17759,
        },
      ],
    },
    get_security_policy: {
      data: {
        id: 17760,
        title: 'get_security_policy',
        desp: 'Get the security policy of the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_security_policy"]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"redirect_https":0,"security_rule":0}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746682,
          keyName: 'redirect_https',
          keyValue: null,
          desp: 'Whether the http server is forced to redirect to https when the user uses http to access [0: Not redirect ; 1:Redirect].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17760,
        },
        {
          id: 746683,
          keyName: 'security_rule',
          keyValue: null,
          desp: 'Safety standard option [0: No requirement, user can use weak password; 1: General safety standard requirement].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17760,
        },
        {
          id: 746684,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Failed to get information].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17760,
        },
        {
          id: 746685,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17760,
        },
      ],
    },
    set_security_policy: {
      data: {
        id: 17761,
        title: 'set_security_policy',
        desp: 'Set the security policy of the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","system","set_security_policy",{"redirect_https": 1 ,"security_rule": 1 }],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['system'],
      params: [
        {
          id: 348603,
          keyName: '?redirect_https',
          keyValue: null,
          desp: 'Safety standard option [0: No requirement, user can use weak password; 1: General safety standard requirement].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17761,
        },
        {
          id: 348604,
          keyName: 'security_rule',
          keyValue: null,
          desp: 'Safety standard option [0: No requirement, user can use weak password; 1: General safety standard requirement].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17761,
        },
      ],
      results: [
        {
          id: 746686,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1: Invalid parameters].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17761,
        },
        {
          id: 746687,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17761,
        },
      ],
    },
    get_load: {
      data: {
        id: 17762,
        title: 'get_load',
        desp: 'Get CPU loading status of the device.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_load"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"load_average": [2.01, 0.89, 0.33], "memory_free": 105918464, "memory_total": 106278912, "memory_buff_cache": 12345678}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746688,
          keyName: 'load_average',
          keyValue: null,
          desp: 'CPU load averages in system. it returns an array, the array is fixed with 3 numbers that represent the average load of 1, 5, and 15 minutes in sequence.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17762,
        },
        {
          id: 746689,
          keyName: 'memory_total',
          keyValue: null,
          desp: 'Total memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17762,
        },
        {
          id: 746690,
          keyName: 'memory_free',
          keyValue: null,
          desp: 'Free memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17762,
        },
        {
          id: 746691,
          keyName: 'memory_buff_cache',
          keyValue: null,
          desp: 'Buffered memory and cached memory in the system (Unit: Byte).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17762,
        },
      ],
    },
    get_usb3_disable: {
      data: {
        id: 17763,
        title: 'get_usb3_disable',
        desp: 'get usb3.0 disable status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","get_usb3_disable",{}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"usb3_disable":false}}',
      module_name: ['system'],
      params: [],
      results: [
        {
          id: 746692,
          keyName: 'usb3_disable',
          keyValue: null,
          desp: 'usb3.0 disabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17763,
        },
      ],
    },
    set_usb3_disable: {
      data: {
        id: 17764,
        title: 'set_usb3_disable',
        desp: 'set usb3.0 disable',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:24',
        create_time: '2024-11-19T17:55:24',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","system","set_usb3_disable",{"usb3_disable":false}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['system'],
      params: [
        {
          id: 348605,
          keyName: 'usb3_disable',
          keyValue: null,
          desp: 'disable usb3.0 or not',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17764,
        },
      ],
      results: [
        {
          id: 746693,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code, -1:argument err',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17764,
        },
      ],
    },
  },
  {
    module_name: ['tailscale'],
    get_status: {
      data: {
        id: 17765,
        title: 'get_status',
        desp: 'Get tailscale status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","tailscale","get_status",{}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"login_name":"gl-fan****","status":3,"dns":["192.168.101.10","114.114.114.114"],"address_v4":"100.66.166.89"}}',
      module_name: ['tailscale'],
      params: [],
      results: [
        {
          id: 746694,
          keyName: 'status',
          keyValue: null,
          desp: 'Status of tailscale [1:login required; 2:authorization required; 3:running; 4:connecting]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17765,
        },
        {
          id: 746695,
          keyName: 'login_name',
          keyValue: null,
          desp: 'Login username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17765,
        },
        {
          id: 746696,
          keyName: 'address_v4',
          keyValue: null,
          desp: 'Ipv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17765,
        },
        {
          id: 746697,
          keyName: 'dns',
          keyValue: null,
          desp: 'Dns servers',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17765,
        },
        {
          id: 746698,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [-1:Failed to get status]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17765,
        },
        {
          id: 746699,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17765,
        },
      ],
    },
    get_auth_url: {
      data: {
        id: 17766,
        title: 'get_auth_url',
        desp: 'Get tailscale login link',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tailscale","get_auth_url"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"auth_url": "https://login.tailscale.com/a/xxxxxx"}}',
      module_name: ['tailscale'],
      params: [],
      results: [
        {
          id: 746700,
          keyName: 'auth_url',
          keyValue: null,
          desp: 'Login link',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17766,
        },
      ],
    },
    get_config: {
      data: {
        id: 17767,
        title: 'get_config',
        desp: 'Get tailscale settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tailscale","get_config"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"wan_enabled":true,"lan_ip":"192.168.8.0\\/24","enabled":true,"lan_enabled":true}}',
      module_name: ['tailscale'],
      params: [],
      results: [
        {
          id: 746701,
          keyName: 'enabled',
          keyValue: null,
          desp: 'Whether to enable [false：Disable; true：Enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17767,
        },
        {
          id: 746702,
          keyName: 'wan_enabled',
          keyValue: null,
          desp: 'Access the wan port network [false：Disable; true：Enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17767,
        },
        {
          id: 746703,
          keyName: 'lan_enabled',
          keyValue: null,
          desp: 'Access the lan port network [false：Disable; true：Enable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17767,
        },
        {
          id: 746704,
          keyName: 'lan_ip',
          keyValue: null,
          desp: 'Lan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17767,
        },
        {
          id: 746705,
          keyName: 'exit_node_ip',
          keyValue: null,
          desp: 'Device exit node IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17767,
        },
      ],
    },
    get_exit_node_list: {
      data: {
        id: 17768,
        title: 'get_exit_node_list',
        desp: 'Get tailscale settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tailscale","get_exit_node_list"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"exit_node_list":["100.91.50.xxx","100.71.64.xxx"]}}',
      module_name: ['tailscale'],
      params: [],
      results: [
        {
          id: 746706,
          keyName: 'exit_node_list',
          keyValue: null,
          desp: 'List of exit nodes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17768,
        },
      ],
    },
    set_config: {
      data: {
        id: 17769,
        title: 'set_config',
        desp: 'Set tailscale settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tailscale","set_config",{"enabled":true,"lan_enabled":true,"wan_enabled":true,"exit_node_ip":"100.91.50.xxx"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['tailscale'],
      params: [
        {
          id: 348606,
          keyName: 'enabled',
          keyValue: null,
          desp: 'Status of tailscale：true：Enable，false: Disable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17769,
        },
        {
          id: 348607,
          keyName: 'wan_enabled',
          keyValue: null,
          desp: 'Access the wan port network，true：Enable，false: Disable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17769,
        },
        {
          id: 348608,
          keyName: 'lan_enabled',
          keyValue: null,
          desp: 'Access the lan port network，true：Enable，false: Disable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17769,
        },
        {
          id: 348609,
          keyName: '?exit_node_ip',
          keyValue: null,
          desp: 'Exit node IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17769,
        },
      ],
      results: [
        {
          id: 746707,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Setup failed.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17769,
        },
        {
          id: 746708,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17769,
        },
      ],
    },
    logout: {
      data: {
        id: 17770,
        title: 'logout',
        desp: 'Logout of tailscale',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tailscale","logout"]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['tailscale'],
      params: [],
      results: [
        {
          id: 746709,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17770,
        },
        {
          id: 746710,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17770,
        },
      ],
    },
  },
  {
    module_name: ['tethering'],
    get_status: {
      data: {
        id: 17771,
        title: 'get_status',
        desp: 'get tethering info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","tethering","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"devices":[{"device":"usb0","tyep":0,"use":true},{"device":"usb1","tyep":0,"use":false}],"status":1,"ipv4":{"ip":"192.168.42.38/24","gateway":"192.168.42.129","dns":["192.168.42.129"]}}}',
      module_name: ['tethering'],
      params: [],
      results: [
        {
          id: 746711,
          keyName: 'devices',
          keyValue: null,
          desp: 'device list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17771,
        },
        {
          id: 746712,
          keyName: 'devices.device',
          keyValue: null,
          desp: 'device name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
        {
          id: 746713,
          keyName: 'devices.type',
          keyValue: null,
          desp: 'device type [0: Android; 1:Apple; 2:unknow]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17771,
        },
        {
          id: 746714,
          keyName: 'devices.use',
          keyValue: null,
          desp: 'working status [ture: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17771,
        },
        {
          id: 746715,
          keyName: 'status',
          keyValue: null,
          desp: 'device status [0: disconnected; 1: connected; 2: connecting]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17771,
        },
        {
          id: 746716,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'IPv6 info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17771,
        },
        {
          id: 746717,
          keyName: '?ipv6.ip',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
        {
          id: 746718,
          keyName: '?ipv6.gateway',
          keyValue: null,
          desp: 'IPv6 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
        {
          id: 746719,
          keyName: '?ipv6.dns',
          keyValue: null,
          desp: 'IPv6 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17771,
        },
        {
          id: 746720,
          keyName: '?ipv4',
          keyValue: null,
          desp: 'IPv4 info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17771,
        },
        {
          id: 746721,
          keyName: '?ipv4.ip',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
        {
          id: 746722,
          keyName: '?ipv4.gateway',
          keyValue: null,
          desp: 'IPv4 gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
        {
          id: 746723,
          keyName: '?ipv4.dns',
          keyValue: null,
          desp: 'IPv4 DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17771,
        },
        {
          id: 746724,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: This feature is not supported; -2: The device is not plugged in]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17771,
        },
        {
          id: 746725,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17771,
        },
      ],
    },
    get_config: {
      data: {
        id: 17772,
        title: 'get_config',
        desp: 'get tethering config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","tethering","get_config",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"device": "usb0", "mtu": 1500, "ttl": 64, "ttl_ipv6": 64}}',
      module_name: ['tethering'],
      params: [],
      results: [
        {
          id: 746726,
          keyName: 'device',
          keyValue: null,
          desp: 'device name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17772,
        },
        {
          id: 746727,
          keyName: '?mtu',
          keyValue: null,
          desp: 'Get the MTU of the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17772,
        },
        {
          id: 746728,
          keyName: '?ttl',
          keyValue: null,
          desp: 'Get the TTL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17772,
        },
        {
          id: 746729,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'Get the HL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17772,
        },
      ],
    },
    set_connect: {
      data: {
        id: 17773,
        title: 'set_connect',
        desp: 'connect or disconnect tethering',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","tethering","set_connect",{"device":"usb0", "mtu": 1500, "ttl": 64, "ttl_ipv6": 64}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['tethering'],
      params: [
        {
          id: 348610,
          keyName: 'device',
          keyValue: null,
          desp: 'device name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17773,
        },
        {
          id: 348611,
          keyName: '?mtu',
          keyValue: null,
          desp: 'Setup the MTU of the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17773,
        },
        {
          id: 348612,
          keyName: '?ttl',
          keyValue: null,
          desp: 'Setup the TTL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17773,
        },
        {
          id: 348613,
          keyName: '?ttl_ipv6',
          keyValue: null,
          desp: 'Setup the HL output via the device',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17773,
        },
      ],
      results: [
        {
          id: 746730,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-3: missing parameters]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17773,
        },
        {
          id: 746731,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17773,
        },
      ],
    },
    disconnect: {
      data: {
        id: 17774,
        title: 'disconnect',
        desp: 'disconnect tethering',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","tethering","disconnect"],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['tethering'],
      params: [],
      results: [],
    },
  },
  {
    module_name: ['timer'],
    set_led: {
      data: {
        id: 17775,
        title: 'set_led',
        desp: 'set led config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","timer","set_led",{"enable": true,"week":[0,1,2,3,4,5,6],"turnon_hour":"07","turnon_min":"00","turnoff_hour":"22","turnoff_min":"00"}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['timer'],
      params: [
        {
          id: 348614,
          keyName: 'enable',
          keyValue: null,
          desp: 'set the LED schedule status [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17775,
        },
        {
          id: 348615,
          keyName: 'turnon_hour',
          keyValue: null,
          desp: 'set the start time (hour) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17775,
        },
        {
          id: 348616,
          keyName: 'turnon_min',
          keyValue: null,
          desp: 'set the start time (minute) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17775,
        },
        {
          id: 348617,
          keyName: 'turnoff_hour',
          keyValue: null,
          desp: 'set the end time (hour) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17775,
        },
        {
          id: 348618,
          keyName: 'turnoff_min',
          keyValue: null,
          desp: 'set the end time (minute) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17775,
        },
        {
          id: 348619,
          keyName: 'week',
          keyValue: null,
          desp: 'set the days to perfrom the LED schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17775,
        },
      ],
      results: [
        {
          id: 746732,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: parameter error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17775,
        },
        {
          id: 746733,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17775,
        },
      ],
    },
    get_led: {
      data: {
        id: 17776,
        title: 'get_led',
        desp: 'get config of LED',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","timer","get_led"],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"turnon_hour":"07","turnoff_min":"00","turnon_min":"00","enable":true,"week":[0,1,2,3,4,5,6],"turnoff_hour":"22"}}',
      module_name: ['timer'],
      params: [],
      results: [
        {
          id: 746734,
          keyName: 'enable',
          keyValue: null,
          desp: 'get the LED schedule status [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17776,
        },
        {
          id: 746735,
          keyName: 'turnon_hour',
          keyValue: null,
          desp: 'get the start time (hour) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17776,
        },
        {
          id: 746736,
          keyName: 'turnon_min',
          keyValue: null,
          desp: 'get the start time (minute) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17776,
        },
        {
          id: 746737,
          keyName: 'turnoff_hour',
          keyValue: null,
          desp: 'get the end time (hour) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17776,
        },
        {
          id: 746738,
          keyName: 'turnoff_min',
          keyValue: null,
          desp: 'get the end time (minute) of LED schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17776,
        },
        {
          id: 746739,
          keyName: 'week',
          keyValue: null,
          desp: 'get the days to perfrom the LED schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17776,
        },
      ],
    },
    set_reboot: {
      data: {
        id: 17777,
        title: 'set_reboot',
        desp: 'set reboot config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["P82I3vTIHkeMATVBsrL68vTNqru63lLq","timer","set_reboot",{"enable":true,"hour":"03","min":"00","week":[0,1,2,3,4,5,6]}]}',
      out_example: '{"jsonrpc":"2.0","id": 1,"result":{}}',
      module_name: ['timer'],
      params: [
        {
          id: 348620,
          keyName: 'enable',
          keyValue: null,
          desp: 'set the status of schedule reboot [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17777,
        },
        {
          id: 348621,
          keyName: 'hour',
          keyValue: null,
          desp: 'set the time (hour) to perfrom schedule reboot',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17777,
        },
        {
          id: 348622,
          keyName: 'min',
          keyValue: null,
          desp: 'set the time (minute) to perfrom schedule reboot',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17777,
        },
        {
          id: 348623,
          keyName: 'week',
          keyValue: null,
          desp: 'set the days to perfrom the REBOOT schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17777,
        },
      ],
      results: [
        {
          id: 746740,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: parameter error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17777,
        },
        {
          id: 746741,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17777,
        },
      ],
    },
    get_reboot: {
      data: {
        id: 17778,
        title: 'get_reboot',
        desp: 'get config of reboot',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","timer","get_reboot"],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"enable":true,"week":[0,1,2,3,4,5,6],"hour":"03","min":"00"}}',
      module_name: ['timer'],
      params: [],
      results: [
        {
          id: 746742,
          keyName: 'enable',
          keyValue: null,
          desp: 'get the status of schedule reboot [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17778,
        },
        {
          id: 746743,
          keyName: 'hour',
          keyValue: null,
          desp: 'get the time (hour) to perfrom schedule reboot',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17778,
        },
        {
          id: 746744,
          keyName: 'min',
          keyValue: null,
          desp: 'get the time (minute) to perfrom schedule reboot',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17778,
        },
        {
          id: 746745,
          keyName: 'week',
          keyValue: null,
          desp: 'get the days to perfrom REBOOT schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17778,
        },
      ],
    },
    set_wifi: {
      data: {
        id: 17779,
        title: 'set_wifi',
        desp: 'set wifi config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","timer","set_wifi",{"wifi":[{"enable":true,"guest":0,"band":"5G","func":"turn_onoff","turnon_hour":"07","turnon_min":"00","turnoff_hour":"22","turnoff_min":"00","week":[0,1,2,3,4,5,6]},{"enable":true,"guest":1,"band":"5G","func":"turn_onoff","turnon_hour":"07","turnon_min":"00","turnoff_hour":"22","turnoff_min":"00","week":[0,1,2,3,4,5,6]}]}]}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['timer'],
      params: [
        {
          id: 348624,
          keyName: 'wifi',
          keyValue: null,
          desp: 'set the group data of WiFi schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17779,
        },
        {
          id: 348625,
          keyName: 'wifi.enable',
          keyValue: null,
          desp: 'set the status of WiFi schedule [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17779,
        },
        {
          id: 348626,
          keyName: 'wifi.band',
          keyValue: null,
          desp: 'set the WiFi band [2g; 5g; mld]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348627,
          keyName: 'wifi.guest',
          keyValue: null,
          desp: 'set the WiFi type [0: main WiFi; 1: guest WiFi]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17779,
        },
        {
          id: 348628,
          keyName: 'wifi.func',
          keyValue: null,
          desp: 'set the WiFi schedule function, turn_onoff refer to turn on and off the WiFi, power_switch refer to switch the WiFi transmission power',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348629,
          keyName: 'wifi.turnon_hour',
          keyValue: null,
          desp: 'set the start time (hour) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348630,
          keyName: 'wifi.turnon_min',
          keyValue: null,
          desp: 'set the start time (minute) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348631,
          keyName: 'wifi.turnoff_hour',
          keyValue: null,
          desp: 'set the end time (hour) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348632,
          keyName: 'wifi.turnoff_min',
          keyValue: null,
          desp: 'set the end time (minute) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348633,
          keyName: 'wifi.switch_hour',
          keyValue: null,
          desp: 'set the time (hour) to switch the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348634,
          keyName: 'wifi.switch_min',
          keyValue: null,
          desp: 'set the time (minute) to switch the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348635,
          keyName: 'wifi.restore_hour',
          keyValue: null,
          desp: 'set the time (hour) to switch back the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348636,
          keyName: 'wifi.restore_min',
          keyValue: null,
          desp: 'set the time (minute) to switch back the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348637,
          keyName: 'wifi.switch_power',
          keyValue: null,
          desp: 'set the transmission power switch to, required when set as power_switch [ Max; High; Medium; Low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348638,
          keyName: 'wifi.restore_power',
          keyValue: null,
          desp: 'set the transmission power switch back to, required when set as power_switch [ Max; High; Medium; Low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 348639,
          keyName: 'wifi.week',
          keyValue: null,
          desp: 'set the days to perform WiFi schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17779,
        },
      ],
      results: [
        {
          id: 746746,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17779,
        },
        {
          id: 746747,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: parameter error]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17779,
        },
      ],
    },
    get_wifi: {
      data: {
        id: 17780,
        title: 'get_wifi',
        desp: 'get config of wifi',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","timer","get_wifi"],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"wifi":[{"band":"5G","turnoff_min":"00","enable":true,"func":"turn_onoff","turnoff_hour":"22","guest":0,"week":[0,1,2,3,4,5,6],"turnon_min":"00","turnon_hour":"07"},{"band":"2G","turnoff_min":"00","enable":true,"func":"turn_onoff","turnoff_hour":"22","guest":0,"week":[0,1,2,3,4,5,6],"turnon_min":"00","turnon_hour":"07"},{"band":"5G","turnoff_min":"00","enable":true,"func":"turn_onoff","turnoff_hour":"22","guest":1,"week":[0,1,2,3,4,5,6],"turnon_min":"00","turnon_hour":"07"},{"band":"2G","turnoff_min":"00","enable":true,"func":"turn_onoff","turnoff_hour":"22","guest":1,"week":[0,1,2,3,4,5,6],"turnon_min":"00","turnon_hour":"07"},{"band":"5G","switch_hour":"22","restore_min":"00","enable":true,"func":"power_switch","guest":0,"week":[0,1,2,3,4,5,6],"restore_power":"Max","restore_hour":"07","switch_power":"Low","switch_min":"00"},{"band":"2G","switch_hour":"22","restore_min":"00","enable":false,"func":"power_switch","guest":0,"week":[0,1,2,3,4,5,6],"restore_power":"Max","restore_hour":"07","switch_power":"Low","switch_min":"00"}],"wifi_func_2g":"turn_onoff","wifi_func_5g":"turn_onoff"}}',
      module_name: ['timer'],
      params: [],
      results: [
        {
          id: 746748,
          keyName: 'wifi_func_2g',
          keyValue: null,
          desp: 'get the 2.4g WiFi schedule function, turn_onoff refer to turn on and off the WiFi, power_switch refer to switch the WiFi transmission power',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746749,
          keyName: 'wifi_func_5g',
          keyValue: null,
          desp: 'get the 5g WiFi schedule function, turn_onoff refer to turn on and off the WiFi, power_switch refer to switch the WiFi transmission power',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746750,
          keyName: 'wifi_func_mld',
          keyValue: null,
          desp: 'get the mlo WiFi schedule function, turn_onoff refer to turn on and off the WiFi',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746751,
          keyName: 'wifi',
          keyValue: null,
          desp: 'get the group data of WiFi schedule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17780,
        },
        {
          id: 746752,
          keyName: 'wifi.enable',
          keyValue: null,
          desp: 'get the status of WiFi schedule [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17780,
        },
        {
          id: 746753,
          keyName: 'wifi.band',
          keyValue: null,
          desp: 'get the WiFi band [2g; 5g; mld]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746754,
          keyName: 'wifi.guest',
          keyValue: null,
          desp: 'get the WiFi type [0: main WiFi; 1: guest WiFi]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17780,
        },
        {
          id: 746755,
          keyName: 'wifi.turnon_hour',
          keyValue: null,
          desp: 'get the start time (hour) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746756,
          keyName: 'wifi.turnon_min',
          keyValue: null,
          desp: 'get the start time (minute) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746757,
          keyName: 'wifi.turnoff_hour',
          keyValue: null,
          desp: 'get the end time (hour) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746758,
          keyName: 'wifi.turnoff_min',
          keyValue: null,
          desp: 'get the end time (minute) of WiFi schedule, required when set as turn_onoff',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746759,
          keyName: 'wifi.switch_hour',
          keyValue: null,
          desp: 'get the time (hour) to switch the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746760,
          keyName: 'wifi.switch_min',
          keyValue: null,
          desp: 'get the time (minute) to switch the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746761,
          keyName: 'wifi.restore_hour',
          keyValue: null,
          desp: 'get the time (hour) to switch back the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746762,
          keyName: 'wifi.restore_min',
          keyValue: null,
          desp: 'get the time (minute) to switch back the transmission power, required when set as power_switch',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746763,
          keyName: 'wifi.switch_power',
          keyValue: null,
          desp: 'get the transmission power switch to, required when set as power_switch [ Max; High; Medium; Low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746764,
          keyName: 'wifi.restore_power',
          keyValue: null,
          desp: 'get the transmission power switch back to, required when set as power_switch [ Max; High; Medium; Low]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
        {
          id: 746765,
          keyName: 'wifi.week',
          keyValue: null,
          desp: 'get the days to perform WiFi schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17780,
        },
        {
          id: 746766,
          keyName: 'wifi.func',
          keyValue: null,
          desp: 'get the WiFi schedule function, turn_onoff refer to turn on and off the WiFi, power_switch refer to switch the WiFi transmission power',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17780,
        },
      ],
    },
    set_disk: {
      data: {
        id: 17781,
        title: 'set_disk',
        desp: 'set disk config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","timer","set_disk",{"enable":true,"turnon_hour":"07","turnon_min":"00","turnoff_hour":"22","turnoff_min":"00","week":[0,1,2,3,4,5,6]}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['timer'],
      params: [
        {
          id: 348640,
          keyName: 'enable',
          keyValue: null,
          desp: 'set the status of schedule disk [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17781,
        },
        {
          id: 348641,
          keyName: 'turnon_hour',
          keyValue: null,
          desp: 'set the start time (hour) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17781,
        },
        {
          id: 348642,
          keyName: 'turnon_min',
          keyValue: null,
          desp: 'set the start time (minute) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17781,
        },
        {
          id: 348643,
          keyName: 'turnoff_hour',
          keyValue: null,
          desp: 'set the end time (hour) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17781,
        },
        {
          id: 348644,
          keyName: 'turnoff_min',
          keyValue: null,
          desp: 'set the end time (minute) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17781,
        },
        {
          id: 348645,
          keyName: 'week',
          keyValue: null,
          desp: 'set the days to perfrom the DISK schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17781,
        },
      ],
      results: [
        {
          id: 746767,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code,-1;parameter error.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17781,
        },
        {
          id: 746768,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17781,
        },
      ],
    },
    get_disk: {
      data: {
        id: 17782,
        title: 'get_disk',
        desp: 'get config of disk',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:25',
        create_time: '2024-11-19T17:55:25',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","timer","get_disk"],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"turnon_hour":"07","turnoff_min":"00","turnon_min":"00","enable":true,"week":[0,1,2,3,4,5,6],"turnoff_hour":"22"}}',
      module_name: ['timer'],
      params: [],
      results: [
        {
          id: 746769,
          keyName: 'enable',
          keyValue: null,
          desp: 'get the status of schedule disk [true: enable; false: disable]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17782,
        },
        {
          id: 746770,
          keyName: 'turnon_hour',
          keyValue: null,
          desp: 'get the start time (hour) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17782,
        },
        {
          id: 746771,
          keyName: 'turnon_min',
          keyValue: null,
          desp: 'get the start time (minute) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17782,
        },
        {
          id: 746772,
          keyName: 'turnoff_hour',
          keyValue: null,
          desp: 'get the end time (hour) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17782,
        },
        {
          id: 746773,
          keyName: 'turnoff_min',
          keyValue: null,
          desp: 'get the end time (minute) of schedule disk',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17782,
        },
        {
          id: 746774,
          keyName: 'week',
          keyValue: null,
          desp: 'get the days to perfrom DISK schedule in a week',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17782,
        },
      ],
    },
  },
  {
    module_name: ['tor'],
    get_config: {
      data: {
        id: 17783,
        title: 'get_config',
        desp: 'Get tor settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tor","get_config"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"manual": true, "enable": true, "countries": "cn"}}',
      module_name: ['tor'],
      params: [],
      results: [
        {
          id: 746775,
          keyName: 'manual',
          keyValue: null,
          desp: 'Manual selector switch: false: Disable, true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17783,
        },
        {
          id: 746776,
          keyName: 'enable',
          keyValue: null,
          desp: 'Status of tor：false: Disable， true: Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17783,
        },
        {
          id: 746777,
          keyName: 'countries',
          keyValue: null,
          desp: 'Get manually selected country',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17783,
        },
        {
          id: 746778,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get settings.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17783,
        },
        {
          id: 746779,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17783,
        },
      ],
    },
    set_config: {
      data: {
        id: 17784,
        title: 'set_config',
        desp: 'Set tor settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","tor","set_config",{"enable":true,"manual":true,"countries":"cn"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['tor'],
      params: [
        {
          id: 348646,
          keyName: 'manual',
          keyValue: null,
          desp: 'Manual selector switch: false: Disable, true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17784,
        },
        {
          id: 348647,
          keyName: 'enable',
          keyValue: null,
          desp: 'Status of tor：false :Disable true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17784,
        },
        {
          id: 348648,
          keyName: 'countries',
          keyValue: null,
          desp: 'Set manually selected country(Multiple countries can be selected)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17784,
        },
      ],
      results: [
        {
          id: 746780,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:illegal parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17784,
        },
        {
          id: 746781,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17784,
        },
      ],
    },
    get_status: {
      data: {
        id: 17785,
        title: 'get_status',
        desp: 'Get tor status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","tor","get_status"]}',
      out_example:
        '{"id":null,"jsonrpc":"2.0","result":{"status":2,"log":"Initialization tor configuration"}}',
      module_name: ['tor'],
      params: [],
      results: [
        {
          id: 746782,
          keyName: 'status',
          keyValue: null,
          desp: 'Connection Status of tor：0:not connected，1 :connection succeeded， 2 :connecting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17785,
        },
        {
          id: 746783,
          keyName: 'log',
          keyValue: null,
          desp: 'Current connection information log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17785,
        },
      ],
    },
  },
  {
    module_name: ['ui'],
    get_lang: {
      data: {
        id: 17451,
        title: 'get_lang',
        desp: 'get language.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","get_lang"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"lang":"zh-cn","list":[{"value":"de","id":16,"label":"Deutsch"},{"value":"en","id":1,"label":"English"},{"value":"es","id":20,"label":"Español"},{"value":"it","id":34,"label":"Italiano"},{"value":"ja","id":82,"label":"日本語"},{"value":"zh-cn","id":2,"label":"简体中文"},{"value":"zh-tw","id":3,"label":"繁體中文"}]}}',
      module_name: ['ui'],
      params: [],
      results: [
        {
          id: 747166,
          keyName: '?lang',
          keyValue: null,
          desp: 'Language (auto means automatic).Could be nil before init setup.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17451,
        },
        {
          id: 747167,
          keyName: 'list',
          keyValue: null,
          desp: 'List of supported languages.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17451,
        },
        {
          id: 747168,
          keyName: 'list.value',
          keyValue: null,
          desp: 'local Language.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17451,
        },
        {
          id: 747169,
          keyName: 'list.label',
          keyValue: null,
          desp: 'local Language translation.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17451,
        },
      ],
    },
    set_lang: {
      data: {
        id: 17452,
        title: 'set_lang',
        desp: 'set language.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","set_lang",{"lang":"en"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": { "lang": "en" }}',
      module_name: ['ui'],
      params: [
        {
          id: 348826,
          keyName: 'lang',
          keyValue: null,
          desp: 'The language to be set (auto means automatic).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17452,
        },
      ],
      results: [
        {
          id: 747170,
          keyName: 'lang',
          keyValue: null,
          desp: 'Current language.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17452,
        },
      ],
    },
    update_langs: {
      data: {
        id: 17453,
        title: 'update_langs',
        desp: 'update languages.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","update_langs",{"list":["en","zh-cn"],"enable":false,"week":[0,1,2,3,4,5,6],"hour":"07","min":"00"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ui'],
      params: [
        {
          id: 348827,
          keyName: 'list',
          keyValue: null,
          desp: 'The language to be update.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17453,
        },
        {
          id: 348828,
          keyName: 'enable',
          keyValue: null,
          desp: 'enable scheduled subscription',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17453,
        },
        {
          id: 348829,
          keyName: 'hour',
          keyValue: null,
          desp: 'timed subscription clock',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17453,
        },
        {
          id: 348830,
          keyName: 'min',
          keyValue: null,
          desp: 'timed subscription minutes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17453,
        },
        {
          id: 348831,
          keyName: 'week',
          keyValue: null,
          desp: 'number of days for scheduled subscription',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17453,
        },
      ],
      results: [],
    },
    get_remote_langs: {
      data: {
        id: 17454,
        title: 'get_remote_langs',
        desp: 'get remote languages.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","get_remote_langs"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"list":[{"value":"en", "label":"English"}, {"value":"de", "label":"Deutsch"}],"enable":false,"week":[0,1,2,3,4,5,6],"hour":"07","min":"00","status":0}}',
      module_name: ['ui'],
      params: [],
      results: [
        {
          id: 747171,
          keyName: 'list',
          keyValue: null,
          desp: 'List of supported languages.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17454,
        },
        {
          id: 747172,
          keyName: '?list.value',
          keyValue: null,
          desp: 'remote Language.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17454,
        },
        {
          id: 747173,
          keyName: '?list.label',
          keyValue: null,
          desp: 'remote Language translation.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17454,
        },
        {
          id: 747174,
          keyName: 'enable',
          keyValue: null,
          desp: 'enable scheduled subscription',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17454,
        },
        {
          id: 747175,
          keyName: 'hour',
          keyValue: null,
          desp: 'timed subscription clock',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17454,
        },
        {
          id: 747176,
          keyName: 'min',
          keyValue: null,
          desp: 'timed subscription minutes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17454,
        },
        {
          id: 747177,
          keyName: 'week',
          keyValue: null,
          desp: 'number of days for scheduled subscription',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17454,
        },
        {
          id: 747178,
          keyName: 'status',
          keyValue: null,
          desp: 'Network status(0: Network is normal, 1: Network abnormality)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17454,
        },
      ],
    },
    get_menu_list: {
      data: {
        id: 17455,
        title: 'get_menu_list',
        desp: 'get menu list.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","get_menu_list"]}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"menus":[{"title":"Network","index":30,"path":"/network","children":[{"title":"DHCP/DNS","path":"/network/dhcp","index":40,"view":"oui-app-dhcp"}]},{"title":"Test","index":31,"path":"/test","view":"oui-app-test"}]}}',
      module_name: ['ui'],
      params: [],
      results: [
        {
          id: 747179,
          keyName: 'menus',
          keyValue: null,
          desp: 'Current menu list.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17455,
        },
      ],
    },
    load_locales: {
      data: {
        id: 17456,
        title: 'load_locales',
        desp: 'Load translation object.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","load_locales", {"locale": "en"}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"locales": [{"IPv4-Address": "IPv4-Address", "Services": "Services"}, {"Output": "Output", "Month Days": "Month Days"}]}}',
      module_name: ['ui'],
      params: [
        {
          id: 348832,
          keyName: 'locale',
          keyValue: null,
          desp: 'Language code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17456,
        },
      ],
      results: [
        {
          id: 747180,
          keyName: 'locales',
          keyValue: null,
          desp: 'A list of translation objects (the front end needs to merge this array into a JSON object).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17456,
        },
      ],
    },
    check_initialized: {
      data: {
        id: 17457,
        title: 'check_initialized',
        desp: 'Whether the query has been initialized.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","check_initialized"]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"initialized":true,"mac":"","firmware_category":"2c","hostname":"GL-MT2500","security_rule":0,"model":"mt2500","time_info":{"reboot":60,"init":3,"upgrade":120},"firmware_version":"4.7.0","inited_internet":true}}',
      module_name: ['ui'],
      params: [],
      results: [
        {
          id: 747181,
          keyName: 'initialized',
          keyValue: null,
          desp: 'Whether it has been initialized.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17457,
        },
        {
          id: 747182,
          keyName: 'model',
          keyValue: null,
          desp: 'Device model.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747183,
          keyName: 'hostname',
          keyValue: null,
          desp: 'Device hostname.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747184,
          keyName: 'mac',
          keyValue: null,
          desp: 'MAC address on device label.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747185,
          keyName: 'firmware_version',
          keyValue: null,
          desp: 'Firmware version.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747186,
          keyName: 'security_rule',
          keyValue: null,
          desp: 'Safety regulation options, used to meet different safety requirements of different regulations [0:no safety regulation requirements; 1:general safety regulation requirements].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17457,
        },
        {
          id: 747187,
          keyName: 'firmware_category',
          keyValue: null,
          desp: 'Firmware type (currently has 2 values: "2c", "2b").',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747188,
          keyName: '?brand',
          keyValue: null,
          desp: '2B Firmware customization information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17457,
        },
        {
          id: 747189,
          keyName: '?brand.enterprise_name',
          keyValue: null,
          desp: 'Company Name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747190,
          keyName: '?brand.copyright',
          keyValue: null,
          desp: 'Copyright Information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747191,
          keyName: '?brand.official_website',
          keyValue: null,
          desp: 'Enterprise official website link.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17457,
        },
        {
          id: 747192,
          keyName: '?theme_list',
          keyValue: null,
          desp: 'List of supported themes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17457,
        },
        {
          id: 747193,
          keyName: 'time_info',
          keyValue: null,
          desp: 'The waiting time required by the device under some operations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17457,
        },
        {
          id: 747194,
          keyName: 'time_info.init',
          keyValue: null,
          desp: 'Time consumed by the device to execute the initialization steps after setting the username password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17457,
        },
        {
          id: 747195,
          keyName: 'time_info.reboot',
          keyValue: null,
          desp: 'Time consumed to execute reboot operation',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17457,
        },
        {
          id: 747196,
          keyName: 'time_info.upgrade',
          keyValue: null,
          desp: 'Time consumed to execute the upgrade operation',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17457,
        },
        {
          id: 747197,
          keyName: 'inited_internet',
          keyValue: null,
          desp: 'Whether has completed internet setup wizard',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17457,
        },
      ],
    },
    init: {
      data: {
        id: 17458,
        title: 'init',
        desp: 'initialize.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example:
        '{"jsonrpc":"2.0","id":5,"method":"call","params":["","ui","init",{"lang":"zh-cn","username":"root","password":"123456","security_rule":0,"password_wifi":"12345678","password_wifi_5g":"12345678","ssid":"t1","ssid_5g":"t5","htmode_160":true,"timezone":"<+08>-8","zonename":"Etc/GMT-8"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['ui'],
      params: [
        {
          id: 348833,
          keyName: 'lang',
          keyValue: null,
          desp: 'Language.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348834,
          keyName: 'username',
          keyValue: null,
          desp: 'Username.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348835,
          keyName: 'password',
          keyValue: null,
          desp: 'Password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348836,
          keyName: '?ssid',
          keyValue: null,
          desp: '2.4G SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348837,
          keyName: '?encryption_wifi',
          keyValue: null,
          desp: '2.4G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348838,
          keyName: '?password_wifi',
          keyValue: null,
          desp: '2.4G WiFi Password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348839,
          keyName: '?ssid_5g',
          keyValue: null,
          desp: '5G SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348840,
          keyName: '?encryption_wifi_5g',
          keyValue: null,
          desp: '5G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348841,
          keyName: '?password_wifi_5g',
          keyValue: null,
          desp: '5G WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348842,
          keyName: '?ssid_6g',
          keyValue: null,
          desp: '6G SSID if supported',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348843,
          keyName: '?encryption_wifi_6g',
          keyValue: null,
          desp: '6G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348844,
          keyName: '?password_wifi_6g',
          keyValue: null,
          desp: '6G WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348845,
          keyName: '?htmode_160',
          keyValue: null,
          desp: 'Setup 5G to ht160(It works only when device supported ht160).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17458,
        },
        {
          id: 348846,
          keyName: '?ssid_mlo',
          keyValue: null,
          desp: 'MLO SSID if supported',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348847,
          keyName: '?encryption_wifi_mlo',
          keyValue: null,
          desp: 'MLO WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348848,
          keyName: '?password_wifi_mlo',
          keyValue: null,
          desp: 'MLO WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348849,
          keyName: '?location',
          keyValue: null,
          desp: 'Placement of the device.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348850,
          keyName: 'redirect_https',
          keyValue: null,
          desp: 'Whether to redirect HTTP to HTTPS.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17458,
        },
        {
          id: 348851,
          keyName: '?security_rule',
          keyValue: null,
          desp: 'Safety regulation options, used to meet different safety requirements of different regulations [0:no safety regulation requirements; 1:general safety regulation requirements].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17458,
        },
        {
          id: 348852,
          keyName: '?zonename',
          keyValue: null,
          desp: 'Time zone name of the device.Should be set with timezone.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
        {
          id: 348853,
          keyName: '?timezone',
          keyValue: null,
          desp: 'Time zone of the device.Should be set with zonename.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17458,
        },
      ],
      results: [],
    },
    get_wifi_config_init: {
      data: {
        id: 17459,
        title: 'get_wifi_config_init',
        desp: 'get wifi config only when initializing.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: false,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","get_wifi_config_init", {}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"password_wifi":"2X35KHYBRN","ssid":"GL-MT6000-428","ht160support":true,"password_wifi_5g":"2X35KHYBRN","encryption_wifi":"psk2","ssid_5g":"GL-MT6000-428-5G","encryption_wifi_5g":"psk2"}}',
      module_name: ['ui'],
      params: [],
      results: [
        {
          id: 747198,
          keyName: '?enabled_wifi',
          keyValue: null,
          desp: 'Whether 2.4G is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
        {
          id: 747199,
          keyName: '?ssid',
          keyValue: null,
          desp: '2.4G SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747200,
          keyName: '?encryption_wifi',
          keyValue: null,
          desp: '2.4G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747201,
          keyName: '?password_wifi',
          keyValue: null,
          desp: '2.4G WiFi Password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747202,
          keyName: '?ht160support',
          keyValue: null,
          desp: 'If 5G support 160MHz',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
        {
          id: 747203,
          keyName: '?enabled_wifi_5g',
          keyValue: null,
          desp: 'Whether 5G is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
        {
          id: 747204,
          keyName: '?ssid_5g',
          keyValue: null,
          desp: '5G SSID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747205,
          keyName: '?encryption_wifi_5g',
          keyValue: null,
          desp: '5G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747206,
          keyName: '?password_wifi_5g',
          keyValue: null,
          desp: '5G WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747207,
          keyName: '?enabled_wifi_6g',
          keyValue: null,
          desp: 'Whether 6G is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
        {
          id: 747208,
          keyName: '?ssid_6g',
          keyValue: null,
          desp: '6G SSID if supported',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747209,
          keyName: '?encryption_wifi_6g',
          keyValue: null,
          desp: '6G WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747210,
          keyName: '?password_wifi_6g',
          keyValue: null,
          desp: '6G WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747211,
          keyName: '?enabled_wifi_mlo',
          keyValue: null,
          desp: 'Whether MLO is enabled',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
        {
          id: 747212,
          keyName: '?ssid_mlo',
          keyValue: null,
          desp: 'MLO SSID if supported',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747213,
          keyName: '?encryption_wifi_mlo',
          keyValue: null,
          desp: 'MLO WiFi encryption method.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747214,
          keyName: '?password_wifi_mlo',
          keyValue: null,
          desp: 'MLO WiFi password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17459,
        },
        {
          id: 747215,
          keyName: '?mlo_support',
          keyValue: null,
          desp: 'If MLO is supported',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17459,
        },
      ],
    },
    set_inited_internet: {
      data: {
        id: 17460,
        title: 'set_inited_internet',
        desp: 'set init internet flag',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:29',
        create_time: '2024-11-19T17:55:29',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","ui","set_inited_internet",{"inited_internet":true}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['ui'],
      params: [
        {
          id: 348854,
          keyName: 'inited_internet',
          keyValue: null,
          desp: 'Whether internet has been initernet',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17460,
        },
      ],
      results: [],
    },
  },
  {
    module_name: ['upgrade'],
    upgrade_online: {
      data: {
        id: 17786,
        title: 'upgrade_online',
        desp: 'online upgrade',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","upgrade_online",{"keep_config":true,"keep_package":true,"url":"http://123.com","sha256":"e8f7580ffea1eefc2a228ddcac17aa4c16aae64a751ab2a714f36ceb1e4d2f3a","id":1}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"need_reboot_flag": true}}',
      module_name: ['upgrade'],
      params: [
        {
          id: 348649,
          keyName: 'keep_config',
          keyValue: null,
          desp: 'upgrade the firmware with the configuration saved, when this value is ture',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17786,
        },
        {
          id: 348650,
          keyName: 'keep_package',
          keyValue: null,
          desp: 'upgrade the firmware with the packages saved, when this value is ture',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17786,
        },
        {
          id: 348651,
          keyName: '?url',
          keyValue: null,
          desp: 'the URL for online upgrade',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17786,
        },
        {
          id: 348652,
          keyName: '?sha256',
          keyValue: null,
          desp: 'required when upgrade online',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17786,
        },
        {
          id: 348653,
          keyName: 'id',
          keyValue: null,
          desp: 'upgrade id from cloud platform',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17786,
        },
      ],
      results: [
        {
          id: 746784,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to get the firmware online]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17786,
        },
        {
          id: 746785,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17786,
        },
        {
          id: 746786,
          keyName: 'need_reboot_flag',
          keyValue: null,
          desp: 'device need reboot [true: need reboot]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17786,
        },
      ],
    },
    check_firmware_online: {
      data: {
        id: 17787,
        title: 'check_firmware_online',
        desp: 'get the firmware info',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","check_firmware_online"],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"current_version":"4.000","new_firmware_type":"release","current_type":"relese","publishing_channel":"stable","current_compile_time":"2021-08-11 9:40:45","version_new":"4.001","new_compile_time":"2021-08-13 09:41:35","prompt": true,"release_note":"System:Based on openwrt 19.07.7","upgrade_control":{"not_keep_config":{"version":"4.003","description":"Solve the xxx problem"},"supported_version":"4.001","not_keep_config_part":[{"path":"/etc/config/ssids","description":"Solve the xxx problem"},{"path":"/etc/config/wireless","description":"Solve the xxx problem"}],"user":"general"}}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746787,
          keyName: 'current_version',
          keyValue: null,
          desp: 'get the version of the current firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746788,
          keyName: 'current_compile_time',
          keyValue: null,
          desp: 'get the compile time of the current firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746789,
          keyName: 'current_type',
          keyValue: null,
          desp: 'get the type of the current firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746790,
          keyName: 'new_firmware_type',
          keyValue: null,
          desp: 'get the type of the new firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746791,
          keyName: '?prompt',
          keyValue: null,
          desp: 'prompt [true: pop-up prompt; false: no prompt]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17787,
        },
        {
          id: 746792,
          keyName: '?version_new',
          keyValue: null,
          desp: 'get the latest firmware, return when it is available',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746793,
          keyName: '?new_compile_time',
          keyValue: null,
          desp: 'get the compile time of the latest firmware, return when it is available',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746794,
          keyName: '?release_note',
          keyValue: null,
          desp: 'get the release note, return when it is available',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746795,
          keyName: '?upgrade_control',
          keyValue: null,
          desp: 'get the upgrade_control information of the firmware meta data, return when it is available',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17787,
        },
        {
          id: 746796,
          keyName: '?upgrade_control.not_keep_config',
          keyValue: null,
          desp: 'prompt that the upgrade would not save the configuration and the cause to it',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17787,
        },
        {
          id: 746797,
          keyName: '?upgrade_control.not_keep_config.version',
          keyValue: null,
          desp: 'prompt that the upgrade would not save the configuration, since upgrade to the lower version',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746798,
          keyName: '?upgrade_control.not_keep_config.description',
          keyValue: null,
          desp: 'the upgrade would not save the configuration and the cause to it',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746799,
          keyName: '?upgrade_control.supported_version',
          keyValue: null,
          desp: 'get the lowest supported firmware, prompt upgrade is not supported if lower than this version',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746800,
          keyName: '?upgrade_control.not_keep_config_part',
          keyValue: null,
          desp: 'some configurations would not be saved. Prompt the path of these configurations and the cause to it by the meta data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17787,
        },
        {
          id: 746801,
          keyName: '?upgrade_control.not_keep_config_part.path',
          keyValue: null,
          desp: 'the absolute path of the unsaved configurations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746802,
          keyName: '?upgrade_control.not_keep_config_part.description',
          keyValue: null,
          desp: 'the casue to not save the configurations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746803,
          keyName: '?upgrade_control.user',
          keyValue: null,
          desp: 'for the authority management, 2c refers to general, 2b refers to business',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746804,
          keyName: '?publishing_channel',
          keyValue: null,
          desp: 'to determine whether firmware is stable or RC',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
        {
          id: 746805,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: get url error, -3: get fail -4: not support]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17787,
        },
        {
          id: 746806,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17787,
        },
      ],
    },
    get_online_upgrade_status: {
      data: {
        id: 17788,
        title: 'get_online_upgrade_status',
        desp: 'get online upgrade status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","get_online_upgrade_status"],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"status":1,"status_msg":"downloading","percent":0.02}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746807,
          keyName: 'status',
          keyValue: null,
          desp: 'status [0:idle; 1: downloading; 2: download fail; 3: download success; 4: pass; 5: failed; 6: upgrading; 7: upgrade failed; 9: firmware signature verification failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17788,
        },
        {
          id: 746808,
          keyName: 'status_msg',
          keyValue: null,
          desp: 'the status of the firmware upgrade',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17788,
        },
        {
          id: 746809,
          keyName: '?percent',
          keyValue: null,
          desp: 'return the rate when downloading the firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17788,
        },
      ],
    },
    upgrade_local: {
      data: {
        id: 17789,
        title: 'upgrade_local',
        desp: 'firmware upgrade locally',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","upgrade_local",{"mesh":false,"keep_config":false,"keep_package":false}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['upgrade'],
      params: [
        {
          id: 348654,
          keyName: 'mesh',
          keyValue: null,
          desp: 'this parameter is required for devices support mesh',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17789,
        },
        {
          id: 348655,
          keyName: 'keep_config',
          keyValue: null,
          desp: 'upgrade the firmware with the configuration saved, when this value is ture',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17789,
        },
        {
          id: 348656,
          keyName: 'keep_package',
          keyValue: null,
          desp: 'upgrade the firmware with the packages saved, when this value is ture',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17789,
        },
      ],
      results: [
        {
          id: 746810,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-1: parameter error; -7: the memory is not enough; -8: sub nodes upgrade failed; -9: mesh upgrade failed]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17789,
        },
        {
          id: 746811,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17789,
        },
      ],
    },
    set_config: {
      data: {
        id: 17790,
        title: 'set_config',
        desp: 'setup the config file of firmware upgrade',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","set_config",{"prompt":false,"rc_upgrade":false}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['upgrade'],
      params: [
        {
          id: 348657,
          keyName: '?prompt',
          keyValue: null,
          desp: 'prompt [true: pop-up prompt; false: no prompt]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17790,
        },
        {
          id: 348658,
          keyName: '?rc_upgrade',
          keyValue: null,
          desp: 'rc_upgrade [true: agree RC Test; false: disargee RC Test]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17790,
        },
      ],
      results: [],
    },
    get_config: {
      data: {
        id: 17791,
        title: 'get_config',
        desp: 'get to config of firmware upgrade',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","upgrade","get_config"],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"prompt":false,"rc_upgrade":false}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746812,
          keyName: '?prompt',
          keyValue: null,
          desp: 'prompt [true: pop-up prompt; false: no prompt]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17791,
        },
        {
          id: 746813,
          keyName: '?rc_upgrade',
          keyValue: null,
          desp: 'rc_upgrade [true: agree RC Test; false: disargee RC Test]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17791,
        },
      ],
    },
    check_cellular_online: {
      data: {
        id: 17792,
        title: 'check_cellular_online',
        desp: 'get the cellular new version',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","check_cellular_online",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"current_version":"RM520NGLAAR03A03M4G_01.201.01.201", "current_version_date":"2024-06-15 13:30:17","new_version":"RM520NGLAAR03A03M4G_01.201.01.202","new_version_date":"2024-06-20 15:35:57","download_url":"https://dl.gl-inet.com/cellular/RM520N-GL_AA"}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746814,
          keyName: 'current_version',
          keyValue: null,
          desp: 'get the version of the current cellular',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
        {
          id: 746815,
          keyName: '?current_version_date',
          keyValue: null,
          desp: 'get the current version update time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
        {
          id: 746816,
          keyName: '?new_version',
          keyValue: null,
          desp: 'get the new version of the cellular',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
        {
          id: 746817,
          keyName: '?new_version_date',
          keyValue: null,
          desp: 'get the new version update time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
        {
          id: 746818,
          keyName: '?download_url',
          keyValue: null,
          desp: 'get cellular version download url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
        {
          id: 746819,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17792,
        },
        {
          id: 746820,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17792,
        },
      ],
    },
    upgrade_cellular_online: {
      data: {
        id: 17793,
        title: 'upgrade_cellular_online',
        desp: 'upgrade cellular online',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","upgrade_cellular_online",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746821,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to upgrade cellular]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17793,
        },
        {
          id: 746822,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17793,
        },
      ],
    },
    upgrade_cellular_local: {
      data: {
        id: 17794,
        title: 'upgrade_cellular_local',
        desp: 'upgrade cellular local',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","upgrade_cellular_local",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746823,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to upgrade cellular]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17794,
        },
        {
          id: 746824,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17794,
        },
      ],
    },
    check_cellular_local: {
      data: {
        id: 17795,
        title: 'check_cellular_local',
        desp: 'check cellular local',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","check_cellular_local",{}],"id":1}',
      out_example:
        '{"jsonrpc":"2.0","id":1,"result":{"modem": "RM520NGLAAR01A08M4G", "status": "1", "version": "RM520NGLAAR03A03M4G", "date": "2024081312", "release_note": "# RM520NGLAAR03A03M4G\\n\\n## Overview\\nUpdated cellular version to resolve dialing issues in some areas.\\n\\n## Supported modem\\nRM520GL."}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746825,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to upgrade cellular]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17795,
        },
        {
          id: 746826,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17795,
        },
      ],
    },
    get_cellular_upgrade_status: {
      data: {
        id: 17796,
        title: 'get_cellular_upgrade_status',
        desp: 'get cellular upgrade status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","get_cellular_upgrade_status",{}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{"status":1, "percent":"42.27"}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746827,
          keyName: 'status',
          keyValue: null,
          desp: '0:init 1:downloading 2:download_failed 3:download_ok 4:unzipping 5:unzipping_failed 6:unzipping_ok 7:upgrading 8:upgrade_failed 9:upgrade_ok',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17796,
        },
        {
          id: 746828,
          keyName: '?percent',
          keyValue: null,
          desp: 'return the rate when downloading the firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17796,
        },
        {
          id: 746829,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to upgrade cellular]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17796,
        },
        {
          id: 746830,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17796,
        },
      ],
    },
    reset_cellular_upgrade_status: {
      data: {
        id: 17797,
        title: 'reset_cellular_upgrade_status',
        desp: 'reset cellular upgrade status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","reset_cellular_upgrade_status",{"status":0}],"id":1}',
      out_example: '{"jsonrpc":"2.0","id":1,"result":{}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746831,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code [-2: fail to set upgrade status]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17797,
        },
        {
          id: 746832,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17797,
        },
      ],
    },
    check_firmware_local: {
      data: {
        id: 17798,
        title: 'check_firmware_local',
        desp: 'local firmware verify',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:26',
        create_time: '2024-11-19T17:55:26',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","upgrade","check_firmware_local"],"id":1 }',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"status":9,"firmware_type":"release1","release_note":"###  System：\\n* Based on openwrt 19.07.7  (AR750,AR750S,X750,XE300,MT1300,MT300N-V2)\\n\\n###  SDK\\n* Refactoring the API Framework\\n* Refactoring the UI Framework\\n\\n### Change log\\n* WIFI，客户端，防火墙及升级页面细节优化\\n* AXT1800目标兼容（目前暂未编译）\\n* 修复部分modem及repeater后台问题\\n* 完善部分语言翻译\\n","sha256":"264ce49c1f63e19960f5aa5e06b45d05db219ea560011504e6ca83fee5980500","version":"4.0.0"}}',
      module_name: ['upgrade'],
      params: [],
      results: [
        {
          id: 746833,
          keyName: 'version',
          keyValue: null,
          desp: 'the uploaded firmware version (the value is the version number or unknow)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746834,
          keyName: 'status',
          keyValue: null,
          desp: "status [0: normal; 1: the uploaded firmware version is lower than the current; 2: this firmware would upgrade the kernal, please don't save the configurations; 3: unknow firmware; 4: the uploaded file is too large; 5: the firmware doesn't exist; 6: sysupgraded -T failed; 7: this firmware version is not supported; 8: this firmware is not matched with this device; 9: firmware signature verification failed; 10: unknow error]",
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17798,
        },
        {
          id: 746835,
          keyName: '?release_note',
          keyValue: null,
          desp: 'the release note of this firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746836,
          keyName: '?firmware_type',
          keyValue: null,
          desp: 'the firmware type of this firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746837,
          keyName: 'sha256',
          keyValue: null,
          desp: 'the hash of this firmware',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746838,
          keyName: '?not_keep_config',
          keyValue: null,
          desp: 'prompt that the upgrade would not save the configuration and the cause to it',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746839,
          keyName: '?not_keep_config.version',
          keyValue: null,
          desp: 'prompt that the upgrade would not save the configuration, since upgrade to the lower version',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746840,
          keyName: '?not_keep_config.description',
          keyValue: null,
          desp: 'the upgrade would not save the configuration and the cause to it',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746841,
          keyName: '?not_keep_config_part',
          keyValue: null,
          desp: 'prompt that the upgrade would not save the configuration and the cause to it',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17798,
        },
        {
          id: 746842,
          keyName: '?not_keep_config_part.path',
          keyValue: null,
          desp: 'the absolute path of the unsaved configurations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746843,
          keyName: '?not_keep_config_part.description',
          keyValue: null,
          desp: 'the casue to not save the configurations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
        {
          id: 746844,
          keyName: '?err_code',
          keyValue: null,
          desp: 'error code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17798,
        },
        {
          id: 746845,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17798,
        },
      ],
    },
  },
  {
    module_name: ['vpn-policy'],
    get_global_policy: {
      data: {
        id: 17799,
        title: 'get_global_policy',
        desp: 'get Global Options',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","get_global_policy",{}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"kill_switch":0,"wan_access":0,"service_policy":1}}',
      module_name: ['vpn-policy'],
      params: [],
      results: [
        {
          id: 746846,
          keyName: 'kill_switch',
          keyValue: null,
          desp: 'Whether to block non-VPN traffic (0: not block, 1: block)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17799,
        },
        {
          id: 746847,
          keyName: 'wan_access',
          keyValue: null,
          desp: 'Whether to allow LAN->WAN forwarding traffic (0: not allow, 1: allow)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17799,
        },
        {
          id: 746848,
          keyName: 'service_policy',
          keyValue: null,
          desp: 'Whether to enable glinet service to use VPN of (0: enable 1: disable)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17799,
        },
        {
          id: 746849,
          keyName: 'vpn_server_policy',
          keyValue: null,
          desp: 'VPN cascading (0: enable 1: disable)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17799,
        },
        {
          id: 746850,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17799,
        },
        {
          id: 746851,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17799,
        },
      ],
    },
    set_global_policy: {
      data: {
        id: 17800,
        title: 'set_global_policy',
        desp: 'set Global Options',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","set_global_policy",{"kill_switch":0,"wan_access":0,"service_policy":1,"vpn_server_policy":1}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348659,
          keyName: '?kill_switch',
          keyValue: null,
          desp: 'Whether to block non-VPN traffic (0: not block, 1: block)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17800,
        },
        {
          id: 348660,
          keyName: '?wan_access',
          keyValue: null,
          desp: 'Whether to allow LAN->WAN forwarding traffic (0: not allow, 1: allow)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17800,
        },
        {
          id: 348661,
          keyName: '?service_policy',
          keyValue: null,
          desp: 'Whether to enable glinet service to use VPN of (0: enable 1: disable)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17800,
        },
        {
          id: 348662,
          keyName: '?vpn_server_policy',
          keyValue: null,
          desp: 'VPN cascading (0: enable 1: disable)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17800,
        },
      ],
      results: [
        {
          id: 746852,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17800,
        },
        {
          id: 746853,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17800,
        },
      ],
    },
    set_proxy_mode: {
      data: {
        id: 17801,
        title: 'set_proxy_mode',
        desp: 'set proxy mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","set_proxy_mode",{"mode":0}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348663,
          keyName: 'mode',
          keyValue: null,
          desp: 'Proxy mode (0: global proxy, 1: automatic detection route, 2: custom route, 3: based on IP/domain, 4: based on client device MAC, 5: based on VLAN, ie. lan/guest interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17801,
        },
      ],
      results: [
        {
          id: 746854,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17801,
        },
        {
          id: 746855,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17801,
        },
      ],
    },
    get_proxy_mode: {
      data: {
        id: 17802,
        title: 'get_proxy_mode',
        desp: 'get proxy mode',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","get_proxy_mode",{}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"mode":0}}',
      module_name: ['vpn-policy'],
      params: [],
      results: [
        {
          id: 746856,
          keyName: 'mode',
          keyValue: null,
          desp: 'Proxy mode (0: global proxy, 1: automatic detection route, 2: custom route, 3: based on IP/domain, 4: based on client device MAC, 5: based on VLAN, ie. lan/guest interface)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17802,
        },
        {
          id: 746857,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17802,
        },
        {
          id: 746858,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17802,
        },
      ],
    },
    set_domain_policy: {
      data: {
        id: 17803,
        title: 'set_domain_policy',
        desp: 'set domain policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","set_domain_policy",{"default_policy":0,"domain_list":["google.com","facebook.com"]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348664,
          keyName: 'default_policy',
          keyValue: null,
          desp: 'Policy for domain/ip list (0: use vpn, 1: not use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17803,
        },
        {
          id: 348665,
          keyName: 'domain_list',
          keyValue: null,
          desp: 'Domain/ip list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17803,
        },
        {
          id: 348666,
          keyName: 'manual',
          keyValue: null,
          desp: 'Whether input domain list manually (0: get domain list by url, 1: input domain list manually)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17803,
        },
        {
          id: 348667,
          keyName: 'url',
          keyValue: null,
          desp: 'url to get domain list from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17803,
        },
      ],
      results: [
        {
          id: 746859,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17803,
        },
        {
          id: 746860,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17803,
        },
      ],
    },
    check_domain_online: {
      data: {
        id: 17804,
        title: 'check_domain_online',
        desp: 'check online domain list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","check_domain_online",{"url":"http://192.168.8.106:8080/url.txt"}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348668,
          keyName: 'url',
          keyValue: null,
          desp: 'Url to get domain list from',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17804,
        },
      ],
      results: [
        {
          id: 746861,
          keyName: '?success',
          keyValue: null,
          desp: 'Success count',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17804,
        },
        {
          id: 746862,
          keyName: '?failed',
          keyValue: null,
          desp: 'Failed count',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17804,
        },
        {
          id: 746863,
          keyName: '?invalid_lines',
          keyValue: null,
          desp: 'The number of failed lines detected in the Url',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17804,
        },
        {
          id: 746864,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17804,
        },
        {
          id: 746865,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17804,
        },
      ],
    },
    get_domain_policy: {
      data: {
        id: 17805,
        title: 'get_domain_policy',
        desp: 'get domain policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","get_domain_policy",{}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"default_policy":0,"domain_list":["google.com","facebook.com"]}}',
      module_name: ['vpn-policy'],
      params: [],
      results: [
        {
          id: 746866,
          keyName: 'default_policy',
          keyValue: null,
          desp: 'Policy for domain/ip list (0: use vpn, 1: not use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17805,
        },
        {
          id: 746867,
          keyName: 'domain_list',
          keyValue: null,
          desp: 'Domain/ip list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17805,
        },
        {
          id: 746868,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17805,
        },
        {
          id: 746869,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17805,
        },
      ],
    },
    set_mac_policy: {
      data: {
        id: 17806,
        title: 'set_mac_policy',
        desp: 'set MAC policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","set_mac_policy",{"default_policy":0,"mac_list":["94:83:C4:0E:10:DF","94:83:C4:0E:20:DF"]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348669,
          keyName: 'default_policy',
          keyValue: null,
          desp: 'Policy for MAC list (0: use vpn, 1: not use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17806,
        },
        {
          id: 348670,
          keyName: 'mac_list',
          keyValue: null,
          desp: 'MAC list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17806,
        },
      ],
      results: [
        {
          id: 746870,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17806,
        },
        {
          id: 746871,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17806,
        },
      ],
    },
    get_mac_policy: {
      data: {
        id: 17807,
        title: 'get_mac_policy',
        desp: 'get MAC policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","get_mac_policy",{}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"default_policy":0,"mac_list":["94:83:C4:0E:10:DF","94:83:C4:0E:20:DF"]}}',
      module_name: ['vpn-policy'],
      params: [],
      results: [
        {
          id: 746872,
          keyName: 'default_policy',
          keyValue: null,
          desp: 'Policy for MAC list (0: use vpn, 1: not use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17807,
        },
        {
          id: 746873,
          keyName: 'mac_list',
          keyValue: null,
          desp: 'MAC list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17807,
        },
        {
          id: 746874,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17807,
        },
        {
          id: 746875,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17807,
        },
      ],
    },
    set_vlan_policy: {
      data: {
        id: 17808,
        title: 'set_vlan_policy',
        desp: 'set vlan policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","set_vlan_policy",{"vlans":[{"id":1,"vpn":0},{"id":2,"vpn":0}]}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['vpn-policy'],
      params: [
        {
          id: 348671,
          keyName: 'vlans',
          keyValue: null,
          desp: 'vlan array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17808,
        },
        {
          id: 348672,
          keyName: '?vlans.id',
          keyValue: null,
          desp: 'vlan id(1:private, 2:guest)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17808,
        },
        {
          id: 348673,
          keyName: '?vlans.vpn',
          keyValue: null,
          desp: 'Whether to use vpn(0: not use vpn, 1: use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17808,
        },
      ],
      results: [
        {
          id: 746876,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(-1: parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17808,
        },
        {
          id: 746877,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17808,
        },
      ],
    },
    get_vlan_policy: {
      data: {
        id: 17809,
        title: 'get_vlan_policy',
        desp: 'get vlan policy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","vpn-policy","get_vlan_policy",{}]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"vlans":[{"id":1,"vpn":0},{"id":2,"vpn":0}]}}',
      module_name: ['vpn-policy'],
      params: [],
      results: [
        {
          id: 746878,
          keyName: 'vlans',
          keyValue: null,
          desp: 'vlan array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17809,
        },
        {
          id: 746879,
          keyName: '?vlans.id',
          keyValue: null,
          desp: 'vlan id(1:private, 2:guest)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17809,
        },
        {
          id: 746880,
          keyName: '?vlans.vpn',
          keyValue: null,
          desp: 'Whether to use vpn(0: not use vpn, 1: use vpn)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17809,
        },
        {
          id: 746881,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17809,
        },
        {
          id: 746882,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17809,
        },
      ],
    },
  },
  {
    module_name: ['wg-client'],
    get_recommend_config: {
      data: {
        id: 17810,
        title: 'get_recommend_config',
        desp: 'get recommend config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_recommend_config",{"group_id": 2312, "country_name":["Australia","Brazil"]}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348674,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17810,
        },
        {
          id: 348675,
          keyName: 'country_name',
          keyValue: null,
          desp: 'country name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17810,
        },
      ],
      results: [
        {
          id: 746883,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：uci config missing 12：group missing 13：password missing 14：country info empty 15：unknown provider)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17810,
        },
        {
          id: 746884,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17810,
        },
      ],
    },
    get_third_config: {
      data: {
        id: 17811,
        title: 'get_third_config',
        desp: "get third provider's client config",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_third_config",{"group_id":2312,"username":"glinet","password":"123456"}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"countries":[{"country_name":"Australia","server_count":11},{"country_name":"Brazil","server_count":5}]}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348676,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17811,
        },
        {
          id: 348677,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17811,
        },
        {
          id: 348678,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17811,
        },
      ],
      results: [
        {
          id: 746885,
          keyName: '?countries',
          keyValue: null,
          desp: 'country array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17811,
        },
        {
          id: 746886,
          keyName: '?countries.country_name',
          keyValue: null,
          desp: 'country name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17811,
        },
        {
          id: 746887,
          keyName: '?countries.server_count',
          keyValue: null,
          desp: 'number of server',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17811,
        },
        {
          id: 746888,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：Invalid name length (more than 64 bytes) 12：name empty 13：uci config missing 14: password missing 15：Failed to get azirevpn configuration 16：invalid username or password 17：unknown provider 18: azirevpn IP limit reached)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17811,
        },
        {
          id: 746889,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17811,
        },
      ],
    },
    add_config: {
      data: {
        id: 17812,
        title: 'add_config',
        desp: 'add wireguard client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","add_config",{"group_id":3212,"name":"test","address_v4":"10.8.0.0/24","address_v6":"fd00:db8:0:123::/64","private_key":"XVpIdr+oYjTcgDwzSZmNa1nSsk8JO+tx1NBo17LDBAI=","allowed_ips":"0.0.0.0/0,::/0","end_point":"103.231.88.18:3102","public_key":"zv0p34WZN7p2vIgehwe33QF27ExjChrPUisk481JHU0=","dns":"193.138.219.228","presharedkey_enable":false,"listen_port":22536,"persistent_keepalive":25,"mtu":1420,"ipv6_enable":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"peer_id":1921}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348679,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
        {
          id: 348680,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348681,
          keyName: 'address_v4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348682,
          keyName: '?address_v6',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348683,
          keyName: '?ipv6_enable',
          keyValue: null,
          desp: 'enable IPv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17812,
        },
        {
          id: 348684,
          keyName: '?listen_port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
        {
          id: 348685,
          keyName: 'private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348686,
          keyName: 'allowed_ips',
          keyValue: null,
          desp: 'allowed ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348687,
          keyName: 'end_point',
          keyValue: null,
          desp: 'endpoint(server ip/domain)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348688,
          keyName: 'public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348689,
          keyName: '?persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
        {
          id: 348690,
          keyName: '?dns',
          keyValue: null,
          desp: 'dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348691,
          keyName: 'presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17812,
        },
        {
          id: 348692,
          keyName: '?preshared_key',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
        {
          id: 348693,
          keyName: '?mtu',
          keyValue: null,
          desp: 'mtu',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
      ],
      results: [
        {
          id: 746890,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
        {
          id: 746891,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(19：parameter missing 20：too long 21：empty name 22：uci config missing 23：invalid port)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17812,
        },
        {
          id: 746892,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17812,
        },
      ],
    },
    set_config: {
      data: {
        id: 17813,
        title: 'set_config',
        desp: "modify specific client's config",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","set_config",{"group_id":3212,"peer_id":1254,"name":"test","address_v4":"10.8.0.0/24","address_v6":"fd00:db8:0:123::/64","private_key":"XVpIdr+oYjTcgDwzSZmNa1nSsk8JO+tx1NBo17LDBAI=","allowed_ips":"0.0.0.0/0,::/0","end_point":"103.231.88.18:3102","public_key":"zv0p34WZN7p2vIgehwe33QF27ExjChrPUisk481JHU0=","dns":"193.138.219.228","presharedkey_enable":false,"listen_port":22536,"persistent_keepalive":25,"mtu":1420,"ipv6_enable":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348694,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
        {
          id: 348695,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
        {
          id: 348696,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348697,
          keyName: 'address_v4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348698,
          keyName: '?address_v6',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348699,
          keyName: '?ipv6_enable',
          keyValue: null,
          desp: 'enable IPv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17813,
        },
        {
          id: 348700,
          keyName: '?listen_port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
        {
          id: 348701,
          keyName: 'private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348702,
          keyName: 'allowed_ips',
          keyValue: null,
          desp: 'allowed ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348703,
          keyName: 'end_point',
          keyValue: null,
          desp: 'endpoint(server ip/domain)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348704,
          keyName: 'public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348705,
          keyName: '?persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
        {
          id: 348706,
          keyName: '?dns',
          keyValue: null,
          desp: 'dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348707,
          keyName: 'presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17813,
        },
        {
          id: 348708,
          keyName: '?preshared_key',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
        {
          id: 348709,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
      ],
      results: [
        {
          id: 746893,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(31：parameter missing 32：too long 33：name empty 34：uci config missing 35：invalid port)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17813,
        },
        {
          id: 746894,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17813,
        },
      ],
    },
    remove_config: {
      data: {
        id: 17814,
        title: 'remove_config',
        desp: 'remove wireguard client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","remove_config",{"group_id":3212,"peer_id":1254}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348710,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17814,
        },
        {
          id: 348711,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17814,
        },
      ],
      results: [
        {
          id: 746895,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(43：parameter missing 44：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17814,
        },
        {
          id: 746896,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17814,
        },
      ],
    },
    clear_config_list: {
      data: {
        id: 17815,
        title: 'clear_config_list',
        desp: 'remove all wireguard client config of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","clear_config_list",{"group_id":3212,"delete_key":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348712,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17815,
        },
      ],
      results: [
        {
          id: 746897,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing 41：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17815,
        },
        {
          id: 746898,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17815,
        },
      ],
    },
    clear_user_pass: {
      data: {
        id: 17816,
        title: 'clear_user_pass',
        desp: 'remove all wireguard client config of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","clear_user_pass",{"group_id":3212,"delete_key":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348713,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17816,
        },
      ],
      results: [
        {
          id: 746899,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing 41：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17816,
        },
        {
          id: 746900,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17816,
        },
      ],
    },
    get_config_list: {
      data: {
        id: 17817,
        title: 'get_config_list',
        desp: 'get wireguard client config list of a group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_config_list",{"group_id":3212}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"auth_type":2,"public_key":"NjUxYTE3NzZiMjczNGMzNjg2MmNiMmNhMTBkZGYyYTQ=","peers":[{"peer_id":1254,"address_v4":"10.8.0.0/24","ipv6_enable":true,"address_v6":"fd00:db8:0:123::/64","name":"mullvad_au4","allowed_ips":"0.0.0.0/0,::/0","dns":"193.138.219.228","end_point":"103.231.88.2:3100","listen_port":22536,"mtu":1380,"persistent_keepalive":25,"private_key":"EHwE7Aiiup/lxVEAKlofJmmMfQZkHTmmEy3xcAcIn2I=","public_key":"kXXykjh6KqiE/pvtmTV8kCB+jhhkl9kT0Dg+yyDz8hg=","presharedkey_enable":false,"location":"Australia, Melbourne"}]}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348714,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
      ],
      results: [
        {
          id: 746901,
          keyName: 'auth_type',
          keyValue: null,
          desp: 'Authentication type - 0: no username/password or account required 1: username/password 2: account',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746902,
          keyName: '?public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746903,
          keyName: 'peers',
          keyValue: null,
          desp: 'peer array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17817,
        },
        {
          id: 746904,
          keyName: 'peers.peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746905,
          keyName: 'peers.address_v4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746906,
          keyName: 'peers.ipv6_enable',
          keyValue: null,
          desp: 'enable IPv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17817,
        },
        {
          id: 746907,
          keyName: '?peers.address_v6',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746908,
          keyName: 'peers.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746909,
          keyName: '?peers.allowed_ips',
          keyValue: null,
          desp: 'allowips',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746910,
          keyName: 'peers.dns',
          keyValue: null,
          desp: 'dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746911,
          keyName: 'peers.end_point',
          keyValue: null,
          desp: 'endpoint',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746912,
          keyName: 'peers.listen_port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746913,
          keyName: '?peers.mtu',
          keyValue: null,
          desp: 'mtu',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746914,
          keyName: 'peers.persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746915,
          keyName: 'peers.presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17817,
        },
        {
          id: 746916,
          keyName: '?peers.presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746917,
          keyName: 'peers.private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746918,
          keyName: 'peers.public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746919,
          keyName: '?peers.location',
          keyValue: null,
          desp: 'server location',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
        {
          id: 746920,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17817,
        },
        {
          id: 746921,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17817,
        },
      ],
    },
    start: {
      data: {
        id: 17818,
        title: 'start',
        desp: 'start wireguard client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","start",{"group_id":3212,"peer_id":1254}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348715,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17818,
        },
        {
          id: 348716,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17818,
        },
      ],
      results: [
        {
          id: 746922,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(51：parameter missing 52：vpn conflict 53：obsolete 54：wgclient not installed 55：init script missing 56：uci config missing 57：client not found)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17818,
        },
        {
          id: 746923,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17818,
        },
      ],
    },
    stop: {
      data: {
        id: 17819,
        title: 'stop',
        desp: 'stop wireguard client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","wg-client","stop",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [],
      results: [
        {
          id: 746924,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17819,
        },
        {
          id: 746925,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17819,
        },
      ],
    },
    get_status: {
      data: {
        id: 17820,
        title: 'get_status',
        desp: 'get the wireguard client status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"group_id":2312, "peer_id":5712, "name":"mullvad_ae_all", "proxy":false, "log":"", "status":1, "ipv4":"10.70.33.3", "ipv6":"fc00:bbbb:bb01::11", "rx_bytes":50, "tx_bytes":45, "port":41348, "domain":"ae-dxb-001.mullvad.net"}}',
      module_name: ['wg-client'],
      params: [],
      results: [
        {
          id: 746926,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746927,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer ID',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746928,
          keyName: 'name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
        {
          id: 746929,
          keyName: 'proxy',
          keyValue: null,
          desp: 'proxy',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17820,
        },
        {
          id: 746930,
          keyName: 'log',
          keyValue: null,
          desp: 'log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
        {
          id: 746931,
          keyName: 'ipv4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
        {
          id: 746932,
          keyName: '?ipv6',
          keyValue: null,
          desp: 'IPV6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
        {
          id: 746933,
          keyName: 'domain',
          keyValue: null,
          desp: 'server domain/ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
        {
          id: 746934,
          keyName: 'port',
          keyValue: null,
          desp: 'server listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746935,
          keyName: 'status',
          keyValue: null,
          desp: 'status 0:not start 1:connected 2:connecting',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746936,
          keyName: 'rx_bytes',
          keyValue: null,
          desp: 'rx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746937,
          keyName: 'tx_bytes',
          keyValue: null,
          desp: 'tx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746938,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17820,
        },
        {
          id: 746939,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17820,
        },
      ],
    },
    check_config: {
      data: {
        id: 17821,
        title: 'check_config',
        desp: "Check uploaded wireguard file's parameter",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","check_config",{"group_id":2312,"filename":"mullvad-at4.conf"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"passed": [], "unpassed": []}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348717,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17821,
        },
        {
          id: 348718,
          keyName: 'filename',
          keyValue: null,
          desp: 'file name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17821,
        },
      ],
      results: [
        {
          id: 746940,
          keyName: '?passed',
          keyValue: null,
          desp: 'legal config file list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17821,
        },
        {
          id: 746941,
          keyName: '?unpassed',
          keyValue: null,
          desp: 'illegal config file list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17821,
        },
        {
          id: 746942,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing,16:decompression failure)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17821,
        },
        {
          id: 746943,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17821,
        },
      ],
    },
    confirm_config: {
      data: {
        id: 17822,
        title: 'confirm_config',
        desp: 'confirm wireguard client config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","confirm_config",{"group_id":2312}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348719,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17822,
        },
      ],
      results: [
        {
          id: 746944,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17822,
        },
        {
          id: 746945,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17822,
        },
      ],
    },
    add_group: {
      data: {
        id: 17823,
        title: 'add_group',
        desp: 'add wireguard client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","add_group",{"group_name":"mullvad"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348720,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17823,
        },
      ],
      results: [
        {
          id: 746946,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17823,
        },
        {
          id: 746947,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17823,
        },
      ],
    },
    remove_group: {
      data: {
        id: 17824,
        title: 'remove_group',
        desp: 'remove wireguard client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","remove_group",{"group_id":3212}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348721,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17824,
        },
      ],
      results: [
        {
          id: 746948,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing 41：client in running)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17824,
        },
        {
          id: 746949,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17824,
        },
      ],
    },
    set_group: {
      data: {
        id: 17825,
        title: 'set_group',
        desp: 'modify wireguard client group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","set_group",{"group_id":3212,"group_name":"mullvad"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348722,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17825,
        },
        {
          id: 348723,
          keyName: 'group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17825,
        },
      ],
      results: [
        {
          id: 746950,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17825,
        },
        {
          id: 746951,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17825,
        },
      ],
    },
    get_group_list: {
      data: {
        id: 17826,
        title: 'get_group_list',
        desp: 'get wireguard client group list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_group_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"groups": [{"group_id":3212,"group_name":"mullvad","peer_count":20,"group_type":1,"procedure":1},{"group_id":3213,"group_name":"azirevpn","peer_count":25,"group_type":1,"procedure":0}]}}',
      module_name: ['wg-client'],
      params: [],
      results: [
        {
          id: 746952,
          keyName: 'groups',
          keyValue: null,
          desp: 'group array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17826,
        },
        {
          id: 746953,
          keyName: 'groups.group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746954,
          keyName: 'groups.group_type',
          keyValue: null,
          desp: 'group type 1:preconfigured group 2:manually added group 3:group added by app',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746955,
          keyName: 'groups.group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17826,
        },
        {
          id: 746956,
          keyName: 'groups.auth_type',
          keyValue: null,
          desp: 'Authentication type - 0: no username/password or account required 1: username/password 2: account',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746957,
          keyName: '?groups.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17826,
        },
        {
          id: 746958,
          keyName: '?groups.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17826,
        },
        {
          id: 746959,
          keyName: 'groups.peer_count',
          keyValue: null,
          desp: 'number of peers',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746960,
          keyName: '?groups.procedure',
          keyValue: null,
          desp: 'procedure 0:directly download 1:step by step download',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746961,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17826,
        },
        {
          id: 746962,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17826,
        },
      ],
    },
    get_all_config_list: {
      data: {
        id: 17827,
        title: 'get_all_config_list',
        desp: 'get wireguard client config list of all groups',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_all_config_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"config_list":[{"group_id":2312,"group_name":"mullvad","auth_type":1,"username":"glinet","password":123456,"peers":[{"peer_id":1254,"address_v4":"10.8.0.0/24","ipv6_enable":true,"address_v6":"fd00:db8:0:123::/64","name":"mullvad_au4","allowed_ips":"0.0.0.0/0,::/0","dns":"193.138.219.228","end_point":"103.231.88.2:3100","listen_port":22536,"mtu":1380,"persistent_keepalive":25,"private_key":"EHwE7Aiiup/lxVEAKlofJmmMfQZkHTmmEy3xcAcIn2I=","public_key":"kXXykjh6KqiE/pvtmTV8kCB+jhhkl9kT0Dg+yyDz8hg=","presharedkey_enable":false,"location":"Australia, Melbourne"}]}]}}',
      module_name: ['wg-client'],
      params: [],
      results: [
        {
          id: 746963,
          keyName: 'config_list',
          keyValue: null,
          desp: 'group section',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17827,
        },
        {
          id: 746964,
          keyName: 'config_list.group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746965,
          keyName: 'config_list.group_name',
          keyValue: null,
          desp: 'group name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746966,
          keyName: 'config_list.auth_type',
          keyValue: null,
          desp: 'Authentication type - 0: no username/password or account required 1: username/password 2: account',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746967,
          keyName: '?config_list.username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746968,
          keyName: '?config_list.password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746969,
          keyName: 'config_list.peers',
          keyValue: null,
          desp: 'peers array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17827,
        },
        {
          id: 746970,
          keyName: 'config_list.peers.peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746971,
          keyName: 'config_list.peers.address_v4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746972,
          keyName: 'config_list.peers.ipv6_enable',
          keyValue: null,
          desp: 'enable IPv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17827,
        },
        {
          id: 746973,
          keyName: '?config_list.peers.address_v6',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746974,
          keyName: 'config_list.peers.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746975,
          keyName: '?config_list.peers.allowed_ips',
          keyValue: null,
          desp: 'allowips',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746976,
          keyName: 'config_list.peers.dns',
          keyValue: null,
          desp: 'dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746977,
          keyName: 'config_list.peers.end_point',
          keyValue: null,
          desp: 'endpoint',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746978,
          keyName: 'config_list.peers.listen_port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746979,
          keyName: 'config_list.peers.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746980,
          keyName: 'config_list.peers.persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746981,
          keyName: 'config_list.peers.presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17827,
        },
        {
          id: 746982,
          keyName: '?config_list.peers.presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746983,
          keyName: 'config_list.peers.private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746984,
          keyName: 'config_list.peers.public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746985,
          keyName: '?config_list.peers.location',
          keyValue: null,
          desp: 'server location',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
        {
          id: 746986,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(49：empty output 50：client not found)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17827,
        },
        {
          id: 746987,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17827,
        },
      ],
    },
    set_proxy: {
      data: {
        id: 17828,
        title: 'set_proxy',
        desp: 'set wireguard client proxy',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","set_proxy",{"enable":true}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348724,
          keyName: 'enable',
          keyValue: null,
          desp: 'Enable or disable global proxy',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17828,
        },
      ],
      results: [],
    },
    add_route: {
      data: {
        id: 17829,
        title: 'add_route',
        desp: 'add wireguard client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","add_route",{"group_id":3213,"peer_id":5715,"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348725,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 348726,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 348727,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 348728,
          keyName: 'dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17829,
        },
        {
          id: 348729,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17829,
        },
        {
          id: 348730,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 348731,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 348732,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17829,
        },
      ],
      results: [
        {
          id: 746988,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17829,
        },
        {
          id: 746989,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17829,
        },
      ],
    },
    set_route: {
      data: {
        id: 17830,
        title: 'set_route',
        desp: 'set wireguard client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","set_route",{"group_id":3213,"peer_id":5715,"route_flag":4,"rule_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348733,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348734,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348735,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348736,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348737,
          keyName: '?dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17830,
        },
        {
          id: 348738,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17830,
        },
        {
          id: 348739,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348740,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 348741,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17830,
        },
      ],
      results: [
        {
          id: 746990,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17830,
        },
        {
          id: 746991,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17830,
        },
      ],
    },
    get_route_list: {
      data: {
        id: 17831,
        title: 'get_route_list',
        desp: 'get wireguard client custom route list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_route_list",{"group_id":3213,"peer_id":5715}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ipv4_route_rules":[{"route_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"ipv6_route_rules":[{"route_id":6515,"dest":"ff00::/8","gateway":"ff00::1","metric":20,"mtu":1500}]}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348742,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 348743,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
      ],
      results: [
        {
          id: 746992,
          keyName: 'ipv4_route_rules',
          keyValue: null,
          desp: 'ipv4 route rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17831,
        },
        {
          id: 746993,
          keyName: 'ipv4_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 746994,
          keyName: 'ipv4_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 746995,
          keyName: '?ipv4_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 746996,
          keyName: '?ipv4_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 746997,
          keyName: '?ipv4_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 746998,
          keyName: '?ipv4_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 746999,
          keyName: 'ipv6_route_rules',
          keyValue: null,
          desp: 'ipv6 route rule array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17831,
        },
        {
          id: 747000,
          keyName: 'ipv6_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 747001,
          keyName: 'ipv6_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 747002,
          keyName: '?ipv6_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 747003,
          keyName: '?ipv6_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 747004,
          keyName: '?ipv6_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 747005,
          keyName: '?ipv6_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
        {
          id: 747006,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17831,
        },
        {
          id: 747007,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17831,
        },
      ],
    },
    remove_route: {
      data: {
        id: 17832,
        title: 'remove_route',
        desp: 'remove wireguard client custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","remove_route",{"group_id":3213,"peer_id":5715,"route_flag":4,"rule_id":6512}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348744,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17832,
        },
        {
          id: 348745,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17832,
        },
        {
          id: 348746,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17832,
        },
        {
          id: 348747,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17832,
        },
      ],
      results: [
        {
          id: 747008,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17832,
        },
        {
          id: 747009,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17832,
        },
      ],
    },
    set_setting: {
      data: {
        id: 17833,
        title: 'set_setting',
        desp: 'set wireguard client setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","set_setting",{"group_id":3213,"peer_id":5715,"local_access":true,"masq":true,"default_metric":30,"mtu":1460}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348748,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17833,
        },
        {
          id: 348749,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17833,
        },
        {
          id: 348750,
          keyName: '?local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17833,
        },
        {
          id: 348751,
          keyName: '?masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17833,
        },
        {
          id: 348752,
          keyName: '?default_metric',
          keyValue: null,
          desp: 'default metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17833,
        },
        {
          id: 348753,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17833,
        },
      ],
      results: [
        {
          id: 747010,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17833,
        },
        {
          id: 747011,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17833,
        },
      ],
    },
    get_setting: {
      data: {
        id: 17834,
        title: 'get_setting',
        desp: 'get wireguard client setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-client","get_setting",{"group_id":3213,"peer_id":5715}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"local_access":true,"masq":true,"default_metric":30,"mtu":1460}}',
      module_name: ['wg-client'],
      params: [
        {
          id: 348754,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17834,
        },
        {
          id: 348755,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17834,
        },
      ],
      results: [
        {
          id: 747012,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17834,
        },
        {
          id: 747013,
          keyName: 'masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17834,
        },
        {
          id: 747014,
          keyName: 'default_metric',
          keyValue: null,
          desp: 'default metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17834,
        },
        {
          id: 747015,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17834,
        },
        {
          id: 747016,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(40：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17834,
        },
        {
          id: 747017,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17834,
        },
      ],
    },
  },
  {
    module_name: ['wg-server'],
    start: {
      data: {
        id: 17843,
        title: 'start',
        desp: 'Start the wireguard server',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","wg-server","start",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747047,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(4：vpn conflict 5：obsolete 6：in running 7：wg not installed 8：init script missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17843,
        },
        {
          id: 747048,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17843,
        },
      ],
    },
    get_status: {
      data: {
        id: 17844,
        title: 'get_status',
        desp: 'Get wireguard server status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","get_status",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"server":{"status": 1,"initialization":true,"log":"","tunnel_ip":"10.9.0.0/24, fc00:bbbb:bb01::/96","rx_bytes":245,"tx_bytes":168},"peers":[{"name":"sample","status":1,"private_ip":"10.8.0.2/32","public_ip":"145.155.54.184","latest_handshake":"24 seconds ago","rx_bytes":149,"tx_bytes":92}]}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747049,
          keyName: 'server',
          keyValue: null,
          desp: 'server info',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17844,
        },
        {
          id: 747050,
          keyName: 'initialization',
          keyValue: null,
          desp: 'whether initialized',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17844,
        },
        {
          id: 747051,
          keyName: 'log',
          keyValue: null,
          desp: 'log',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747052,
          keyName: 'tunnel_ip',
          keyValue: null,
          desp: 'tunnel ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747053,
          keyName: 'rx_bytes',
          keyValue: null,
          desp: 'rx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747054,
          keyName: 'tx_bytes',
          keyValue: null,
          desp: 'tx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747055,
          keyName: 'peers',
          keyValue: null,
          desp: 'peer array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17844,
        },
        {
          id: 747056,
          keyName: 'peers.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747057,
          keyName: 'peers.status',
          keyValue: null,
          desp: 'status 0:offline 1:online',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747058,
          keyName: 'peers.private_ip',
          keyValue: null,
          desp: 'private ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747059,
          keyName: 'peers.public_ip',
          keyValue: null,
          desp: 'public ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747060,
          keyName: 'peers.latest_handshake',
          keyValue: null,
          desp: 'latest handshake',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
        {
          id: 747061,
          keyName: 'peers.rx_bytes',
          keyValue: null,
          desp: 'rx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747062,
          keyName: 'peers.tx_bytes',
          keyValue: null,
          desp: 'tx bytes',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747063,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17844,
        },
        {
          id: 747064,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17844,
        },
      ],
    },
    stop: {
      data: {
        id: 17845,
        title: 'stop',
        desp: 'Stop wireguard server',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","method":"call","params":["","wg-server","stop",{}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747065,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17845,
        },
        {
          id: 747066,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17845,
        },
      ],
    },
    set_config: {
      data: {
        id: 17846,
        title: 'set_config',
        desp: 'Set the wireguard server config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","set_config",{"ipv6_enable":true,"address_v4":"10.8.0.0/24","address_v6":"fd00:db8:0:abc::/64","port":51820,"private_key":"XVpIdr+oYjTcgDwzSZmNa1nSsk8JO+tx1NBo17LDBAI="}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348780,
          keyName: '?ipv6_enable',
          keyValue: null,
          desp: 'enable ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17846,
        },
        {
          id: 348781,
          keyName: 'address_v4',
          keyValue: null,
          desp: 'ipv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17846,
        },
        {
          id: 348782,
          keyName: '?address_v6',
          keyValue: null,
          desp: 'ipv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17846,
        },
        {
          id: 348783,
          keyName: 'port',
          keyValue: null,
          desp: 'port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17846,
        },
        {
          id: 348784,
          keyName: '?private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17846,
        },
      ],
      results: [
        {
          id: 747067,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(9：parameter missing 10：uci config missing 11：invalid port 12：invalid IP address 13：server ip conflicts with local ip 14：IPv6 address error 15：port occupied 16：failed to generate public key)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17846,
        },
        {
          id: 747068,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17846,
        },
      ],
    },
    get_config: {
      data: {
        id: 17847,
        title: 'get_config',
        desp: 'Get the server config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","get_config",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"port": 51820, "address_v4": "10.8.0.0/24", "address_v6": "fd00:db8:0:123::/64", "local_access": false, "public_key":"izv0p34WZN7p2vIgehwe33QF27ExjChrPUisk481JHU0=","initialization":true,"ipv6_enable":false}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747069,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17847,
        },
        {
          id: 747070,
          keyName: 'address_v4',
          keyValue: null,
          desp: 'IPv4 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17847,
        },
        {
          id: 747071,
          keyName: 'address_v6',
          keyValue: null,
          desp: 'IPv6 address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17847,
        },
        {
          id: 747072,
          keyName: '?port',
          keyValue: null,
          desp: 'port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17847,
        },
        {
          id: 747073,
          keyName: 'public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17847,
        },
        {
          id: 747074,
          keyName: 'private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17847,
        },
        {
          id: 747075,
          keyName: 'initialization',
          keyValue: null,
          desp: 'whether initialized',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17847,
        },
        {
          id: 747076,
          keyName: 'ipv6_enable',
          keyValue: null,
          desp: 'enable ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17847,
        },
        {
          id: 747077,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(15：wg not installed 16：uci config missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17847,
        },
        {
          id: 747078,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17847,
        },
      ],
    },
    get_peer_list: {
      data: {
        id: 17848,
        title: 'get_peer_list',
        desp: 'Get the peer list of the wireguard client',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","get_peer_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"peers":[{"name":"sample","client_ip":"10.0.0.2/32","listen_port":50436,"private_key":"oOMRHz5wTf5Gq6TPnpXLKIOhy54wx5XO7/4nquChIFI=","dns":"64.6.64.6","end_point":"116.77.73.248:51820","public_key":"m7pNpcTJxf2gqpmgSa3dCMgY0c2nP5rXHV7ume0/uzs=","allowed_ips":"0.0.0.0/0","persistent_keepalive":25,"mtu":1420,"peer_id":2844,"presharedkey_enable":true,"presharedkey":"wKaBacfDah7EXNzIq9AbpHso4NUncS6M7NKPViUWxc0=","deprecated":0}]}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747079,
          keyName: 'peers',
          keyValue: null,
          desp: 'peer array',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17848,
        },
        {
          id: 747080,
          keyName: 'peers.name',
          keyValue: null,
          desp: 'name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747081,
          keyName: 'peers.client_ip',
          keyValue: null,
          desp: 'client tunnel ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747082,
          keyName: 'peers.dns',
          keyValue: null,
          desp: 'dns',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747083,
          keyName: 'peers.allowed_ips',
          keyValue: null,
          desp: 'allowed IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747084,
          keyName: 'peers.end_point',
          keyValue: null,
          desp: 'not used',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747085,
          keyName: 'peers.listen_port',
          keyValue: null,
          desp: 'listen port',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747086,
          keyName: 'peers.persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747087,
          keyName: 'peers.private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747088,
          keyName: 'peers.public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
        {
          id: 747089,
          keyName: 'peers.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747090,
          keyName: 'peers.peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747091,
          keyName: 'peers.presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17848,
        },
        {
          id: 747092,
          keyName: '?peers.presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747093,
          keyName: 'peers.deprecated',
          keyValue: null,
          desp: 'whether the peer is available (0: available 1: unavailable)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747094,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17848,
        },
        {
          id: 747095,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17848,
        },
      ],
    },
    remove_peer: {
      data: {
        id: 17849,
        title: 'remove_peer',
        desp: 'Remove wireguard peer by name',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","remove_peer",{"peer_id":2284}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348785,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17849,
        },
      ],
      results: [
        {
          id: 747096,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(19：parameter missing 20：client not found)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17849,
        },
        {
          id: 747097,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17849,
        },
      ],
    },
    add_peer: {
      data: {
        id: 17850,
        title: 'add_peer',
        desp: 'Add new peer',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","add_peer",{"name":"test","presharedkey_enable":true,"presharedkey":"","allowed_ips":["0.0.0.0/0,::/0"],"dns":"64.6.64.6","mtu":1420,"persistent_keepalive":25}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {"peer_id":1921}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348786,
          keyName: 'name',
          keyValue: null,
          desp: 'Wireguard peer name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17850,
        },
        {
          id: 348787,
          keyName: '?presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17850,
        },
        {
          id: 348788,
          keyName: '?presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17850,
        },
        {
          id: 348789,
          keyName: '?allowed_ips',
          keyValue: null,
          desp: 'allowed IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17850,
        },
        {
          id: 348790,
          keyName: '?dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17850,
        },
        {
          id: 348791,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17850,
        },
        {
          id: 348792,
          keyName: '?persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17850,
        },
      ],
      results: [
        {
          id: 747098,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17850,
        },
        {
          id: 747099,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(22：parameter missing 23：invalid length 24：empty name 25：uci config missing 26：failed to generate ip address 27：name already exists)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17850,
        },
        {
          id: 747100,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17850,
        },
      ],
    },
    set_peer: {
      data: {
        id: 17851,
        title: 'set_peer',
        desp: 'modify peer config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","set_peer",{"name":"test","peer_id":2844,"presharedkey_enable":true,"presharedkey":"","allowed_ips":["0.0.0.0/0,::/0"],"dns":"64.6.64.6","mtu":1420,"persistent_keepalive":25}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348793,
          keyName: 'name',
          keyValue: null,
          desp: 'Wireguard peer name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17851,
        },
        {
          id: 348794,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17851,
        },
        {
          id: 348795,
          keyName: 'presharedkey_enable',
          keyValue: null,
          desp: 'enable presharedkey',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17851,
        },
        {
          id: 348796,
          keyName: '?presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17851,
        },
        {
          id: 348797,
          keyName: '?allowed_ips',
          keyValue: null,
          desp: 'allowed IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17851,
        },
        {
          id: 348798,
          keyName: '?dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17851,
        },
        {
          id: 348799,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17851,
        },
        {
          id: 348800,
          keyName: '?persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17851,
        },
      ],
      results: [
        {
          id: 747101,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(22：parameter missing 23：invalid length 24：empty name 25：uci config missing 26：failed to generate ip address 27：name already exists)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17851,
        },
        {
          id: 747102,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17851,
        },
      ],
    },
    generate_peer: {
      data: {
        id: 17852,
        title: 'generate_peer',
        desp: 'Generate wireguard peer config',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","generate_peer",{"peer_id":2284}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result":{"address":"10.0.0.2/32","private_key":"oOMRHz5wTf5Gq6TPnpXLKIOhy54wx5XO7/4nquChIFI=","dns":"64.6.64.6","domain_end_point":"gwe10df.glddns.com:51820","ip_end_point":"116.77.73.248:51820","public_key":"m7pNpcTJxf2gqpmgSa3dCMgY0c2nP5rXHV7ume0/uzs=","allowed_ips":"0.0.0.0/0","persistent_keepalive":25,"mtu":1420}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348801,
          keyName: 'peer_id',
          keyValue: null,
          desp: 'peer id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17852,
        },
      ],
      results: [
        {
          id: 747103,
          keyName: 'address',
          keyValue: null,
          desp: 'address',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747104,
          keyName: 'dns',
          keyValue: null,
          desp: 'DNS',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747105,
          keyName: 'allowed_ips',
          keyValue: null,
          desp: 'allowed IP',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747106,
          keyName: 'domain_end_point',
          keyValue: null,
          desp: 'endpoint (domain format)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747107,
          keyName: 'ip_end_point',
          keyValue: null,
          desp: 'endpoint (ip format)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747108,
          keyName: 'persistent_keepalive',
          keyValue: null,
          desp: 'keepalive interval',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17852,
        },
        {
          id: 747109,
          keyName: 'private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747110,
          keyName: 'public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
        {
          id: 747111,
          keyName: 'mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17852,
        },
        {
          id: 747112,
          keyName: '?presharedkey',
          keyValue: null,
          desp: 'preshared key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17852,
        },
        {
          id: 747113,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(28：parameter missing 29：uci config missing 30：client not found 31：private key not exist 32：no internet 33：public key not exist)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17852,
        },
        {
          id: 747114,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17852,
        },
      ],
    },
    generate_key: {
      data: {
        id: 17853,
        title: 'generate_key',
        desp: 'Generate wireguard server private_key and public_key',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","generate_key",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result":{"private_key":"oOMRHz5wTf5Gq6TPnpXLKIOhy54wx5XO7/4nquChIFI=","public_key":"m7pNpcTJxf2gqpmgSa3dCMgY0c2nP5rXHV7ume0/uzs="}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747115,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17853,
        },
        {
          id: 747116,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17853,
        },
      ],
    },
    add_route: {
      data: {
        id: 17854,
        title: 'add_route',
        desp: 'add wireguard server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","add_route",{"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result":{}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348802,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17854,
        },
        {
          id: 348803,
          keyName: 'dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17854,
        },
        {
          id: 348804,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17854,
        },
        {
          id: 348805,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17854,
        },
        {
          id: 348806,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17854,
        },
        {
          id: 348807,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17854,
        },
      ],
      results: [
        {
          id: 747117,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17854,
        },
        {
          id: 747118,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17854,
        },
      ],
    },
    set_route: {
      data: {
        id: 17855,
        title: 'set_route',
        desp: 'set wireguard server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","set_route",{"rule_id":6512,"route_flag":4,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result":{}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348808,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17855,
        },
        {
          id: 348809,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17855,
        },
        {
          id: 348810,
          keyName: '?dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17855,
        },
        {
          id: 348811,
          keyName: '?gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17855,
        },
        {
          id: 348812,
          keyName: '?metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17855,
        },
        {
          id: 348813,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17855,
        },
        {
          id: 348814,
          keyName: '?scope',
          keyValue: '"link"',
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17855,
        },
      ],
      results: [
        {
          id: 747119,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17855,
        },
        {
          id: 747120,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17855,
        },
      ],
    },
    get_route_list: {
      data: {
        id: 17856,
        title: 'get_route_list',
        desp: 'get wireguard server custom route list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","get_route_list",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"ipv4_route_rules":[{"rule_id":6512,"dest":"192.168.9.13/32","gateway":"10.8.3.1","metric":20,"mtu":1500}],"ipv6_route_rules":[{"rule_id":6515,"dest":"ff00::/8","gateway":"ff00::1","metric":20,"mtu":1500}]}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747121,
          keyName: 'ipv4_route_rules',
          keyValue: null,
          desp: 'ipv4 route rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17856,
        },
        {
          id: 747122,
          keyName: 'ipv4_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747123,
          keyName: 'ipv4_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747124,
          keyName: '?ipv4_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747125,
          keyName: '?ipv4_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747126,
          keyName: '?ipv4_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747127,
          keyName: '?ipv4_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747128,
          keyName: 'ipv6_route_rules',
          keyValue: null,
          desp: 'ipv6 route rule',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17856,
        },
        {
          id: 747129,
          keyName: 'ipv6_route_rules.rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747130,
          keyName: 'ipv6_route_rules.dest',
          keyValue: null,
          desp: 'dest',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747131,
          keyName: '?ipv6_route_rules.gateway',
          keyValue: null,
          desp: 'gateway',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747132,
          keyName: '?ipv6_route_rules.metric',
          keyValue: null,
          desp: 'metric',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747133,
          keyName: '?ipv6_route_rules.mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747134,
          keyName: '?ipv6_route_rules.scope',
          keyValue: null,
          desp: 'scope (host、link、global、or a number greater than 0)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
        {
          id: 747135,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17856,
        },
        {
          id: 747136,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17856,
        },
      ],
    },
    remove_route: {
      data: {
        id: 17857,
        title: 'remove_route',
        desp: 'remove wireguard server custom route',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","remove_route",{"rule_id":6512,"route_flag":4}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result":{}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348815,
          keyName: 'route_flag',
          keyValue: null,
          desp: 'route flag 4:ipv4,6:ipv6',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17857,
        },
        {
          id: 348816,
          keyName: 'rule_id',
          keyValue: null,
          desp: 'rule id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17857,
        },
      ],
      results: [
        {
          id: 747137,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17857,
        },
        {
          id: 747138,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17857,
        },
      ],
    },
    set_setting: {
      data: {
        id: 17858,
        title: 'set_setting',
        desp: 'set wireguard server setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","set_setting",{"local_access":true,"masq":true,"client_to_client":true,"mtu":1460}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": {}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348817,
          keyName: '?local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17858,
        },
        {
          id: 348818,
          keyName: '?masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17858,
        },
        {
          id: 348819,
          keyName: '?client_to_client',
          keyValue: null,
          desp: 'enable client to client access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17858,
        },
        {
          id: 348820,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17858,
        },
      ],
      results: [
        {
          id: 747139,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17858,
        },
        {
          id: 747140,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17858,
        },
      ],
    },
    get_setting: {
      data: {
        id: 17859,
        title: 'get_setting',
        desp: 'get wireguard server setting',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","get_setting",{}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"local_access":true,"masq":true,"client_to_client":true,"mtu":1460}}',
      module_name: ['wg-server'],
      params: [],
      results: [
        {
          id: 747141,
          keyName: 'local_access',
          keyValue: null,
          desp: 'allow local access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17859,
        },
        {
          id: 747142,
          keyName: 'masq',
          keyValue: null,
          desp: 'enable masq',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17859,
        },
        {
          id: 747143,
          keyName: 'client_to_client',
          keyValue: null,
          desp: 'enable client to client access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17859,
        },
        {
          id: 747144,
          keyName: '?mtu',
          keyValue: null,
          desp: 'MTU',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17859,
        },
        {
          id: 747145,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17859,
        },
        {
          id: 747146,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17859,
        },
      ],
    },
    generate_publickey: {
      data: {
        id: 17860,
        title: 'generate_publickey',
        desp: 'generate wireguard server public key',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg-server","generate_publickey",{"private_key":"XVpIdr+oYjTcgDwzSZmNa1nSsk8JO+tx1NBo17LDBAI="}],"id":1}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"public_key":"MANEa9SUz3kh6JujfX11rkj4Tw9WKnU7A9wmr4nmLiA="}}',
      module_name: ['wg-server'],
      params: [
        {
          id: 348821,
          keyName: 'private_key',
          keyValue: null,
          desp: 'private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17860,
        },
      ],
      results: [
        {
          id: 747147,
          keyName: 'public_key',
          keyValue: null,
          desp: 'public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17860,
        },
        {
          id: 747148,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error Code(10：parameter missing 11：failed to generate public key)',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17860,
        },
        {
          id: 747149,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error Message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17860,
        },
      ],
    },
  },
  {
    module_name: ['wg_client'],
    gen_key: {
      data: {
        id: 17835,
        title: 'gen_key',
        desp: 'Generate a new private key and a public key',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","gen_key",{"private_key":"8OCHkH3DTKVtrKo/B/gxzFn9SAtTldI4yNzdMCTEVFM="}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"public_key":"NpSVHOUs5UBgKMsr4MJtiWncbq+PkgnYyXDAQ8ZlvU0=\\n","private_key":"8OCHkH3DTKVtrKo\\/B\\/gxzFn9SAtTldI4yNzdMCTEVFM="}}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348756,
          keyName: '?private_key',
          keyValue: null,
          desp: 'Private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17835,
        },
      ],
      results: [
        {
          id: 747018,
          keyName: 'public_key',
          keyValue: null,
          desp: 'Public key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17835,
        },
        {
          id: 747019,
          keyName: 'private_key',
          keyValue: null,
          desp: 'Private key',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17835,
        },
        {
          id: 747020,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001207: "Key is not the correct length or format"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17835,
        },
        {
          id: 747021,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17835,
        },
      ],
    },
    get_provider_server_list: {
      data: {
        id: 17836,
        title: 'get_provider_server_list',
        desp: 'Get third part provider server list',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","get_provider_server_list",{"group_id":4408, "username":"test", "password":"123456"}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"provider":"Surfshark","server_info":[{"country_name":"United States","cities":[{"city_id":"dbe53459-2fe7-4679-b318-f65b4d704902","city_name":"Seattle","hostname":["us-sea.prod.surfshark.com"]},{"city_id":"9e8e411b-54a2-44b3-a410-ceb3a44f408b","city_name":"Bend","hostname":["us-bdn.prod.surfshark.com"]},{"city_id":"acfbb50d-520b-47aa-8c68-56327fa513fc","city_name":"San Francisco","hostname":["us-sfo.prod.surfshark.com"]},{"city_id":"f3848fad-6836-4bf7-bda1-08cd1ad91e9a","city_name":"San Jose","hostname":["us-sjc.prod.surfshark.com"]},{"city_id":"aadc5167-ee87-4190-8917-6d7028f0aefe","city_name":"Salt Lake City","hostname":["us-slc.prod.surfshark.com"]},{"city_id":"9f0ed7c6-b694-4c6c-b01e-a878852df83a","city_name":"Los Angeles","hostname":["us-lax.prod.surfshark.com"]},{"city_id":"6fdfb9ae-8c41-4d1e-ab74-f2b46c6f36d8","city_name":"Las Vegas","hostname":["us-las.prod.surfshark.com"]},{"city_id":"ed58ed6d-48ed-4c2a-b6c8-7a101d4b9df5","city_name":"Denver","hostname":["us-den.prod.surfshark.com"]},{"city_id":"4e5279a4-9962-4adc-be8a-72ba668ea670","city_name":"Phoenix","hostname":["us-phx.prod.surfshark.com"]},{"city_id":"c187ef46-5453-4ed3-895f-a1b3df02ae08","city_name":"Chicago","hostname":["us-chi.prod.surfshark.com"]},{"city_id":"1c14f2f0-1156-4695-81da-ded69cf58876","city_name":"Detroit","hostname":["us-dtw.prod.surfshark.com"]},{"city_id":"30cb5a75-8937-4e3d-9813-84392ecb1f6b","city_name":"Kansas City","hostname":["us-kan.prod.surfshark.com"]},{"city_id":"fcc03a18-317e-42e5-b32c-605462d5abb3","city_name":"Buffalo","hostname":["us-buf.prod.surfshark.com"]},{"city_id":"4683fe1f-01c0-4fdf-8475-a7abe2faacbe","city_name":"Latham","hostname":["us-ltm.prod.surfshark.com"]},{"city_id":"b146903e-f0d4-4a87-975c-0c227ed69c24","city_name":"Boston","hostname":["us-bos.prod.surfshark.com"]},{"city_id":"71d5961f-4b6c-4a9c-98b7-505435e3e466","city_name":"New York","hostname":["us-nyc.prod.surfshark.com"]},{"city_id":"d5a988fe-33a2-4bc5-afc4-eb22486d7809","city_name":"Dallas","hostname":["us-dal.prod.surfshark.com"]},{"city_id":"1ba167e0-a964-4742-887e-672d6511605e","city_name":"Ashburn","hostname":["us-ash.prod.surfshark.com"]},{"city_id":"e7a0250c-2b09-4cc6-a936-e55cd58169ea","city_name":"Charlotte","hostname":["us-clt.prod.surfshark.com"]},{"city_id":"fb3c5eed-ad76-4633-a233-f9f0c55a28c6","city_name":"Atlanta","hostname":["us-atl.prod.surfshark.com"]},{"city_id":"2c204c08-91cd-4eb9-8f45-6f0e62b5c73a","city_name":"Houston","hostname":["us-hou.prod.surfshark.com"]},{"city_id":"16faed5a-475a-421e-b3dd-7ee70e3fc9b9","city_name":"Miami","hostname":["us-mia.prod.surfshark.com"]}],"country_id":"US"}]}}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348757,
          keyName: 'group_id',
          keyValue: null,
          desp: 'group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17836,
        },
        {
          id: 348758,
          keyName: 'username',
          keyValue: null,
          desp: 'username',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 348759,
          keyName: '?password',
          keyValue: null,
          desp: 'password',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
      ],
      results: [
        {
          id: 747022,
          keyName: 'provider',
          keyValue: null,
          desp: 'Provider name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747023,
          keyName: 'server_info',
          keyValue: null,
          desp: 'Server list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17836,
        },
        {
          id: 747024,
          keyName: '?server_info.country_id',
          keyValue: null,
          desp: 'Country id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747025,
          keyName: '?server_info.country_code',
          keyValue: null,
          desp: 'Country code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747026,
          keyName: 'server_info.country_name',
          keyValue: null,
          desp: 'Country name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747027,
          keyName: 'server_info.cities',
          keyValue: null,
          desp: 'City list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17836,
        },
        {
          id: 747028,
          keyName: 'server_info.cities.city_id',
          keyValue: null,
          desp: 'City id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747029,
          keyName: 'server_info.cities.city_name',
          keyValue: null,
          desp: 'City name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17836,
        },
        {
          id: 747030,
          keyName: 'server_info.cities.hostname',
          keyValue: null,
          desp: 'Server list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17836,
        },
        {
          id: 747031,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001011: "parameter missing"; 20001012: "invalid parameter"; 20001107:"download configuration file failed"; 20001100:"invalid login info"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17836,
        },
        {
          id: 747032,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17836,
        },
      ],
    },
    generate_provider_config: {
      data: {
        id: 17837,
        title: 'generate_provider_config',
        desp: "Generate selected server's config",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","generate_provider_config",{"group_id":2182,"match_all":false,"server_info":[{"cities":[{"city_id":"ca_vancouver","city_name":"CA Vancouver","hostname":["vancouver431"]},{"city_id":"ca_ontario-so","city_name":"CA Ontario Streaming Optimized","hostname":["ontario416"]},{"city_id":"ca_ontario","city_name":"CA Ontario","hostname":["ontario437"]}],"country_name":"CA"}]}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348760,
          keyName: 'group_id',
          keyValue: null,
          desp: 'Group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17837,
        },
        {
          id: 348761,
          keyName: 'server_info',
          keyValue: null,
          desp: 'Server list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17837,
        },
        {
          id: 348762,
          keyName: 'match_all',
          keyValue: null,
          desp: 'Whether to generate all the configurations for the selected city',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17837,
        },
        {
          id: 348763,
          keyName: '?server_info.country_id',
          keyValue: null,
          desp: 'Country id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
        {
          id: 348764,
          keyName: '?server_info.country_code',
          keyValue: null,
          desp: 'Country code',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
        {
          id: 348765,
          keyName: 'server_info.country_name',
          keyValue: null,
          desp: 'Country name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
        {
          id: 348766,
          keyName: 'server_info.cities',
          keyValue: null,
          desp: 'City list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17837,
        },
        {
          id: 348767,
          keyName: '?server_info.cities.city_id',
          keyValue: null,
          desp: 'City id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
        {
          id: 348768,
          keyName: 'server_info.cities.city_name',
          keyValue: null,
          desp: 'City name',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
        {
          id: 348769,
          keyName: '?server_info.cities.hostname',
          keyValue: null,
          desp: 'Server list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17837,
        },
      ],
      results: [
        {
          id: 747033,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001011: "parameter missing"; 20001012: "invalid parameter"; 20001101:"unknown provider"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17837,
        },
        {
          id: 747034,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17837,
        },
      ],
    },
    update_provider_config: {
      data: {
        id: 17838,
        title: 'update_provider_config',
        desp: "update selected server's config",
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","update_provider_config",{"group_id":5928, "update_all":false, "peer_id":8885}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348770,
          keyName: 'group_id',
          keyValue: null,
          desp: 'Group id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17838,
        },
        {
          id: 348771,
          keyName: 'update_all',
          keyValue: null,
          desp: 'Whether to update all saved configurations',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17838,
        },
        {
          id: 348772,
          keyName: '?peer_id',
          keyValue: null,
          desp: 'Peer_id to update',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17838,
        },
      ],
      results: [
        {
          id: 747035,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001011: "parameter missing"; 20001012: "invalid parameter"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17838,
        },
        {
          id: 747036,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17838,
        },
      ],
    },
    get_max_client: {
      data: {
        id: 17839,
        title: 'get_max_client',
        desp: 'Calculate how many client configurations the available memory can be used to save',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","get_max_client",{}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":{"max_client":435110}}',
      module_name: ['wg_client'],
      params: [],
      results: [
        {
          id: 747037,
          keyName: 'max_client',
          keyValue: null,
          desp: 'The max clients can be set[0: not memory available]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17839,
        },
      ],
    },
    get_provider_user_info: {
      data: {
        id: 17840,
        title: 'get_provider_user_info',
        desp: 'Get account information',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","get_provider_user_info",{"group_id":676}],"id":1}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"allocated":10,"available":0,"expires_at":1735689600}}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348773,
          keyName: 'group_id',
          keyValue: null,
          desp: 'Group id of third part provider',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17840,
        },
      ],
      results: [
        {
          id: 747038,
          keyName: 'expires_at',
          keyValue: null,
          desp: 'Expiration time',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17840,
        },
        {
          id: 747039,
          keyName: '?allocated',
          keyValue: null,
          desp: 'Number of allocated users',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17840,
        },
        {
          id: 747040,
          keyName: '?available',
          keyValue: null,
          desp: 'Number of available users',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17840,
        },
        {
          id: 747041,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001011: "parameter missing"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17840,
        },
        {
          id: 747042,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17840,
        },
      ],
    },
    create_provider_account: {
      data: {
        id: 17841,
        title: 'create_provider_account',
        desp: 'Create new third part provider account',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","create_provider_account",{"group_id":676, "username":"testnew3","password":"12345678"}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348774,
          keyName: 'group_id',
          keyValue: null,
          desp: 'Group id of third part provider',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17841,
        },
        {
          id: 348775,
          keyName: 'username',
          keyValue: null,
          desp: 'Username [can only contain letters and numbers]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17841,
        },
        {
          id: 348776,
          keyName: 'password',
          keyValue: null,
          desp: 'Password [at least 8 characters]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17841,
        },
      ],
      results: [
        {
          id: 747043,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001207: "the password must be at least 8 characters"; 20001208: "the username has already been taken"; 20001209: "the username may only contain letters and numbers";]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17841,
        },
        {
          id: 747044,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17841,
        },
      ],
    },
    start_random_client: {
      data: {
        id: 17842,
        title: 'start_random_client',
        desp: 'Start random client of the selected group',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:27',
        create_time: '2024-11-19T17:55:27',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","wg_client","start_random_client",{"group_id":676, "peer_id":654}],"id":1}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wg_client'],
      params: [
        {
          id: 348777,
          keyName: 'group_id',
          keyValue: null,
          desp: 'Group id of third part provider',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17842,
        },
        {
          id: 348778,
          keyName: '?peer_id',
          keyValue: null,
          desp: 'Peer id of third part provider',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17842,
        },
        {
          id: 348779,
          keyName: '?peer_count',
          keyValue: null,
          desp: 'Peer count of selected group',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17842,
        },
      ],
      results: [
        {
          id: 747045,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code [20001011: "parameter missing"; 20001213: "vpn client failed to connect to server"]',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17842,
        },
        {
          id: 747046,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error data',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17842,
        },
      ],
    },
  },
  {
    module_name: ['wifi'],
    get_status: {
      data: {
        id: 17461,
        title: 'get_status',
        desp: 'get WiFi device status.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","get_status",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"res":[{"state":"ready","name":"mt798112","channel":44},{"state":"ready","name":"mt798111","channel":4}]}}',
      module_name: ['wifi'],
      params: [],
      results: [
        {
          id: 747216,
          keyName: 'res',
          keyValue: null,
          desp: 'WiFi device status information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17461,
        },
        {
          id: 747217,
          keyName: 'res.name',
          keyValue: null,
          desp: 'Device name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17461,
        },
        {
          id: 747218,
          keyName: 'res.state',
          keyValue: null,
          desp: 'WiFi device status:[{starting:starting};{ ready: normal};{ conflict: conflicting with the relay channel}].',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17461,
        },
        {
          id: 747219,
          keyName: '?res.channel',
          keyValue: null,
          desp: 'Current channel.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17461,
        },
      ],
    },
    get_config: {
      data: {
        id: 17462,
        title: 'get_config',
        desp: 'get all WiFi configuration information of the system.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","get_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"res":[{"band":"2G","ifaces":[{"enabled":true,"ssid":"test","encryption":"psk2","name":"wifi2g","guest":false,"hidden":false,"key":"goodlife"},{"enabled":false,"ssid":"GL-MT3000-1d0-Guest","encryption":"psk2","name":"guest2g","guest":true,"hidden":false,"key":"goodlife"}],"channels":[{"dfs":false,"channel":1},{"dfs":false,"channel":2},{"dfs":false,"channel":3},{"dfs":false,"channel":4},{"dfs":false,"channel":5},{"dfs":false,"channel":6},{"dfs":false,"channel":7},{"dfs":false,"channel":8},{"dfs":false,"channel":9},{"dfs":false,"channel":10},{"dfs":false,"channel":11}],"device":"mt798111","hwmode":"11g\\/n\\/ax","txpower":"Max","channel":0,"hwmodes":["11n\\/ax","11g\\/n\\/ax","11b\\/g\\/n\\/ax","11b\\/g\\/n"],"htmode":"auto","random_bssid":true,"encryptions":["none","psk2","psk-mixed","sae","sae-mixed"],"htmodes":{"11b\\/g\\/n":40,"11b\\/g\\/n\\/ax":40,"auto":true,"11n\\/ax":40,"11g\\/n\\/ax":40}},{"band":"5G","ifaces":[{"enabled":true,"ssid":"test-5G","encryption":"psk2","name":"wifi5g","guest":false,"hidden":false,"key":"goodlife"},{"enabled":false,"ssid":"GL-MT3000-1d0-5G-Guest","encryption":"psk2","name":"guest5g","guest":true,"hidden":false,"key":"goodlife"}],"channels":[{"dfs":false,"channel":36},{"dfs":false,"channel":40},{"dfs":false,"channel":44},{"dfs":false,"channel":48},{"dfs":true,"channel":52},{"dfs":true,"channel":56},{"dfs":true,"channel":60},{"dfs":true,"channel":64},{"dfs":true,"channel":100},{"dfs":true,"channel":104},{"dfs":true,"channel":108},{"dfs":true,"channel":112},{"dfs":true,"channel":116},{"dfs":true,"channel":120},{"dfs":true,"channel":124},{"dfs":true,"channel":128},{"dfs":true,"channel":132},{"dfs":true,"channel":136},{"dfs":true,"channel":140},{"dfs":true,"channel":144},{"dfs":false,"channel":149},{"dfs":false,"channel":153},{"dfs":false,"channel":157},{"dfs":false,"channel":161},{"dfs":false,"channel":165}],"device":"mt798112","hwmode":"11a\\/n\\/ac\\/ax","txpower":"Max","channel":0,"hwmodes":["11ac\\/ax","11n\\/ac\\/ax","11a\\/n\\/ac\\/ax","11a\\/n\\/ac"],"htmode":"80","random_bssid":true,"encryptions":["none","psk2","psk-mixed","sae","sae-mixed"],"htmodes":{"11a\\/n\\/ac":160,"11n\\/ac\\/ax":160,"11a\\/n\\/ac\\/ax":160,"11ac\\/ax":160,"auto":false}}],"dfs_support":true}}',
      module_name: ['wifi'],
      params: [],
      results: [
        {
          id: 747220,
          keyName: 'dfs_support',
          keyValue: null,
          desp: 'Whether to support DFS.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17462,
        },
        {
          id: 747221,
          keyName: 'res',
          keyValue: null,
          desp: 'All WiFi configuration information.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17462,
        },
        {
          id: 747222,
          keyName: 'res.random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17462,
        },
        {
          id: 747223,
          keyName: 'res.hwmodes',
          keyValue: null,
          desp: 'List of supported hardware modes.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17462,
        },
        {
          id: 747224,
          keyName: 'res.htmodes',
          keyValue: null,
          desp: 'The maximum bandwidth supported by each hardware mode，The auto option indicates whether to support automatic bandwidth (20/40).{"11b/g/n": 40, "11b/g/n/ax": 40, "auto": true, "11n/ax": 40, "11g/n/ax": 40}',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'object',
          caseID_id: 17462,
        },
        {
          id: 747225,
          keyName: 'res.channels',
          keyValue: null,
          desp: 'List of supported channels.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17462,
        },
        {
          id: 747226,
          keyName: 'res.encryptions',
          keyValue: null,
          desp: 'List of supported encryption.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17462,
        },
        {
          id: 747227,
          keyName: 'res.band',
          keyValue: null,
          desp: 'WiFi band ("2G" or "5G").',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747228,
          keyName: 'res.hwmode',
          keyValue: null,
          desp: 'Currently configured hardware mode.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747229,
          keyName: 'res.htmode',
          keyValue: null,
          desp: 'The currently configured bandwidth.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747230,
          keyName: 'res.channel',
          keyValue: null,
          desp: 'The currently configured channel (0 means auto).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17462,
        },
        {
          id: 747231,
          keyName: 'res.txpower',
          keyValue: null,
          desp: 'Currently configured power.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747232,
          keyName: 'res.device',
          keyValue: null,
          desp: 'WiFi device name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747233,
          keyName: 'res.ifaces',
          keyValue: null,
          desp: 'WiFi interface configuration list',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'array',
          caseID_id: 17462,
        },
        {
          id: 747234,
          keyName: 'res.ifaces.enabled',
          keyValue: null,
          desp: 'Whether to open.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17462,
        },
        {
          id: 747235,
          keyName: 'res.ifaces.ssid',
          keyValue: null,
          desp: 'WiFi name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747236,
          keyName: 'res.ifaces.hidden',
          keyValue: null,
          desp: 'Whether to hide SSID.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17462,
        },
        {
          id: 747237,
          keyName: 'res.ifaces.encryption',
          keyValue: null,
          desp: 'Way of encryption.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747238,
          keyName: 'res.ifaces.key',
          keyValue: null,
          desp: 'Password.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
        {
          id: 747239,
          keyName: 'res.ifaces.guest',
          keyValue: null,
          desp: 'Is it guest WiFi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17462,
        },
        {
          id: 747240,
          keyName: 'res.ifaces.name',
          keyValue: null,
          desp: 'Interface name.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17462,
        },
      ],
    },
    set_config: {
      data: {
        id: 17463,
        title: 'set_config',
        desp: 'set WiFi parameters.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","set_config",{"iface_name":"wifi5g","ssid":"test-5G","encryption":"psk2","hidden":false,"key":"goodlife","device":"mt798112","hwmode":"11a/n/ac/ax","channel":0,"htmode":"80","txpower":"Max","random_bssid":true}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wifi'],
      params: [
        {
          id: 348855,
          keyName: '?random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17463,
        },
        {
          id: 348856,
          keyName: '?device',
          keyValue: null,
          desp: 'Device name (optional value obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348857,
          keyName: '?hwmode',
          keyValue: null,
          desp: 'Hardware mode (requires device parameter, optional value obtained from get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348858,
          keyName: '?htmode',
          keyValue: null,
          desp: 'Bandwidth(requires device parameter, optional value can be obtained from get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348859,
          keyName: '?channel',
          keyValue: null,
          desp: 'Channel (requires device parameter, 0 means automatic, optional value is obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17463,
        },
        {
          id: 348860,
          keyName: '?txpower',
          keyValue: null,
          desp: 'Transmission power (requires device parameter, optional values: Max, High, Medium, Low).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348861,
          keyName: '?iface_name',
          keyValue: null,
          desp: 'Interface name (obtained from get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348862,
          keyName: '?enabled',
          keyValue: null,
          desp: 'Whether to enable WiFi (requires iface_name parameter).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17463,
        },
        {
          id: 348863,
          keyName: '?ssid',
          keyValue: null,
          desp: 'WiFi name (maximum 32 characters, requires iface_name parameter).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348864,
          keyName: '?hidden',
          keyValue: null,
          desp: 'Whether to hide WiFi (requires iface_name parameter).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17463,
        },
        {
          id: 348865,
          keyName: '?encryption',
          keyValue: null,
          desp: 'Encryption method (requires iface_name parameter, optional value can be obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
        {
          id: 348866,
          keyName: '?key',
          keyValue: null,
          desp: 'Password (requires iface_name parameter, 8 ~ 63 characters).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17463,
        },
      ],
      results: [
        {
          id: 747241,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17463,
        },
        {
          id: 747242,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17463,
        },
      ],
    },
    set_txpower: {
      data: {
        id: 17464,
        title: 'set_txpower',
        desp: 'set the RF transmit power.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","set_txpower",{"txpower":"High","device":"mt798112"}]}',
      out_example: '{"id":1,"jsonrpc":"2.0","result":[]}',
      module_name: ['wifi'],
      params: [
        {
          id: 348867,
          keyName: 'device',
          keyValue: null,
          desp: 'Device name (obtained from get_config interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17464,
        },
        {
          id: 348868,
          keyName: 'txpower',
          keyValue: null,
          desp: 'Transmit power (available values: Max, High, Medium, Low).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17464,
        },
      ],
      results: [],
    },
    set_mlo_config: {
      data: {
        id: 17465,
        title: 'set_mlo_config',
        desp: 'set wifi7 feature mlo.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","set_mlo_config",{"name":"mld0","mlo_enable":true,"mlo_band":["2g","5g"],"random_bssid":true,"ssid":"TEST-mlo!!!","encryption":"psk2+ccmp","key":"1234567812","hidden":false}]}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['wifi'],
      params: [
        {
          id: 348869,
          keyName: 'name',
          keyValue: null,
          desp: 'MLO iface name (optional value obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
        {
          id: 348870,
          keyName: 'mlo_enable',
          keyValue: null,
          desp: 'Whether to enable MLO feature.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
        {
          id: 348871,
          keyName: 'mlo_band',
          keyValue: null,
          desp: 'Select the frequency band for MLO.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
        {
          id: 348872,
          keyName: 'random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17465,
        },
        {
          id: 348873,
          keyName: 'hidden',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17465,
        },
        {
          id: 348874,
          keyName: 'ssid',
          keyValue: null,
          desp: 'WiFi name (maximum 32 characters, requires iface_name parameter).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
        {
          id: 348875,
          keyName: 'encryption',
          keyValue: null,
          desp: 'Encryption method (requires iface_name parameter, optional value can be obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
        {
          id: 348876,
          keyName: 'key',
          keyValue: null,
          desp: 'Password (requires iface_name parameter, 8 ~ 63 characters).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17465,
        },
      ],
      results: [],
    },
    get_mlo_config: {
      data: {
        id: 17466,
        title: 'get_mlo_config',
        desp: 'get all MLO WiFi configuration information of the system.',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:30',
        create_time: '2024-11-19T17:55:30',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","id":1,"method":"call","params":["","wifi","get_mlo_config",{}]}',
      out_example:
        '{"id":1,"jsonrpc":"2.0","result":{"res":{"mlo_bandsupport":["2g","5g"],"ifaces":[{"guest":false,"mlo_band":["2g","5g"],"ssid":"GL-BE3600-ca0-MLO1","encryption":"sae","name":"mld0","mlo_enable":true,"hidden":false,"key":"goodlife"},{"guest":true,"mlo_band":["2g","5g"],"ssid":"GL-BE3600-ca0-MLO-Guest","encryption":"sae","name":"mld1","mlo_enable":false,"hidden":true,"key":"goodlife"}],"encryptions":["none","psk2","psk-mixed","sae","sae-mixed"]}}}',
      module_name: ['wifi'],
      params: [
        {
          id: 348877,
          keyName: 'res.mlo_bandsupport',
          keyValue: null,
          desp: 'Band of the wifi support for MLO.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348878,
          keyName: 'res.encryptions',
          keyValue: null,
          desp: 'List of supported encryption.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348879,
          keyName: 'res.random_bssid',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17466,
        },
        {
          id: 348880,
          keyName: 'res.ifaces.name',
          keyValue: null,
          desp: 'MLO iface name (optional value obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348881,
          keyName: 'res.ifaces.mlo_enable',
          keyValue: null,
          desp: 'Whether to enable MLO feature.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348882,
          keyName: 'res.ifaces.mlo_band',
          keyValue: null,
          desp: 'Select the frequency band for MLO.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348883,
          keyName: 'res.ifaces.hidden',
          keyValue: null,
          desp: 'Whether to allow randomized bssid',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17466,
        },
        {
          id: 348884,
          keyName: 'res.ifaces.ssid',
          keyValue: null,
          desp: 'WiFi name (maximum 32 characters, requires iface_name parameter).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348885,
          keyName: 'res.ifaces.encryption',
          keyValue: null,
          desp: 'Encryption method (requires iface_name parameter, optional value can be obtained from the get interface).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
        {
          id: 348886,
          keyName: 'res.ifaces.key',
          keyValue: null,
          desp: 'Password (requires iface_name parameter, 8 ~ 63 characters).',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17466,
        },
      ],
      results: [
        {
          id: 747243,
          keyName: 'res.ifaces.guest',
          keyValue: null,
          desp: 'Is it guest WiFi.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17466,
        },
      ],
    },
  },
  {
    module_name: ['zerotier'],
    get_config: {
      data: {
        id: 17861,
        title: 'get_config',
        desp: 'Get zerotier settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","zerotier","get_config"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"id": "22222222", "enable": true, "lan_enabled": true, "wan_enabled": false}}',
      module_name: ['zerotier'],
      params: [],
      results: [
        {
          id: 747150,
          keyName: 'id',
          keyValue: null,
          desp: 'zerotier network id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17861,
        },
        {
          id: 747151,
          keyName: 'enabled',
          keyValue: null,
          desp: 'Whether to enable zerotier',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17861,
        },
        {
          id: 747152,
          keyName: 'lan_enabled',
          keyValue: null,
          desp: 'Whether to enable lan side access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17861,
        },
        {
          id: 747153,
          keyName: 'wan_enabled',
          keyValue: null,
          desp: 'Whether to enable wan side access',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17861,
        },
        {
          id: 747154,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get settings.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17861,
        },
        {
          id: 747155,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17861,
        },
      ],
    },
    set_config: {
      data: {
        id: 17862,
        title: 'set_config',
        desp: 'Set zerotier settings',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example:
        '{"jsonrpc":"2.0","method":"call","params":["","zerotier","set_config",{"enabled":true,"lan_enabled":true,"wan_enabled":true,"id":"1234679862"}],"id":1}',
      out_example: '{"jsonrpc": "2.0", "id": 1, "result": null}',
      module_name: ['zerotier'],
      params: [
        {
          id: 348822,
          keyName: 'lan_enabled',
          keyValue: null,
          desp: 'Whether to allow lan side access: false: Disable, true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17862,
        },
        {
          id: 348823,
          keyName: 'wan_enabled',
          keyValue: null,
          desp: 'Whether to allow lan side access: false: Disable, true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17862,
        },
        {
          id: 348824,
          keyName: 'enabled',
          keyValue: null,
          desp: 'Status of zerotier：false :Disable， true：Enable',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'bool',
          caseID_id: 17862,
        },
        {
          id: 348825,
          keyName: 'id',
          keyValue: null,
          desp: 'zerotier network id',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17862,
        },
      ],
      results: [
        {
          id: 747156,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:illegal parameter.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17862,
        },
        {
          id: 747157,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17862,
        },
      ],
    },
    get_status: {
      data: {
        id: 17863,
        title: 'get_status',
        desp: 'Get zerotier status',
        Auditor__username: 'GL',
        audit_time: '2024-11-19T17:55:28',
        create_time: '2024-11-19T17:55:28',
        creater__username: 'GL',
        audiVerify__name: '已审核',
        caseType__name: 'API测试类',
        caseID_api__audit: true,
      },
      in_example: '{"jsonrpc":"2.0","id":1,"method":"call","params":["","zerotier","get_status"]}',
      out_example:
        '{"jsonrpc": "2.0", "id": 1, "result": {"status": 0, "zerotier_ip": "192.168.17.144", "lan_ip": "192.168.8.0/24", "wan_ip": "192.168.83.0/24", "secondwan_ip":"192.168.22.0/24", "wwan_ip": "192.168.66.0/24"}}',
      module_name: ['zerotier'],
      params: [],
      results: [
        {
          id: 747158,
          keyName: 'status',
          keyValue: null,
          desp: '0:connection succeeded, 1:connecting, 2:unauthorized, 3:The network id was not found',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17863,
        },
        {
          id: 747159,
          keyName: 'zerotier_ip',
          keyValue: null,
          desp: 'After the connection is successful, return the zerotier server ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
        {
          id: 747160,
          keyName: 'lan_ip',
          keyValue: null,
          desp: 'Enable to allow lan side access and return lan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
        {
          id: 747161,
          keyName: 'wan_ip',
          keyValue: null,
          desp: 'Enable to allow wan side access and return wan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
        {
          id: 747162,
          keyName: 'secondwan_ip',
          keyValue: null,
          desp: 'Enable to allow wan side access and return secondwan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
        {
          id: 747163,
          keyName: 'wwan_ip',
          keyValue: null,
          desp: 'Enable to allow wan side access and return wwan ip',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
        {
          id: 747164,
          keyName: '?err_code',
          keyValue: null,
          desp: 'Error code,-1:Failed to get settings.',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'number',
          caseID_id: 17863,
        },
        {
          id: 747165,
          keyName: '?err_msg',
          keyValue: null,
          desp: 'Error message',
          status: true,
          caseUse__use: '功能测试',
          dataType__name: 'string',
          caseID_id: 17863,
        },
      ],
    },
  },
];
